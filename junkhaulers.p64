picotron cartridge // www.picotron.net
version 2

:: gfx/
:: gfx/0.gfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE0OjA1OjM2Iixtb2RpZmllZD0iMjAyNS0w
Ni0wNSAxNjoxNDoxMiIscmV2aXNpb249MTk2N11dbHo0AHuKAACk4gAA8Sh7WzBdPXtibXA9cHh1
AEMgEBAE8FYHEAfAF9AXwAcQB-BWLGZsYWdzPTAscGFuX3g9LTAuMTI1DQAQeQ0A2jYyNSx6b29t
PTExfSxJAPAfIB8eUB5gfnAGHxwfEB8cBjAOEAYtHxAtBhAuBj0cPQYeAA69DhAOB50HDhAOtwoA
Rz0XPQcIAP8SFy0XLRcOAB4GFx0XHRcGLhAGdwYQDjAGVwZwfmAeUB4gnAAv-wN5cAkVGRUJYAl1
CVAJBRkVGQUIAA4hQBkIACwZMAgAryUZFRklINkQ1QCYACfwBfAUeGAYEhgSGEAoEhgSKDAoFRgV
BgAhHx0HABUeBgCxGA4VHhUOGDAYDlUGAD4FOwUIAH9Qfx5gHVAdKAEoMBAWFQIAEiAHACMWAAgA
KxUGCAArFgUIAA8iACoTABMAIgUgEwAvBRDCACfwFDAPERAeEA6AXxCADVwNYJ0gDgAdfB0ADgAN
DA0MXQwNDA0QCgAhDTsGACcADg0AFx4MACcOAA0AFRA8ABMATgCgIJ1gDVwNgF2ADm0AHzCZAi3w
Gg4DMAMOcHMwDhATWxMQLhMLXxsLEx4AEwsNWw0LEyADCw0LPQsNCwMwCgA-DRsNDAACASIAEyA0
AIEAHhMLXQsTLlEAQQ4wc3BjAA9GAy4QGa0A8QdQDlC9EA4ADTYfDzYNAC4NNhw2DR4QBwATMAYA
E5wEAAYUACEQHgcAIS4ABwB-AA4QvVAOUJEANFFWDnAGV3AEYBcPHBcNF3IEcRddFwYeAAZUBDEG
EAZkBEcGEAa3DAAECABIF30XBnYEIRcNRAACegQvDlalAC1g8AMPERAOAgDxA0C9IA4NOx8POw0O
IA07HDsNMAYAISAOBwAjDiA3AQYQAA8kAAAyvUAOTQAv8AOTADZAOh8POm8AUTocOg0wBgAhIA4H
AAiTAC86HCQAAg_TAERAOB8POG8AUTgcOA0wBgAhIA4HAAiTAC84HCQAAg_TADUDnAPwCVAOUBZ_
FhAOAAYwFhAmAD4gFhAmLhAOEA0AsA4wDgAWECYQDjAOBwDABg4wDgYQJhAWDjAOBwABIADAJhAW
EA4QLiYQFiA_DQCPMAYADhAWfhYAAzAv8PA8AP------------8JBaUN0PAEDtAusB7wUB6wLtAO
AA9vCi--CTYKAArQCbAKEAnAGQbQCQYACsAZwArwSVMAKJ93CtAK8AEK8EdEACjfZgrwAArQCuAK
EArwRrIBnw-uATL-DFC4EA4AODs4AC4YexgeEBgbPxsbGDAIG10bCAYAALEYGz0bGBAeGHsYLjUA
Pw4QuI8MMf86B28UgA5kYA4kLx8UMC4kHR4kEA5UPiQADgQOpA0ARA0UDjQNECQ9JA4UDRAUHS4U
DhQNIA4EDT40HSAULkQNQIQNUERNYE3wCYQAJ-AdQC8UwBQgBA5QBA7gBCAO4AQQJNAPHwRABOAE
DqAEIAQQFBAUEA0EYAQQFCAGABENFABg0BQAFKANFABPJMANBMgOKh-wPAD-VPFPABkAdwAZEBkH
FTcVBxkQFxUHBhcGBxUXEAc1NzUHAAdVF1UXEzUXNRMXExUXFRcVExdFBxUHRQcAB0UXRQcQFyUH
FQclFyAIBwUXFRcFBwgwGHcYMBgABwUfHAUHAAsAFz4IAD9gV0DoACkPPAD-keAnCuAK0CqwSoCK
gEqwKk4GL-A4iwApDzwA-------------76PZg8fBNAE8Gl-ACkPPAD-------------------ZT
yMgE8P8BAPEOhw8V8LYODxTw3I4gvnB_cJ4gvvACPjA_QD4gPlAIAPMx8CUOjxkOEA8UrxlwfXCd
IA8UrfACPQ4QDj0OMD0OEAwtDkA9DBAMPTAOPQzwIg6tDhAMnQxgDn0cQA6dIAydDC0AEUAsAFEM
DjAMLS4AEgwuAMQMEAzNMAytDiC9IAxYAHFADC0OEAxNKgDwBA49IAxNDPAUHrAOTQwtHA4QDD34
MMgwPUwtDiA9fCAMPWxhADFNHhCNABAgXwD2DRQewA49DoAMLQxAPSAOLQwwPQwgPQyQDC0M8Akz
ACJtEJIAkiBN8CQOPQweYDAAMAwtDIEAAAgACDIAAZsAMG0cPZoAcBBNDvAkDm0xABAwqAAIYgBm
AA4ADvAFZgAQzWMAmgAMTfAlDm0sMGMAADIARo0O8AMuANAtHH0MEA6NDPAoDH0MPgABLAASTY0A
R40M8AONAGAtDgB9DhAWAEEoDo0MLAAVPVcAGZ1WAFEMEA5dDCsAICsMCQAhrUCJAQEqADAtbJB4
MigOMFsAMAwgXekAUBxN8CwMWAFgTQwNDB0MNgAzTQ4QSwEQAJsACGUAEUBQAYEtDBBN8CwOPQsA
ErBoACcMLTMAKgwtNAAA2wEQIEQCVCMODUxNNwDxBgwADA5NDhBNDgwOPCAMPVwOgAw9PG4AGExu
AABfAEPwIwytNwBAzQwQvXwCIIAM3jUWzSkAAdoAcgzwIgydDA4rAAFIABEcqgKmgA4MjRwwDJ0c
IFgAcEA9DvAiDI3aARCwFgDyAT0MMJ0grQygDH0MUAyNDjAUAAQpAPADDhx_QB4MDsAMDgwOUAwO
DEBeCgDgMI4MDrAMLgweDHAMbgwYAGBQLgwwDC4KAACJAyBXDiYAQEAuDGAIACIMHggAEUAWABEg
BgAQkBYAAwQAMSAMHkwAIg5gEQBgDgwO8EZNfgMwQAx9nAERDmsBwT2QDM0QDr1gjQzwRp4AdECN
DkAMPUCHARC9AAKwDA4wHo0M8Ao_8ChCACAOQOoAAUIAJC0MQwARzSkAkvAJDgAOAB7wJ0wAAeEC
RgwtMA5RAACYAwICAPEBEA49XD0QDj188AlOAA7wJlsAA00DEzCDABA9CQIzoA49ZwFA8BAuEF8A
ESVfAAK-AgaJAABfAFMtDqAMPcQBcA7wDh4AHhBjA2YJDvALTUwpABggYAAxAE5AoQAANQTzBC7w
Cw4AHgAOAC7wCQwO8AoMzQzmABEgngADngIznQwwlQBQDn3wCl4yADDwJd1fADgOID1eAAEpAIBM
TRAODH0c8Eg4sBAeAC7wJQzNDiAOuwAZIL4AAC4AcM0MMA6N8AcrADNO8CUwAUE9DiBNygIHtwDx
CQ4cDhwOMA69DA5AHA4MTQwO8AceEB7wKBwBSBAO7RCxAABGAYCtDKAePQzwB90AISlNJQA73QwQ
agEAsQMQwCYAMT7wKq4FIQ4gJQARTNcAEGwPAyKMDnAFQA4gfD3yASHwK00AsAw9Xk0QDN0gDL0Q
EQIRPe0EQr0M8EX1BWAQDD1QDD0pAhEggQMDIwBxDBAOvQ7wRf0BIBBNfAJCMAydQEQAoQw9QA49
EAyt8EcFARBABgBwDhAMHQwNUAUAEjACNwMcACIdHAoAdQ0MEA4dDA0CAGwgHQwNQA4YAAXaBvEa
-zcO8FEu8B0e8CQe8B0MDvAgfvB_DvAgPgBO8K4_EB4AHvCsTjA_8KsXAvALED7wQQ7wXR4QTvA_
HkzwWo7wOgwOPB488FtVAfAANRwebB4MDjzwXR7wNA68jQSgDvARHvBOHvAf3A4A8AzwEh7wFx7w
JQ7wHvwHLvA4HvBSDvwL8JsefC7PAfAHbA4s8JoObA4cLgCsLgwO8H8u8AJ_PMADMR4AnMUDYPCA
DvABXtEDERwXABBsDAAxHvCR4ANADB4MTggAMUwOHCMAQQwO8JLLAnAMDhwQDA58EwBAbgwOcIIC
EoohABAAsQAwLgwOKwRgUJ4ADvCERgAQPhsAoCw_DB4MnjCuDxYOACDwgRkAMR4cHlcEEj4jANIM
DiD_AAwLDvCBjgwOUQADCACgbhB_EC4LbvCBHCUABFMAEQzoBPIGEO4LDAsMHgsO8GIdQDHwAi4M
HhAePgAwIB4QJwBwLhD_BAAOHCEAUiARHREAVwDwAPACDiAMDgxwLA4MMD4AvkMAAEUA8QA1DvAc
DQQQAQ0EDA0QDA5ZABAGTwXwBA5QHjCuQC4LDA4LLvA1HvAbRD3qACD_Bl0DY15gTgsODD8AkCQN
BB0_DP4KUL0E8AmOIH6AjvBhDSQdAR0_Cw4L-gYQ-gIgfiAcAPACDhCO8F8NBAANEB0R-gQAjgAa
AOAQDnB_8F8NEA0QBAANALoA8ggLDgtOAA4LfgseC04AjjAOAA4gjvBlDR4AcH4QPgAeCx7iNeBA
fiAOUH7wee4AbtCOMCUA8AQMHvBb3hAuCx4QfgAOID4QPlCeFABQTA5cDhBtAcMADgsuEK4gviCu
8GpyAfAN8AE_ED4QXhA_MP4EAC7wkL5A-gfwZw4cCz4APv0BALcC8xHg7kCuAI7waPsIEA4gXiD_
AUD_AvBoDvsIDhCeEE4ADgIA0x5g-gDwafsKDACeEF4UAPAHDpDO8GoM_wAcixAuAE4Q-gGQjvBr
_zoC8AYgPhBuAE4AHvAXDvBQDA4sAA77DAwnAfANEB7wDP4CDA6ADvBJDlxNAA6rYA6LDrD_A1BM
zXsDsFMMfQwdAA4bHFsMfjbxEYsOsGsNGwybDiAcDgz9AA7wTVw9DB08DQAOqwBOAA6LDTf1AjAO
_wcgLP0AHPBNDG1MHQwdHgDxBAA_AB4QDJsADpsMIBw9TI0M8Ew1BRAthwgEJgDwAQwQDgAuIBwL
TBt8HjwQPC1RAvADDj0MPQ7wRA4NHA0cLQwNTD0LqwBBAC4LDnUAYR4ADiAOHGMBQKwOPBCFBbAc
HgwtLC3wQE6NLEQEMB1LPXYAAJQBIAAMpwDwEQAeICwOEC4AbnwQHH0sLRwt8D8MXQxdLD0LDSsN
Cx0LtQAAwgZQiw6ALD6YAfAAAD58EAz9AAwtDvA-TF08UwABKgAAVwDQYA6LDGCMnnwQHP0DDKcA
8Bg8HQwtDB0LTVsADqsMCw4MDgsMmw5QDvwKDhAM-QQO8EoMPUwNDF0_APAJSwz7Bg4gDhAO-Ace
DQ4QTSwNHI0MDvBNNgXCXA0MTQAOOwwO_wIs7AbAEGwe3B4MDhBdDiyNoAHwKU0MDUwNXD0ADvsI
DAsMCw4gDiD8Bw4sEAxNDhwNDG0MHQ7wUw4tDA0cPRD7CQ4LDHA8DvwFDhA8ogAQDYYF8AosDvAz
HvAODjxtEA77BwwLDIAOvA5MDgBMPgaxLAAOAE4ALiAeAC5wAwECAPAF8B8O8BQMTjAL-AALXA7w
CEwOTA4qAeDwAH4A-gPwRg4MC9weXJM4gQ7wAawOoA4QNwDwADB_AP4E8EcOC9weTAsQLhMAESAC
AGEADhAOnDCTAQFoAXAeAP4R8EgOeQQhC4wGACEcECcAIQAuAgBRDjBeAC55OYL_FQA_8EkOMDYA
QW4QThBNAGAgDjAO8AIvAMT_BvBzHgBe8AAuAI5gAPAK8HkuIA5QPiAu8AAODB4AXgzwhQxOcD4A
LoMAsJwOHA58DvCBLtBepwnR-AousA7wcCyOIA4gPhEA8QEHPhxOUA7wcRwOTC4ccB4gcgIwLD5M
ZgVxMA7wdA48DqIFAYUAYCAeHA4cHlIAEmxtBaAe8HoMLiwODA4c0ADwF1AeTC5sDtxe8H5cDhxA
DkB8Dkw_XE4cLgwe8IEMDiwODCAOUB6skgAgPixjBuEsHvBHHhxADiAOXA7MDiUG0B7wLQ7wSg5A
DiAeLC5kCPAA-AJO8GgO8BoOTA6cDiwOigZQ8Gke8BlOBlAebA48TiYD8ADwog4MDmxOHD7wpR6M
DiwSADCnLowHAGMNDA7wjD6sANEODvCWHvD--60u8LYOhQdAeB7wthIABQEAoxoe8BYe8I8O8BYX
ABMZIgAgZQ4IAPIFWw4M8EoO8BUe8FkO8E0O8Fgu8LVKACz-mOoO5DMyLjc3NzM4MDk1MjM48w6R
My41NDI4NTcxBgATNP0ODzgPJx84OwD-XQiZEAcBAPFCHfEE8KTxBPCd8RXwk-EV8JLxF-CI8STw
g-El8H-xLvB68S7wefEw8HbxNPB08TTwcvEEAAEAcRABABEAERARIPEJ8G-xBfAL8QrwbvEFcA8V
ZAQBQAzxBkDxCvBs8QKw7xQOsPEE8GrxArAO3QsA8Alo4QAhQH7tfkAhAPEC8GXxAIAO-Q6Q8QEL
APAGMD4ADv0NXkDxAvBi4WAO-RiQ4fBgCQDwFBcOkOHwXvEBEF79GE5A4fBd8QAwDv0iYMHwXeFA
Du0O-REODADAwTAO-SkOQLHwW8FACQDxB8HwWdEQLv0qLhDB8FjBMA4E-S0OMKELACH9LgoA8iGR
MA79NA4wkfBWkUD9NECR8FSxEC79NC4ggfBTkUAO-TgOQGHwU6EwDv0nHu0OMHEMABAmCQwAQACG
UKEwDg0O-SQQAIAQLv0BLt0_-QMFsN0uIJHwUKEADv0EIAAhEA4WAEL9AUBxFgAQAGsGARkAVA0u
HQ6NHAC3TpEwDt0OYA7dDpAUACxA7RIA8QIwDo1eQC7dLnBOPQ4gHu0uECcA0Z2Q-QTATUD9AAQO
MFEmAOEdLh0ukP0EsC4dDkD9ARYAEXE9DK8dDoAO-QsOgA4NGQAWTK79C55HAC-9JBEADSC9DtIA
jzAO-QEOEC7dGQAMcRAuPQ4QbV4ZACFevRgA8AAADhBR8E5BMA5tDhBtDoAIAQE6AB8uFwALsT0_
EB0OIA5wEQ7dAQcdbR0AELAbABvQGQAjLiAZADDgLj0vDhROGQAjDkAZAD-wAQ4aAAI-DQ69HAAD
QA0OYA4fAGHdDhAhkBEhAEYNPj1_IwBdTWAh-QEdACFPMR0AcD0OAAEuAQBaAvADIQAOUA4hDj0u
EI4NfhBB8FEh4AHyBUA9DmEO-QZBDhBhDj0uQO4QIfBTGQCYTWEODR79A0EgGQDyAV5ATX79Bg4N
DoEuTS5AzjAVAIQwDv0VDoEObRIA8BkAARBeQC6t-gBtrk1OQM4QAQAh8FNRMC5gDq0O4A79BV5g
rhBB8FRBEgAWvREA8QNWIdAOjQ5AgUAO-QGu8AEh8FgRABAwOANCAY4NDhMAYQ7ADh0OXScAQO2_
8ABcAEBYQbAOrhNqDt2u8AFRDwCQQfBboTAOjS7gYwGQrmAhMHHwXaEwdwAS3Q4AIF6RcwEyIE4Q
EQBAYfBhcXAAuRAO-QZ_YFEwUfBiEADwFUHwZXEQLu0u-QZ_QHEwMfBmcUD9GE5wcTAh8GhhQC6N
ru1_YA0AUGpBYA6NWgJTfkBx8HQNAPAB7X4wcfB2UTAObS4QTiBObXkMQHEO8HcSAPAAQE1gDm1_
QGEO8HlBMF4dCwUQTXcJoP4AQGFQDvB1QWC_A5J_YHFgDg0O8HQPAPASXg0OYHFgLvB7IRD_D0CR
QG7weSFg-gWQYXAtPvAKHfBdDgDwBYBxUB4dTvAKHQ7wXUHwDpFgDl0_PRUp8FsOAJFcoeDxAkAu
bS4OAJhdkeDBkJ1O8AcMAPAIHh0O8F-xD5Au3U7wBw4NLvBd8Q_QHu0NALE98F4BIPEDAEFwThAA
wg0OHfBi8QLgDgT9AiAAAQ4AkP0DXvAGDj3wW8UAcBAO-Qs_8AUPABEdDgBhAA6dTvAEPACAWx1e
8AOO-QsQAFA98FtdBNEBI-0TDwAZbQ4A8AJ9Tg0eDV4NHv0GLr0ODU7wAhUAR-0fPt0LAEBe8AEO
TgNx8Fo9Dv0bLhAAYz0e8Fn9IAwAwC7wWG0OEP0TDhAubXgBSG7QHk0UAJBwbsBtLvBYTQ56BdKt
Pv0DDhBOHS4QzsBtJgAAZxcSDhYAXw4wDm1OGAAMNDAOjRgArkAODQ5tDg0uoB4bAFHNHpAOjRYA
AAEGACgAAxoA5BAuvT6ADm1O8FhtLhAuFwCRLjAO3U5wDl1eFwACMAAi-QQYAPEDXmAOXU7wWW0u
IC5dDhDOTR4gFgDyA0AuXT7wVR4gbS5ADl0O4D0OQBcARI0u8FYWAHAQfkAuDQ5AERQDGwBQVD4g
nUBvBfAABQ8WNQwFYC6Q-QFeQG1OGQAxTQ49GwAZVRgAwE4QnS4QLh0OMLUO4BQAIT1_FAAATwGo
Hi1ABTwlHAUMBRoA8AAuEE5ATnVOcB7tfjCu8FYSAJDwAQ4MVQwVDAUEA0DtfhDOFwDwAI0_8AEF
DKVgLu1_EL7wVygAgWBlDhAudQwFFAD1B57wWU4QPQ5NLmAFDAUMBRwFQBwFDFUbADAADp0aAEE1
DAVOMgBhzZ4QjvBaRgCABQyFDAUwDiUXAGK9rhB_8FsXACA8VRcAAEsAARgAQW7wXT5GABFORwDg
DgUOEE5gTn2uMC7wYi4ZAPAlsAUMBTwFHA7QDg0_bZ5QDvBjLhBOLU5wDiCVDiAOkF4d7lAO8FwN
Dj0OkA4NXmAFDCVwZS0AZP4A8GIObRQA8RBgDhwFDBUMDtAOHe7wYC4dThB_HV4wDgUORT4FDhAe
HADyATCuHc7wYB5NYA4EfV4wDhzyAAAZALAOPA4wDgStzvBgTlMGcV0eDV4wDrVWAnA1DjAOXQ5N
OQAAKQJgvV4wDuWAXQVQYC4gHkAPAFMMFQyVDhMAsBAuQB0uHa4wLsVOKAZATe7wYicAEB38B3AQ
fmAO5QwFDQCQPQ4QvvBkDjAe3gIDGwAQ9elGAhwAQK7wcS4WAGNOkA7VDlAVAFF_8HQeIBUAFOUU
APMEIG7wjh6VLmAOQC7wm4UO8K4_RYEMBgEAHPvbCkUzOS423ApENTEuOdwKHzHcChHzGRvxBvCi
8QbwmxEA8RAAIfCQAQ8TMQ7xCA5hDvCQ8RjwifEjDvCE8STpCvANLQ7wevEv8HTxOPBw8Tjwb-EH
DxUBHSE9AQANAb0SIAEg0QrwFgEO8QbwCgEO8QrwavEI8ArxDPBo8QTwAg3wBfEG8GbxBPAY8QbJ
CvYqPUB9DxT9ASANYD3xA-BhAQ7RDgGQ-Ang8QTwYPECMD0ADfwJbXDxBvBc8QFgDfwVDbDxAfBc
4QANDQDwCtENMA0MLfwWPQwNYB3h8FyxYA38Hw1ADSAMAPYHUB38Hw0gDUDxAPBYwWAN-CYNYOHw
VgoA8gqRDQENMC38Jy1ADdHwVpFgDfwqBAxgAQ6hDQCAKw0QDTDR8FMMAPAeMQ1QsfBScQ4BYPwy
DTANALHwUoENMC2cLfwlLQAdAB2R8FJhYA2MLRAN-CdgDQDwEA1QLUwNDA0wDfwJDSwd-Ag9IKHw
TpENYB1MDVAN-AjDAMMJDSDB8EyRDXANTGATAPAACA0wwfBMcQ0BEC0QDTytFQDxDy38BA0MDUCx
8ExxMA0cEA08DRAMBPwODZD8Bi1AkRYAMAwdABcAtA38Dw0QHVCMDZxNGQAAFQAwHw0wHgAS7BQA
HS0SAAMmAEYtEC0cFACnHA0ADfwgBAwwLBQAcxAN-CENIA0TAMBKYUANPBAN-CkNEOzqABRxEgCF
bE38HQ0Q-AETALkNAA1MHSBd-AVN7BgAAM0AjYAd-AItQA3cGQC-ED8PIA38Aw0QKxAeAAAwADsw
HQBeADsgHbwdACEbUB0ALytQHAAAIQtgHABJC3AtjB0AEA1EAWmADfwEsA0ZABIMdQEQgDYACBsA
EEF4AQA7ARBcuQEVBRwAoQwNEHHwSiEOATC0EoEQbA1g-AYNkG4AKAQQOQB3bG38By1gvDYABRsA
P-wXDRkAA9DcDTxdDB2sDSAdEA2sEAAaTR8AMuD8DhYAYFHwTEEwPRQAIcwNFQAwLaxdSQszAQ4B
LQCRvB0AvAAcLfwLzU8QvHoUcg0QMQ7wTyE4AGOcDSDsEA0fADAMDYwVABBBHgBQXRANjB0cALac
DfwADRAtDB18XRoANA1A3BoAMG1MfRgAFQEMAWKcDVANnDBUAEEsHVxdcQBQAfBOQRA6AIAtcAww
DCAtbHMBcC28DRBtLJ0-AIBBkKwEDfABnIEBAO0D8wQsXQwNAA0QIfBRQZANrA3wAQ2MGwAR3RcA
8gZUEZAN3LANDA2cDQwNbA1sTSDtEEEWAGDA-AYNbE3tAREMzgDwCQ3wU0Fg7F0AXfwEHXxNIA0A
vSBB8FQhDm4EEAMCA6kTTfAEIfBWYQ0wEQBBWEENMN8DMAANbBYAoQMNHA2sXSAN0A2iCxFgTgIS
EBwAYAQNrH3wAhkA8BpaUTAtHC0gfRD9B4x9IA0AHVBRDSHwWyEOASANIA08DZAN8AcNjH0QUaoL
AEUAYfATDWx9MA8AAaIC8RQMDfANDYxdUA1RHRBR8GBhQFwEDcANgA1ADYxdIA0QYQ0RDRcA8A8t
PC3wCw1sfUBxMA0x8GNBYA1s8AsNTJ1AcUAN8GYPAOAN0C8YgA0svUBhDfBvQblR8QZgqjANHB0M
bWCh8A0NHPBPQWANBEwWAEMMjQwNFgDwAFFBQC1MLQDaEC0cLQxdAHoYI7ENGgAgDWDfFaEAqkAc
DQyNYJHwNgLwCAQN8E8xDVANDG0AqkAtDI1ggfARDTwNSQAwjaoQhgHwBV0gDTCh8BENTB3wT0FA
HSwdHA2KDQHwFAwdLA0gASCx8BENbPBSMSD9BwytYJEAAQAt8A0NbPBTDSEdyAIh-ABaApFwARCB
AA0gHA0dALJUQTDNDE0MXZBxYDQB9AVs8FZBcC0MLQxtIAFQwTANbA3wChUAgQ0cXQwNkMEwJAHQ
bPBXkRDtEPEEDRAdfDwA8BUILUwd8FdxQAHA8QJAvA3wC2wN8FaBIDEAAQABIAEg8QIQDRAXAMYN
XA3wWfEVAAEgHewPADVQ-AANAGAUfewt8AkMAFBb8QUQAf8BAAMG8QDwCGwN8GMBDRANAAEQEWAV
AAInAOVWPA0Q-QEAPSANHA38DRQAU-ALDfwQDgCQTP0L-BEt8AMtlgB2-DMN8AMNjAoAYvBX-Dbw
ARIAAAkAAFkDZPBW-CdNnBYAMCYNQAwAACcDAg4AwA2M8AENXB0M8Ff8JKQDUQ2c4A18DwDyEyIt
EOzgnA0M8FdsLfwYQOwtsA1sPfBXbA0Q-BhA-AENsHwOAHEcDawd-AcNEwBATA0MTRUAIAA9qwQR
-LgHUQMNsExtFQAuDdwVACEQLSoAAoADIIAtmxho8FlsDTANFwAyDUxtFQA9DA2MFwAkLRAXAACC
A9AMHfwFLUANTI3wWUwt1QQ0HB1sHABj-AkdQEydGQAkXVwXAPQEDA38Bj0wDSx98FkNBEw9DA1A
LRwA8AAt-AVdIA0cjfBZDVxdME2tGQQZANYDXUANDJ3wWQ1sfQCNFwAgAm2EAHAMffBbDWxNVAcR
HHgfBmsAACEAETwfADB9EH0ZABHcwQBA-AF9EGkAEFwBBIUNDF0QDdwNMBgAEZ0wACEwXTAAAMII
ABYAkwyd8FwNfF1gPRYA7Q0MHdydQG3wXg18XXAtFQBHjE1wTRMAABsCYWINbE3wARQAgvwArUAN
DPBjEgCkHA2sDTAt3K1AHRIAwNwNYA0ADYzN8GoNjDsAABIA8BuADQRs3fBqDXw94C3cDYAtTM3w
Zuw9IA2QDfwBDXANIDy9DA3wZg3MTdARAPACYB0gLN3wZB3sTbANvA0sDRzCUqLd8GMN-AEtDA2w
0gVAbA0M3YYA8QUMLRwtfE2ALSwNLD1cPQAtrL3wZUcBAAQAU1wtsA08DAARPHMJL6zdHwAEAPgG
VwwNQJztIAA4LB0MIgAA8QEAqQFjPM3waA0MFgBFBEwdDCQAMF0MDS8BZhA8vQzwiDkAIS1wFQBT
jfCNLB0TAOAdcA0cDRA8HQxN8I49IBQAUC2QDQwgqwEb-wEAH6nYCyfzDvEIHxXxnvCGDgHwIAHw
thHwGgHwAxHwdhHwGQEOCgD0BU0R8FcR8DoR8AIR8FYR8DoPEw8QDAABFQBEBWHwOgwA8AEEAS8T
EQ0B8DoRkA4C8C4RjBJgBJEwIfAxEQChAfAtEfACIfABsRIAIPBNKwDwEwHBMAHwMhHwNxEwAXAh
MDHwVRHwNgEtUVAhMDEwIbCBUBErAPEANAENkVAhMCFAAQ0B0AGgPwDRNhFgAVANETAx8AYxcEQA
8C42gWAhQCHwBg0h8DsR8DcBHQENEWBBMDEgEfAAMWARoAHwAQ4B8BMR8DdRYAENEQ0RAFEgEfAL
EaAR8AASGABARGEQQS0AcCGAAfANAQ4TANA5AQ0B8ABBMBFgAXAxVwDxCCUe8AIhQJEQATABEBFQ
AQ8SAVAhIDEggQDxCiQBEvAJMR0BHSEwMQARUA4RUCEgAQ4CERDFAFAlAfAKod8XcVABcEEAUQAz
AMJBEWCRgCFQQTABDgESAEA4QTARXABTAAGAAUAaACLwNBgAoSAhADEAkTAh4CESAKAxMCEQIRBB
AIEw6ADQIUAB8CARsBHwMxFAASoBABwAwdARQJEAEVAR8B8BDRsAIzAhNQBgEfAB0VARlAEiOEGX
BqAQQRABkCFAMRAB6QDwCxANAfARIRAxMAENgQAhsA4CDgIOMDEAYVAhNADwAhAB8BIRIDFAgRAh
EAEgERAu0gBwYVAhwBHwHmcA8AEgIRABUBFAMQAhACEQEQBBcQCCIBFgEcANDxAiABBQGgAggTDp
GHJRIEEAoSARPACBNAEwQfAiMSCbAPMIMyEQMWARAAENAQ0RXQEAAV0hPRENkXAcADAAQUAsGfER
Ab0B-QUBDUHwNhHwLhFwIVAxAAFtQX1BTaEgcQAh8CcWAPAXEUAxIE0BDQ8SDQUsES0RDQUcBQ0B
DUEFHTENASChIAHwJBHwLgFjAfAgICFAHQEdAQwGDxY2DBENEQ8NDxY2Dw0RDQEMPxYGDw0hDQEw
YTAx8CMR8DIxEDEBAfABEDENAQwPFj8NHxYMIQ8NBgsAUA8WDw0RRQAwLw0PNwBQMRCBEFE1AFQu
ERAhAAIA8Q8xDQENBgshCw8WBgwBDAYKDCEMCgYMAQoGDCEFGjGpAQY1ACBhAAYAYgEtEQ0GCigA
8AgMBgoRDQENGgwBCwoMMQUMMRAREBEAIT8a4vAjEbAB8BcBgBFQQQABOgAQHUkBYBoNAQ0BCz0A
uhoNMQsKDQELCkEQOQAAbwAADAEDNwAYPTUA7gYKDAEdARoNARoFESsFOAAADAAC3AAKOAAjFgx9
AHALBgwRBRYKGQA1IAFAOwAQMm8ANCEgAXEAAZsAYAwGCgUhC98A0AYLDiEKCzEQISARIBHUATA5
ESBJCQAsAPAFeg0RCxoLAQwaCxELBgsaAQ0aEQ1GAvAYLRHwLwENQQ3hDQEtAQwGGiYLDB0RDAoG
ChYKDRENSgYKBUGQASAhHgHwB-AfEfAvIe0RfQENKwwbET0BDAsMGw0xAfAOSwwhDfEK8B0R8C9h
DVENAQ2BDaENwQ2xFfEFDQEXAMArERCxDfEBDZEN8SAQAPABKTEQUSwbER0MCywhDAs8DQcHgBEN
DAsNESwLBAEQDM0C8AIsAQ0RCxwRDREFPBENXDHwAIkE8BHwKR0BIEELRgsRDEYMEQs2Gg0BCgYN
EQ0WDAEMJg8PCvgBAEIA4AoGCyEKJgwhC0YKAQ1WRwUDPwBwETAxBRoLDDEB8AEMChsMCwoRDAoL
HAsGCwEL8gAAfQHiChsMGhELGiELBgsRGhzSAbALHAsKBgsBGhwVMcEAICoBRwBQDRELCgsdAPEF
EQ0aAQwGDBEMBgwBGjEaDQwGDCE3AgFvAQKsAnAKBgENBgwRiQIgGnFEAMEQPvAEITAxDBoNEQ1H
AHEMIRoBCwYNRgAwCwo7RwBABSEMBpIAYQsKBQEMCsMCICEaSABhUQ0aCwxRRwAAdgRQ8AQBDQFM
ACAMIUsAUAoLEQwaMQAgEQU1AKIaBhoLCg0MBgsllQAxBgobTABBCwwFAbkAICEFgwDSCgYKQUAR
8BYR8A4BTpwAMAoMMVAAQRomCw0GAPAEEQsKPAsKDxAMCjYaDAEKCw0MGuAAMQsaJpYAogENFgsR
GixBUAFGAHAiDvAEIUAxYgASDZgAIBwKEgEQG_sBwAsGDSEKBg0JBgscGyQBALQAAYcBMQssGlUB
NQsKBiwBkB7wBHEAMQwWDL8CAmwBEApCAFFRCwoNId0AMQwhDUYAESHrAwGBAQBGAFIhGhEacdYA
kSENMHEAQQtaDEAAEA1tAREMQABAGh0GCncBUA0BBgsx5wERC7ABhRELGhsaEVoxPgBQEWBRDDp6
AAFmAVANCg1RBX4AIgYBfgDwAA0BCgtBGwELCjEKCyEMFpcDQwobCgtAAPMGJ1EQYS3xAA1RDUEN
EQ0hHfEFEPEDGwAAiAah8QoNMQ3xEg0RwPIA8QQmEWDxDQ0xHSEd8QCQARCBIIFAVQEQJhQGYCEA
MTABkJAG8AghEDEAIfABoR0JbQUBECFAERAh8AkBoEAA8BAAMZABsAEO8AIBEMENCQ0ZHRkdCY0h
oAEgAfAKAgGQjAcAiATwCnBRAEEgAQwBgBFAAW0J-QMRLQENUcAB8BhzBAGiBvAQoTABDoABLQEQ
Af0AAQ8UDgUYAQ0OGCQIFBgECDGgISoA8A4hMRCBMCFgTREgAQ1BTRFtDhgFGBUIFQQIJAjUDrIE
UhEAYfAWKABQIBEAAR2TBfABCS0ZMR0JfXUY9A0IBAUhINMf8Bph8BUR8CEhUBFAIQABDQk9GT0V
DRUdAQUeBQENEQX0DgiUBQ0RIEEgcXoI8QwAAfAPIQAhcEEAXQFNAfQWGIQvHwpUITBREGEfAFAP
EQ3wDRQG8ChxEE30Fi8fRFcECAQnCjc0BSFAQSAx8BQR8AANAfAMIQBhEBEQMRAdAQ70BQhkGgQI
REcECAQKLwDwCQcaCAQnBAgUDiEwIQAx8BkR8B0hEGEAIZ4I8RINBWQIBCg0CKRHFAgUJwoXCggU
BwoEBwoHBAgEFwQYBBc4ADAQQQBtAEAREfAc8wXwBjEAISBBAB0FDxk0CAQHNAg0CgdkdzEA5CQH
Dw8HJBdECAQHCkQHOwAAMwBxQfAQEfAbsSMI8AMtBURHCjQnVCc0FwoUFwQIZBdlAVAEBwoECK4A
ATcAEIAkAoAx8A8R8BqhILkGcQEtFAgERwqUAKBUJwgUCAQKBxQnMgBRNBdkCgdAAHIYBA4hEAFg
OwDQDhHwDxFwIWABQCFwET0AECcvAIAUBwoIVAcKJN4AsAg3ZAonRBdEFyQOMwAQAc8J8AYAQfAN
EfAPAYAB8AoRHQEkJwQYJxRcAHBUJ0QXJDdUUAFwChc0NwQIIRQHQDAhQDExACAgAR8IsBARADEQ
AR0BJBdEmgAwF2QXaADhNBonNCcaByQKFzQnFAhAASDAMckFER4MAAE5AEEBHQEU_wBzZAgEF1QK
Fw8BEUSyAAAIABA0_QAQDoYHUTHgAfAMPQAwERBhwwGAHQE0B5QIFzQSAaEKBAgkFwQIBBgUKgEB
OwCgBBgECgc0CBFAIZUDEB6pCZDxAB0BNBeUF2RtAQELAfEBJBgEFzQHBBg0ChckCgdECGoAIPAc
MACAQHEAESAhDQ4pADCUJ1QSAgHeAAAEAFI0B3RXVC0AYRARMBHwEmEAgAEQcTABIAEN1AABAwHw
ASQnBCgUCgc0JxQ3FBcKJEfqATRXVAU4ABAhWgKSHwEQIcABECEdXAAgJCoKAXEIBFdEBwoXbQAx
ZxhksANAEUAhEAYLEBLPB0EAIdABcwEgJySVAFFnBAgUR9QA4kcECKRYFAg0BREwMRAhYwARFo8K
IAAOdgAhQQBSAnBnNFdUJwQIPQGgBAdECBQopAgUGB4D4RFAIaAR8AQR8BMRXQEQNwAyARAxcAGw
FAgEVwQIhAhkCJQ6AGAIdCglOEFSAzAQQZDIC2QEEfAREX0zCSAhEDUA8QEOJAhUCDRoNBjkCBRh
GOEgPwIgECHlA1AQAQktMccMECBnAAEvAPACDRFEOPQCDiEVGAQOQQ0BBRFZBRIBNQAArQSSDwEN
Cx0RPVEQzgDwDwBBEAEt9AAPGQQFEQ4xBX0BrQENkXABIFEAEQAhQI4AgPAOAQkFDcENxwQBMgDw
BDEgAS0BZBUORQgOLQE9Ea2h8AWtIAUwAJANAQ0LDTFQQQ18CwHzA7EQUQ0BFQ4VAQ0RLQQA8gA9
QQBx8AEBUCEwEUAREBE3AHAMAQ0FDWEN7gsANQDwBgEgEQAhDRFN8QXwBiEgERABEGEAgZIFAiwA
kAkdMQ05LQEAQS0AIHABkQtgPbGgYSBxAQpFEJEAgVcAoD0BEA0JTQkPEQ0vA_AhADGAARBx8AWR
IFEAMV4MQDABIIGvAjALAR1JDEAJnREQmwOgChEQMUDBIEEAMb4NMTARAMkLIfAZKQCxAQABCQM9
CQMJXQGpAQBUAHAhoBEQMTBhJw0QADYAMREAYaUCFCEYAdELAQ0BAAEDKT0BLQEtigASsDQAYEEA
ARDxAoUhMABhAEoEGTEzAHJ9AQABDSEdbAtgMXABICGQhQEiQRBeAQACAAALB0GREFEAjwbQCwEJ
EQkNCREDDRE9A1QLAogBICEg2A0APAAgEUDMAAFOAAFpASEBAuEiEB7bAgZ5AABIDIMJLQk9CQ0A
EUEAEHFkBwA0ASFAIUsBAkEAkBEgDgIeAU4CMY4HJVABPwCxCR0RAx0DEQ0RHSBsAFAQMUAxQG8B
ACkAEEG-AwCuAgDtAFEgDgIOEYEAAcUCAPEFAMUAsBkNAQ0DEQ0AAQMdBxwALQAAAQEAoAFIAVAB
EEcAADgBgAEALhEOAg4ABAACQgMQYUoA4QwNAQAtAAEtAQ0JTQEA_AAgMBGrAFIwAVAhAEUAEkFc
AZAAURABDgFOAB7UBUAAIWABQAAgDy3uASJ9ATMBSiAhAEE7ADAwMWADAnBeAg4AHjEgLgQQQDQD
ACQCMF0JAfUDEUBzAAI4ACZAMXMAAdIAAMcBUBEgEQ4B52QUEUAAAu8AALkIIA0ZDAARCWADEwBH
ADGgIQDOAvAJICEAETABAhENgQBBYBFwEQAhYBFwUfABHQigsDFNER0RPRAhUDgRcAHwADEQUTCK
AxARDAFAEEFgIdIEYWARYHHwADAAASgCoB0JEQ0BIB0BECF7DTBAAVD1AABzCFDxAwAdAXwAMAAh
UK0IAQgAMECh4IwDUC0BIBFdqg3A4S0xHcEAMRBhrhEAZg8gIVBzAgAMAEEhMMHQFwIQCcgCISBR
zgAg8RUsABC_2wAQgRwBMQAhILgBslARQNHAEfAKAV0B7wEg8BbsBXABHgEAAX4xLAAAbgcALADw
AfABMQCBwBHwCQF9ERAhUBGiECAAQUYDQRBRIAGFAyARAPYvAGoBIIEQagARARwAIBFAgxHwCXHQ
EfAIAa0RgBEQUQDhAPEEMBEAIT4RTpoBMaFQAUwAMVEAMSwAALEAEAEwACDdMZ4J8AEQ8QMA8QYQ
IQ0BAD4SLgIBIBFBDYEQQQkFEDGAAhAgPQERUQoAAEIS8QEHAf0BAUAhMEEwkQBRENEgmRAUngMD
ADUEAAgCAD4AAKQGMSEAHkEEoQGwEfAAHUABvSFHAkERADGgswVyQIEgATABzj0AAg8SERHAAgCp
CQCJEfEEAQBxABGgEeABHTABfQE9ER0BUD8AIQBxfAIQQW0QMd4xALIDBLIAABAF8AIADggeIRCB
0BHQAR0BMAEJDYgFAIcfEBFAAAC9DwBHDGAAMSCBEFFNMQKCAAA-ACIBECMDAEcAUgEQCB4IkAbS
0BHAAS1ALTEQAT0hAPMRIAEAJgUAiQFQISCREFFZMBBOKAMFSQAAYASQEQAxUF4QERBhQQAAiwBQ
PQkNCQ37DwAhAjAgUSCTASERQJMAQBBhIFEJDoIBHgAOAi4xEJUAAKYBEmHYAHBAAQ4ILgIOkgAA
TwAgCQ3uCxABCQMAOxIQUAMLUDEAQQ1xhgJQMBEwIRDwJ1EeAAE_AeQEESGiAQDFBwJOADAOGD5N
ADIgIeBNADKdAQBKABBAwgERMZQEEKECAhEdZABAECHgHgsAICFQyA_gkA4IXggOUBHwANkANEAB
jT0AIlBBaQVAIAEQoXkCEQ2jE1MAwQAOEWUBMCEAwWEBgEAuCA4ADgheLwhqwD0wAY0RQQAiQFGm
CCANMXwAIgDxDwEQcT0A9gIAMTAOCB4QPgAu8AUR0C0BILsAElE9ACEQgT0AIYFw8AYAgwcQkLYA
9QGADggOEA4ILvAJEdABLREAtwAwETBBwwpAACEQ0YwSMDAR0OQEESEIASMBEDYCETD0ABAgFgli
0BE9AAF9GAEBHAVBgCEgcXMAAbIAQQ2hAFFVAjERDQHTCADlAQDrAUAxMD4IEzMQHiQJIgABtQAg
HRHgEQBIAHAQcVARIEFAWgUAVANRAQDxCBBSAgKTAgOIACFQHjoBEg5GAIEBER0AAR1REPcSgAAh
ILFQYRABYRJiYAEQ8QgQ_gEhAWDKFQA_AEYQETAePgAQA4gS8ARBABEdAUDxEgAxEPETIBEggSBh
jwMAIg0QQDIBASoAYQgRHQAhDdwEIMEA_g7xAgsQ4QDBAHEQcSBhEAEQHgEAJwAQCdcEoDEg8RcA
8Qkg8QchBZAGEAEAoRABAC5uF6EEQXDxGwChAPEYewfxBvEGAKEgPnAOAXAR8ANRAPFXUPEZEJcX
8BYC8Rsw8SYAsUDxDwBx8AUR8AHxDRChAAEA8ShAsQDRIHEQQRBxcgDwAgDxGgDxKgDxDgA_EGEQ
0fAExhZQ8RkA8Q0pBfAKEPEFAPEOHggkCA4QUQDxAPACEVARYCEA4RsAYAIQ8QsAETEH8AgQ8R0Q
FEgECBDxB-ABEeARAKFAEUDxGvADoB0xEPEbAA4IBIgdAABSFpCREDFNESDxFhADD-AJMQ1xAPES
EFEAFBgEaA4A8QjgEfAAkQBtzwfwEvEUEAE94QDxGAAIFAgAiA4A0RBh4BHQoQABPcEQ8REQAbMT
8QhgYRDxFwAIBCgQCAQeOACxQGHQEdCRADkAcBAAIS0REFG6APAQGEgeFA4AOACxED4QMdARwJEQ
DQkNAQ3xAADxDwAtBWcUYV3xIQgEGEYO8AEOAAQoANEADhgOAEHAEbCR6g7QDREN8QEA8RANBQ0x
nVsDgAzxFQ4UCB4IWAAREC0AACwAwIEAAQ0VDfEEAPENAAc4MAEJrQcDgPEWAAgECBAOLQAgYJEt
AMAQAdARoIEQHQUN8QYDARHdJwDwERQADjgeGAABKA4ADhguMGEADgjwAhGggQA9gQDBEPEKGgMg
-QDSA1ETDhR4DqMAQGgOIFGUAvAJADGwEZChTWEAHQCRAA3xCwANIRAB-QIxXgDjDgQYBFgQGBCI
HgBBDhgrABA9ZwMQA_kBgGEDAQ5hAPEAZgrwAwAB-QQAEQDxEQARDpgOMA6YDtgF8AsYAg4AQaAR
kDEQMT1RAB0JAxEtMSAdcRDxABkF8B89ES0AAQON8RYAOC5YDhAOuA4gLggOEDHAAYCxLUEAAQMJ
HQENAwktIAENCQ3xjwkQHQYIAMkF8A598RYAHhAYLhgO_AEQCBIIDgBhoBGAoQ0JHVENE-olYAMd
GSENA88DEAsPCcAdIT0JDREALQE98RhHKQGvBiD4AMM2kYGQEYCRAAEdMXEAoCENCT0JLSEA8Qls
BvcD3QABPbEA8QsOYQ6oDhgOOECRLQBRDQEQAa0yBFEPEAEJ3WIGQJEg8RGEAbAoPggeKCDBgBFw
oZ0EQAABHQm_ADCd8RJkBjFNEV2JBAFbA-AGEQAOKB4YHgBOKA7hgBFwwQ0xAA0DhgvjvQEA8QwA
IRAdARBNIT0xAAFvAAC9ABAImQJAASAOODUAcCEAgR0x-QQwAGExLRABXSC4ChAAgwLgAQCBEPEE
AA4ILggADigxAEAOANGA9AnwCIEAUf0F8Q0AIS0BAA0JTRABLRAdESBh-gQQccMDEAiyBDA4ERAy
AEOBEDFwNABwDQmtAT0BHTkAIL0RJA0wEQChMwDwAQDxBg4YDjAOKCEQGA4YAJGCCRBwhABgUQ0J
XRkNwgAQDTUAYAlNEa0BAOUNETGlABLxkAKjIQAoMRAOKA4AgTkA8AehADEADQktCS0JDREZLREN
8RFNIAFNcgAQIYsKEAXkJ-AC8QwQKBAxKFEAOA6RACFwEZA1AOABCf0ACQ3xERA9MU0RDfIEIAEt
lwTQTfEMEA4oECEAKABBEHMAEIEzACCAwSEAYAmdEV3xEKAOIX1RMQBwAQAhXQDxC4ADhQ4QMQAo
AGEAMgAg0RAxARGdPQfwFgDxAQDREAEtUT1xAAFNARBt8QwQGBBBOGEOKBDBcBGA4QAhXQnnBjEB
PQA5BFECAAEtMUICcCEAAV0BEE0CAaEgQQ4EKGEOCA4INQAQ0RwAAEENQAENET3zAuDBAPEEEAFN
ER1hEAFtAWkAAfUDgAQYDlEAKBDR_QDxARAdMX0JXfEYEEENgQARfRGPArHxFBAIDhBBEB4Q4R0B
IAEJqgPADQNtCR0JDSAdAPETvAcwIHG9HgFgFiCBIPEAEgGwDQkdABEQnRkNARBwArEhAAHNEU3x
NIARgJoJIAk9bQkQvWkHIPEX5CMA-AIAHwBAsA1xXWYZIF0x2AEQFnsLME0BXVcasAABLfEsIFGA
EaAdrwcQCScAIxFNcQcQFzIOwd0BXRE98Q0Q8QsgYScAQFENCW0kAnARTfEcAP0DpxGAAQAt8TSQ
EYAQBDBRAA1cDRChiwYwAf0B8BBgER0BAPEyIAAwCR1BvRtQEDEg8R37BEIBAE0RHwBhMaARgAEt
JgIgvTERABAeQQoQvVcBAIkbAJQGMfECoEMAYABB-QTxIFgAYT0BXQABnVMqYfEfEPEAsCAAIFG9
jAFx8RYAgR0BECYA0AABbQEdIRDxIBBhEFElAADqAWAtEQ0RPRG_EAFtAAC_CAKOCpEBXREdIQDx
KwArAGAJLREQHTErADEtEQ2HBgAfDaABAE0BAL0BAPEsVAZBkAE9ELIQEA3QAADJCBDRQAREAS0h
ICcAMBAh0CcAMBFtEAYfMAABHcIAAM4CIwABoABQARDxDhCJAzJgEUArAGgBAE0hEC0pAEAQAV0x
WgCi8Q-gEaABLQABfT8AIgABJwASQSUAEW2-ARARdwQAKhpBsC0RjUQAEQEGAPAA8R89UT0RMBE9
8QcAYQBR9QVhcfADEbBBJQATDSUAcBoAAV1BAE3IBhEd7AoAUgMQUS8AUArwAhHAMQoA4QAA9gUg
8RkwAhBN0BAwTSCNfgwApgdwcQBxEJEQwcAIEADSCiEhALsQgRDxGR0BDREdLw0hTQDeARA9Xgvk
wQCBAJEQ0fADAfACfQGwABENGQFQGw0QHTEPHgIWBeDxMPAF8QJ9IS1BTfEmGYAYAFoATwAd8Uj0
LCixEg8V8AsBDiHwaw6hCQFtIcCrDvBeDvBHDgUO8FwFACBGHlpBgP-0HvB8HvAnEgBAfB7wOAgA
ELUFALAaDh8UHvCGHgHwGv1DkLAOPR4NDvBKHq488BtO8Cge8A8OHfBTDg1ODQ7wKAUO8A4NBA8Z
BB3wUh4dLvApHvANDgwZHAQuAPANDvBIDSwJHAQO8FMu8EkNTBQO8K8ODTwOkC7wZWoA8AgcTsA0
DpAeBQ7wZAEe8BwNCSwO8AtOkMc88BoFbxMB8E0EDAksFPAKHgAucB7wHg4LJSsFCwHwTQwZDBQc
8AoOMAUOQOBq8BsQDg8NFTslK-BLDAkMBB0U8A8BHiAuwAUPEg7wDiUBDgEgAQ4BJQHwSiwdAGAQ
AQUgHtBEO8APDRUBcBULBQHwSSx2LPASUAEbUfAEHvAhDgUBIA0UDQ4gJQHwSQ4EDBQMDlAFClUL
HQDAEg7QDgUBEA48DSAOOwDwGUoNHARQKwoVDxAFGxUB8AAOBR7wEQ4EDsAOBQEADQxEDA4QAQoB
8EsjMvICARUBOxELFQsBsG7wEQ4NHrAkAPAJAA4UDQ4NDgABBQHwUgsKBQtwGwULsB4FpEWwEw0M
sA4FDgAUAA6oI-AMBAABBQ7wUgsFAA4ETQQOACvQARAe8BIdDrABLwDyBA00DRQAAQXwUxUQLCQM
DQAr8AGOAPEE0B4gBAwkHA0ADgXwAg7wQgQNANApgAwEDQABBR7gTkMADQAxDgAUJAAAJieA8Dcd
QBEABAz2QzcABBwpAEAEDQ4QLADxBB7wAA4EDAQO8DYcQAUBAAQsFDwmADAQLZB3APAMBQ7gLgEg
Dh0OoA4EDkAOTA7wNQQMDQ4gCwEA7WkAKgAkAA4rAPAG8AABHiAdHgAuYA4MDVBE8DYNBAwEKwBQ
DAQgDTQtACQQTSsAwANNIA0UDmAEDfBCDowAIAEQbTkRJCUAkT0OkB5wjjAugCkAEE5rNRAwsgDw
EnAO8CoFDtAdDA4AARAUDA0gJA4AAQsQPaAecI0OIC0OcDAAcAkOBD0EDiAKASBgDj8CsCgBHuAO
DA0OABEeMQEQBDENcA4dBA6gHlBVAJEADh0eED4NPlBtAPABDh0OPQAOLRANDhQeYC7wOikAUAAB
IA0kRBMwDgQdNgAAPAGhAA4ELRAdTh0OQDcAQA0EHRQVAPANLQAOJA3wSA0UEBFgESAtDkAEDlAe
QA0UAA4NJKh8IE4ABjgRCDIA8A0tBA4AHQ4dEB2gLvA8Dg0EDhCBQB5QDA1QHkAtXwCQDgAODT4Q
TjAuLQABiAAgTeBtAOQ_LRBxwAQNUB7wJx0ALRYAUAwOBfAhAwFBBIAODXYAQR4AfiD7QJFQjgAO
BQ6AHQD1ASIOLTAAACQDoRQNQB4ADgSABAwyADB9Ah11AAAEAAAHAEQwDnUOOgDxBhQOIC3wAAUO
8EAODXQNBA0EDWANFKsAKB5dNACmIA5lDlUeQB4NDpsARkIdNE0wAFIQBB0eDTMAEh4yAHAlzkA9
AA4dLwDwER7wQw5kTQQNIA4kcB5AHSANDvA2HvBEDoQdFA0gDQQdFQDgHh0OUF4QThD_BPAAHqAe
AFEEDXQNFMsB8EkNkB5ADSQcDgBVOAUOBQpVKFUYFQhFHgDeFQ6QHvBFDg0MhB0EDRAOkB5AXRAV
LgVOFW4F-gMQ-gJwHvBHDaQNBA7wBC0EDSAe8QceoR4QbgGuUA4F8EQU2jHwETQNBA2wLgEwPQQN
EB5BDmEOcQ4BDmEOEU4QLgEOUF4gIUdQAl7wKw4sAQB7ftAkDQQOoA4VETAdDg0EKETwB1EONQ0O
ES4VDQ4hVQ4RXhAuARAeIBEtQaMELhEO8CsNBC1gNwDxFAEVETA9FBAeAQ4xDEkhDUkEIQwpHwoM
AW4QLhANFC0OER5Akw-yHjEOLQQNDkAOHRQtDqAeETA_HRA_MRwdBAwdAQQJBB0cBBEJDA0kDQEe
BT4QHnUBcB0OAAEe8AjyEPASLgQ9YA0UHRQO8AouQRwRDRkEAQwJIQQZDgEJBEEuBQ4BnUUAMgPx
JA4NIB7wBw4UDARN8CweEB1wDjQtQA4B-gAQTiEMDx8RHgkEAQQJDhEEGR4JDAEFHAQRXjoAQQwP
CgTbAQE_AOANDk3wMB2ANA0UDjAO9aEQlC4RDAQBDgEODD8AggEOCQwBBBkMQACTDxgJDwoJAA4U
QQDhHk3wMR6gDhQNMH4FHgWdArAFDhBeERwRDhkEALsAwAcMAQ4JBBENCQwOAUMAUAQOBAcJ5wMw
EB6Q4wEgDpA_AGEVLgUQFQ5BAPAKLhA_AQ4RDA8fBQ4ECQwNAQwJJRwOEQwGBYoAAoYAYAANBww9
EI4E8BPwRQ4dDpAOJCAOFQ4ADlUeNR4QXhEMSTEEGQcJBAEOAARZdgCwLgAOLQ4dIC6AHsDwOPMJ
MQ4NHpAOLRBOAN4gTiENRDEEDCQNIQ1UKwBwDU4gLvAIPf048ARBHfAKDgEeEQ7xCw4BLvAdHQ4d
PgPwD-AKDvETHgHwHQ4dLvBJDqEeYQ5hDjEOIQ6xDhEeUYkC8RJOAA4NHvAAXQ7wHWsO8BNOAQ4W
DAkEEQUMFhwOAQUMJgxjAdARDQQOEQQmBA0BDAQRJgERDhkAoAQMNh4cJgkFAT6qAfEH8DIRWwUO
8BM_AQ4FOQYRBEkNAQ1JDQ0B8AwECQ0BBUkEARkOAQ4ZEQ05DQEOWQEOWQ4BPhApCJAvCxUbZQHw
Ba6XAfAHEQQZDhEECQENCQQRBAkeCQ0RBAkFAZQAQAkNARl_AHEBDBkFAQkM_AHxEAwJAQ4JDUEN
CQRBThANHg0ewE0O8BoBBQuBBQvwA85RABoMUQCABBEEBwQBCQS3AVEEAQkMIVIAJQQOUgBgHgkO
ARUOuQAwDgUhIQH5CBAtwBQPGC0O8BgBFQGAFQsO8AAOCAGwrQDwBQwNDBkeCQQOBAYJBAEGSQQB
HA4NYAAxBCkM4gIRIaoA4B4HGR4ZBwkRXvA0BQsB2D5gAAEFCw4gowYmHtBRAHAODQkMBAkEgwEh
KQxEAREURwAQSWcDMAUMGasAESRSAACgAQDVAPAABQ4hTmAe8CoOBQsQDhQdDweiFQsgBAwEcAUO
0AYBEgWqAANNAUEMDQ4hywFBCQ0BDKUAIAwGQANRAQRZAQ52AQAHADAxXhBzBVAdHoAOLSY8gBcO
BQsgFB1EPwcRMJgFkNAOBR4BDgUJFq8AAPIAcQ4ECRUJBCFBATERBQn2ATAFCQy8ASAZAcwB0A4Z
DgEEGQYZAQ4ZBhw_AsAQLT4dDmAOAw1O8BgVCXAOPQQdFAwNYwATDmMAQC4BDjm-AQAEABANBAIV
Ll8AQgwGEQXJAXAMCQEEDA4RXwBROQYBDllbAAC8BKAEDVAODQMNPvAZXwDDBAwQFA4ADRQNAAsB
xADwCU4BXhEuEd4RXhEeER4hLjE_Ad4BLhEQPZkHQEAOIw0FCzINAaA_AJA_ECQNABEwDgxLB-AO
kA4gPgEOUR4hHlFeER5hDiEOIR4RDiEeIQ5RDnFDABA_-AlgPT7wGgsBSAlUEA4MJA4_APAUAQ6A
DRMOAA4VPhUeFU4BHgUeBf4RAT4BXgEOAa4QDQ4NHg0hA4AQDh0OLfAdAbQAIA4Q9QgwABFASQfw
Cx5gDh0TDR4ALhD_CAAeMC7wCy5QDhA_IB1OkQOQEC4NLvAfDQwU1i3wEQ4AEVANBJABDkANDwgD
DRME8EdOHQAOLTAODfAgET4EJgjwByFQHqABDiAdEw0DFC0QDg0eHW4QYZ6MQiAQTsoF8BwuQB4A
-gMQLT4APiAO8CARIA4UHRAhEA0O4A4BEA4TLRQNAwQNEM0OALEuHCzBDQMtEF0OEA0DHQ4QDEpg
bS4dLh0O7zcB0wDA8CcBQCEQXfAAPSADGAgRIKdSIA4QCSBTTgAOLQMrPxAtHy8C9AcArgSQHR6w
XRAOLfAmfxrhDg0EHQQNDsAeBC0QDhNfCQEETwG3HhBOgwBADgBdDrYTIgQORQDwER4AHi0ewA5N
Li0O8CZBIA5tBA6wDQQdAw4AEw0DBA4QGAJhDgRNEOEe-wFQPRMQAz2_OgA5ABAdjQEgYVC1PcAt
8CQeEBEunR6ADl1cAkAeEA0UwEAAjQ5xDj0uPQMNHn0AAQIAAnkAsE0eAHFQbhA_8CMOjQBgBF0E
TQ5wBwAgLSC1CTFdMNE1AaANEx4DTRANAz0g3zYAOgAAl1MAASCAMg0ETRRtHi3MdzBNHj03BAD8
CCAu8TMDAy0BEE33ARQeNwDxCAAhED0OMQAeMD7QDlEO8A8NFE00TQAOQgBQAz0QAy1EAACgAPAA
TQ4A8QEOAA4DLRAODwI9MgFBLR4QbUcAAHYJQCEQDhyKCIExLiBOsA4FKzkNAJgHQEAULQSCPHIt
DrAO8C8_6QFADS4QEXQC8AUNDA4ADSA_AG6QDhVLFRsFAfAKDnEDAIgIMAAOID8IVDIOYA6QMwAg
FAC3MDAOIC4yAMAFmwUB8AkODAQMDWAGCSEwDSgF9QfQDj0uABEeUR4BbhGOBf4BBQ4hAG4AdQBx
DA0ELAQNFLkAACUE4IALBQsBgAUb8AgODS5QMQEwMB0emggBdQD4AB4NHjABcF4BMBFAHgCO0EgA
EAQNTyAABCQN8QUeAE4BgAEbARBeEBELAfARDQwEUJcD8AMUDoAeAA0DEA3wEQ4QDgFe4AXHUhFO
QAASJGINAYkA8QRBDmAOBQsBIA1EIA4L8BAOJA5wwAoRBEAAkQQtEAUOAA0kXAcAMGwJHAgAEG4L
A2gdDh1eFR6VABAdAgAAUlExAQ6Qig4hDRQgDUALDvAPUwQAoUURMFcAEU1OADAcWQwIACAEmQYA
YV4QHs0QNZIAEj1PABAeaA0QDYEKAd0EYhAODC0kDGcOAIJOAN0AAp0AECwFAgAKAGAEKQQdHh0K
ACBOEHhBEYAMAOEeMA4dPgARAA0MLU4QLgYXEAT0ACEBAMAK8AAEDAQADgQQBQ7wLh4AHS6WBwAZ
ACANcAgAMBkMgEIAkwEeEB0eIF4AHlAAUA1OEAEAYgCxQE4AHgEADgwOYAF-BSAEDXcOohANAA4B
8DIODTBNAFAOEA4cFDsAYgQZBAAdNKEAEQ3PDUE0DUBORAGITiABYAEQDT5QAKANBA1UEAQN8CxB
qAMQLvsAEADnUlANHBQOAE8AVQkEHUQNTwAgAA6vDTItDiBSAGFeIAFQAW7wAAAmVgDcDiAAFHAG
kQ4ABA3wKwEFQZoDAVQAQgAOLCRTAAMLABMORQEBjQ8AIgEkDQRYAJNODQ4QYQA_DR6rAHFwCxAE
DQAdsw8AWQBADhUOMbcDAn0BYgAeDQweBFwAMAkQBOYOJA0QXQB0DgQOAAwELVsAQB1_UI6tTWAM
HQ5gDQzVDRA_TwARUWMCEQUeTkMEHgQQSwA0EAQeSgAAVlIgACQEDQGrVVAdXg0OUDQAA6MAEBRP
ABAgwwCC8C4VEQ5BAE6bAEQOLAQdmgBDNBwOEDsLIR0gugUAchAwEAU_ORlQLf4GAC4VVTAOBADK
ArEgPQ7wK0EOAQ4BEEsAANsFJRw05QAABwIjDQ6cABEeQgiwAF4wDg3eDY4APhBaegBKNQEiBUHw
Nj4NlgQAaQEyEA4ERABQDBAcDSDpAEAgLhA9ywBwMD7wET5QRK8CQBzwMh62TgFJBVMFDgCNBMQB
QRQtHg0dASA_BXYAAK4L0AAeED4QnhAOoA5AXhCtD-UBFA0ABB0uMC7wKAELERUOIQICEQQSBADx
AABRAwDwDwHAAPEKLhUQLQ4QDSQdDgAdEE4AhQ4A-gIALgEODRkC8gUUDTQgBCwEECQMDfAGHvAO
ERtRABgGYgUOwAUO0GUB8AgFEB0uDS4wDh0QTlAVLjAO4F4QDSQNVBUSYR4NZA7wBDoAI0EOOwAw
HkAOtRAjwA4_ACEOABwPAKNB8AZQXvADTiANlA5QNA0UDA7wJAEbDgDhC1A9DiD1DqwIANYDAFgC
QW0eHRBoCDAgThA5BWA_gA1EDSTPEvMIAA0EMA4sDvAfLhARCxAFLhAeLQ4w-hM4ADYNDk06ACEA
fr8CgS5QDg00AA4k_gHgDh0wDi3wHw4lDgARCxBsEWUOHfARBT5AAEAAfhAF0QFQLQ4QTgCeDiAe
AGYJYA0MFBwEEDMRcAwUDA3wKD5_ACABDipRsQ1ODX6dDiAeAG4BFAMwDX4NPAAAyQMyLhB_cwNx
IB0MFC4gHsQBcA7wJh4wEQsuEuIOPRAe-QACHQITHQMNEH4AAUMAEU4eAhBeRQATcEMAkRAOFAwU
oA0kDEAAIAEroAjQLhAOHR4t4D0CDQINHjwAI35NewCgEE4AfhCOIAQNLicTwFAEHA7wFnFwAQ4w
S-MC8wFOHQ4QgTAOLRMNHhB_EP4ANAAwPhB_L1UhBA1NErBQDRQO8BZ7cB4wO0wKEQ4yDyAOldFT
0A0DDQ7wD14APQ5wToDaBAE8D-AEBA0O8CABBRsFSwULUB4wARshEPxU4Q0eAR4BBQEOAQURHgA_
RgAQfqpXYUAOMB4QXocFQCAeIE6XABAARAAA70M08CCbRAAAOAAAAwoQLc8MYB4FEQVeADpVcE4B
FSHOAD4kAQGtAyAVLtgJAIwEAFsDApEAEC3bFaBwAQUbAUA_ECsR4iIREC4AcAAONRAOBU6bVACi
AoAQDgUBBQHuAIIAARIHMQU_ACoAIR0eFgrQAC5QLvAdDhEQXgABK9NGIDEuSwAgLg0hBDBuAC73
AlQOBf4GEEEAgF4APhAuHQAdPQAw8CoL-AaARBABCwUO8AKMBvAGHh0OgF4AHiAeAP4C8AA_AC4N
DhAubgREAD4tDjQAMQAUALgDsAEFoA4BDkARLhCe1FVBAP4KEJ4AECCmD7EeID4gLiAuHR4QLjQA
IAwEGhYANAAQUcgLsC4QfSA_IC0QFf4B6ABhFR4FXiBO1gZgsE7wLwsBpJARFFYDADIAUBAhHhAu
dZDQLSA_IB3eoA4FrsAeMOdKpC7wKgEOEA4MFB4rAHAOER4QDR5QKwAhEA4sAHC_8AJOQC4A8gVR
BAAOPCQ5CFGwEaANHkkIEACtEaAQDW6gASsFCzFwPw2wfg1eEE4gHiB_8Ag1FwAVCREdcAgwwA5A
cQ8QEB1N8AM_PT4ATjAOATsBCyEOEK4Qfh33AgCkEBKONwDQDAQcDgAkDA2AHqBOEPkIIF0Of0gA
kwGBLR4QDgsBWzFtCwB_AhJ_lQlSTgDe8Ce3AoANHgFwDQygTsJW8QJNDgBePS4dHg0uAB4BCwFg
MYwB8AQADgUhDhBeLV6A-gDwKg4kDRAR3QbwAoBeYE0OEA5NDg1eLT4AAQUbmI1CAQsBFScD8AQF
IQ4gTi1ODQ5wbh1u8CcNRA4gaQBhBA0wLoAtZw2REA6NDiF_AA4LvwUgHTSiLMANLmB_HU4N3j1u
8CduC0ABEA5Q0jtADg0eYAEDYS4gDi0OTTcAMhEOAJ8JEBGmANA_UO4N-gnwLxEQBA5AGgowIA2O
7AAAWwNgPQ5dDiE_1QDwBSANDB1UAB4QDf4YAQARbqAu8BthxxLwADAODRwOIM4NPgAuPR493vME
ALgUMA0kALcLkQ3_DwBuDQ4xfvkWMRkeYXsKsDA0DSD_Ax2ODS49oQQxDQwQ6xQB9xcxDgD_6lUw
DT4NowYQEXoZ8AkaDA1QDiQdPgANBEANvg1egA4dHh2eABF_AhAQyADxCR4Q-gEQAX4QHhF_IRBu
8CUEDRA_DQwUPUEVADMAkk5AATAOTb4RAKMJAVsV4BEQTgCuMW4gMQBOAQ4RNwAAdQohLFSFDOEt
Dg3eEAV7AQA9zhENHJ0AADsJMBEgLnEO0F4gMX4QERBuEQ4QXvA3gmAEDEQeDAQTAhAwfAdgzgGr
Af4AxQIA0AFAHRAEDqQLEI6FHTBeDQ46ACABnm4NAXkHERCGCjAMBD02SaAtzg0QCw8QqxDeeRlw
cA4MMB0_EAwEUD4AMRCeIhYQIvoYUhAeHQwN_QfwAQQOMB4d7gFLUAELARBeHW5DL0AtBA0Q5AyQ
XhAdAF4AMRCuaVdAIyQOMBcXAG0BEBR3DvABDh3eAAsFOwFQARsBAF4dTvcCAFsZAG1bEQQ_AMAE
DQBeYf4P8CIOBA0-RPAEUA4UDRQdMA4Nvg0OACsBIBQ8DoYB8QMNrg0uABFQHDA_DRAdAE4RHhH6
ASDwIk8OcQwEDmBNFEBUAgA1AAAECSIUDTgAEM4IADAgHi2OV2AdEP4c8ChZGhAUmA9DDT4wDjIA
AF9CAagKAMgJUN4wXA4QfhgAk0EREHcPgD3_EPAoDg1g-wUhDRQ8AACWCUA_DQ4AZQ0gAA0_FgHB
UiANzncPAAACsR4QHQQNvh3_EPAxal93FA0QThAMDTUAMAwELAUBAHwBYK4QLA6AJJUKkCQQHf4K
Ed7wMmMOMCAOFBlNAWUCBaoAIB0UqQkAEwAQnloJEQQNAzAEXSRhTwABD5z_ByEAzvAyDj0_ACMR
C_kAQhQNDgxAACEEHD8AkAQMRA00DA4wLT4AUAEAEc7wuRcikD48ACFOEK4AMiQOYDMAAE5AEaRB
ABD_jy4CLQARgGkA0G4QIR0kDgAuEM4ALR46BlINJB00DIEAsP4KMb7wNQ0UcF4QAwygLQ4wCxB0
EA3OIKoAAAEDEkRTAGIxrvA2Dh0mAHJOEB0AEf4SugPxCw5EDRD_DiG_8EFuACQOcAwEABFwXgGu
DU4dQAkQJEkR8Qn_DRGe8EVuAA4kEBQtFA0QQSBeAf4BDQ7JAwBrDoINDgD_GfBGXnMJwDQNFBBB
IP4KAA0kMBwQARwA8QB_MA2EDXD_AC1OECQNMB44CxDuQAFADgH_AgoewA1_IA1EHTReEP4IEHEP
QA4QHiA8APAMAQEAIf4C8AQO8BIu8BBeEGQNNAwUDAQMDlCuMx8QLt0XIA4AGQ8ALwAwrh0eySow
DgDOKwYgNk64CuEeFA0eDBQdBE0gngAhjrEKEADLArDeATARzvAJHvA3PicAAGEDMBAkELgFEH4I
IyFeQCoAQC0QAZ7sPhDe1UJADRQQJPkDEDD2APAHEH4xrhAuUM4AATAeAR4NfvBYDg0ULZASEBSC
BzL_Ag1vCAB2A4ABABEuAa7wWPIBgIAOBCwNcP4anlWBAAEQTg2e8FY6ABAe7A7wCF0QLgD_GgBO
AR4A-gDwVg0MFEAdAE4woAKw-gUN-gcA-gjwWA6sQZEUDRCuEP418FkAEsAUDRB_MP4WAP4P8Fls
X9ENBGDuEAH_CwEQEf4LSVHwBTAODWDuAP4MEf4P8Eoe8BL_EBBuHADwCU4e8BgODf4lME7weQ3_
JPCE-hzwGR7wKPwFFSYMAPIBAfAw-gJQbvCZ-gFgXvDQLgFagNAe8LYu8LYBHiB-1hHwVgHwAnMg
JPABJygE8HwB8BIFfxMB8AsBrt0RgA8QrvAJAU5QOTTwBgcOBT4BUAEeAfAGLgEgFD8ZDxUAEQwA
UBANFA8U4BUBDgDgAAwfGQwADAsADQvQDA2JHdMBAAwbHAQLHQwNwAsMEQDRCwQrBAsNABywBAxw
LiEAIBQLsgMAEAARETIAIAwA9gsQCxIAEZAyAPFgJA3wAgQMkCEcJA0ALdAkoA4cdAzAJIAsEVzw
ACSACwQMEVzwAiQQFCwULEHwAyQMDQs0DBQcQfAGHIRs8AUMRBw0XfAFZAw0CxQLBAsN8AQMJAwd
FAwdCxQcBEzwAAwkDBAMBAwQJBAMRA3gDAQMaQLwBgsEMA0ADCSwDQwULBAsEAwUPSAssIsAcYAN
BCsM8AAYAPAIHVANXOAMCxRAHJAUCw3QDQsMMAwUDPBhHgMJAHELDTAMBPAO4UM-DPB941kVHzRZ
WnAPOwAoD7hPANCFIfC1IfBOcfBPEfBPaALxA4cB8BURLgMeEw4x8IIh8BTeAQcA8BROQU4R8Kc_
AUABXvCmAT5QAV4R8KM_AaABLgHwogEeAw6wEQoA8AY_AcARDhHwoAE_AdABHhEQ4fCPHgF8IPAG
EQDxAfCNAR4B4FEA8QMQAfCGAV6gAi6A8QXwhQFegFELALAL8H8PFQYPDT5wYQ8AoAzwfgUPDwY_
QJEOAPIOD-B7DxUfDT5AoQDxGfB3AV5AsRBBEPEQ8HgBHiEMAGAR8HZBMOEKAKAT8HUxIPEAEBEO
xC1g8Q7we-EBDQDwA7DxCvB50VABLgEQoVDxBfB24QwAwgARfgFw8QXwc-EAEAgwgAGO8Q-wcuEQ
dQ0BEACA-gEBMPED8HAzK-E2PiEuIf4BETDxAvBvsTAR-hEhMPEB8G1xcAH_FAFA8QDwbIEwIf4X
MTDB8GyBECH_GUEgwfBrcRAR-hyBELHwaIEQAf4dCgDwAGEQAf4MHxH_A3EwgfBncZ0EkD2uDW5x
IJHwZSYA8DEMHa4tbqEAgfBkgRABPg3_FQ2OkRBx8FER8AFhEBE_LT4RniH_DJEQYfBRIfAAYRBu
DU4QjhEAAf4MoRBR8FIBJwBgrgEQAY4R8wT0C7EAYfBiYRCeASABjhEw-gQRXnEeARBR8GGREwBx
AwEQXhEuURBMNgARrhYA8AoBThE_YRAx8Aoh8ENhEAGeERABriEQEf4BMQBGTiEeARwAcY4BIAHe
ATAbADAhLkEIOfAl8GBhEAFOQRARzjEQMa4NDkFOIU4BHiEAIfBgUSABTgFAEd4xUAGOLQ4REAFO
IV4BHgEQERsAgFFAIf4BITBhQgsAgwDzBF5BEBHwXlEwIXAhfg2uEZABXhGaAAMXAGsRfi2uUUAX
AJABHpGODf4BUV5EAPAGIQ5RHjHwX1EwAf4kERABXnFOAfBgkDUyAb4BBADR-gcBEAFuQW4B8GAx
IBgAFhAXAFExfhHwXxcAEq4bAMAR-gVBbgFOEQ5B8F4qNRABSwHwCL4BMAH_BCEQAb4BHiEOEfBd
gQABjgEwGAAgEf5ALzCuAT4nAxBdWTb2AgF_AUABvgFQAe5REF4NPgFOGgDxAh5RMBHOEUCxLmEQ
AT4tHiEuTQAQEbM3MJAB7jUnEB5ZAfAKDV4BHlHwX2EQMVAR-gEhsCEuURDOYfBhUbsCkFAB-gMR
oBFOMcoC8B2_UfBiQRARPmGODZ5BUBFuga4xDgHwYjEQEf4ELY5BQDFeYRBOAU4xHgHwYRUA8A0F
DZ5RIGEucRABjjEOIfBhQQAR-hABEIEOMR5xJQEQHqgB5EEAAU4PHH5RzhEAUc5BFwDwDWIhAAE_
LE4BsAF_ETARvlEQAX4hHgHwZkFODF4VALAhIBG_YQABvhHwaHcBYaEgEX4x3igBcBAR8EIR8BJe
Ac2RMAF_EV4MvhEeARAaAMTuLK4BLgEgEV4BADEYALAAoTAB-gAMrhEeIVkCYBAx8GYBvqQD8DkG
0RCx8GcB3gGwAU4dziEe0XAx8GgBXg1uEYAhPj3OAS7BYFHwaAFOLW4RcAFuHf4DoWBh8GgRTg2O
IRAx-gcBPqFgcfBqAf5LCUD_CTEOHwARbA8A8g8R-gANTvECUHHwbBHuARAR7i0ucRBhYIHwbRGO
AT4gAFAugRBRQJwtcBHwbQFuIS4WAGAEgRAxUKESAPAM4RBR7pEQMUChECHwAyHwXxEeAZAB3qGA
oRAxEAD0SlpPFUGQAc6hgKEgQfBtCwVfFgILAAs1kAGOgXDBAIHwaSsFCkYPDgQPFBs1AYARPhEO
kWDRAGEOAfBoCwo2CjQKBgoFCyCxAAEuoVDREKHwZAErBQYXDw8GGwD0ZjEuQQAhHpFA4RCx8GMF
NgcGDx8kCiYKDw0FAHEuIQ5RLhEOITDxABChDiHwXisFCgcvDwYJDx8ECBomBRsQ0R4BEJEg8QEQ
oS4R8F0KJhcIJAgJFwYKHw0FC-AAQaDxATDhDhHwWREACwY3CQgPCBQIBhcGNRwA8AvRLgHwWAEK
NgcPFzgPDglKDw07YNEg8QVg8Wkp8AsCEfBDBQZHCC8YCiYKNZCxUPEEcAEOQT5xDpNJkPBBAQUK
BwlvDjYAoKCxMPEFIKFeYQ4jOPAL8D8FJwkEHxgECSYKNfAB8Q9QcX4BHhEuAQ7GM-EE8D4FJwkP
DigKDw0aBTvwAfEQMBsAEG6eHjBR8AJeCfEhPgVnBgULFQvwCfEAoFHuAT4BHhE_AfABAQ7wPwsK
Bhc2BRsFC-AJ4aARLjH_AFFOGwDwBAHwPxsKBioFC-ALIdDxBM4hLjHzSgB2AGBARQvwDB4XB6Ih
HgEuMX4NfhE_HQDwAS4B8EEL8A8u4Q5xDkFuLf6nNADWCeBiLrEekS4Rjg0BziEuIRQAoRHwYT7x
Bv4K4eAgANIBPjEO8QD_CnEeER4BEwCwEV7h-gURXgEuEX4SALAh8GIBfrH_BCF_MRAAED41AEBu
DP4QEAAgIcAQAPAESxHwBQFeLH4N-gYhjhF_AR4BsOcAQEoh8AXzAOYMfi3_BFEeES4RbiEOATIA
ABQH8ACuDf4FkQ4xLiEeMcABDhFKBAIsB4UQ8Q6QEQ4BHhEAswkNXqFwgQ4BkAEeFgDQMe4Bbi1O
8QwOAYARThIAEE5-BfACMW4NTpEAIV4BIGFwEV4B8CGtRzA_EQDkBMIxzlEAUW6hcBEuDR4aABA_
YwTyAi1eAQAB3kEgAf4AQXARHi0OHABRTlEuDW4aAHEAEf4CUUAhNgAwYgFOjxUQIZUAsR4NvjEA
Aa4MzjBBgQAANQZwPmEAAQ4tvscFVCy_MDFeGAAQXo0Ftg3OAQABzgxuIR4BGwC3EU5BAAGeYQAB
-gUYAIExEAEeYQABnj8IQH4N-gDTBiCBLhwAcG4hEJEAAc5NBiAt-qpEABQAAL86IRHeLACwfiF_
4fBjAQ4NTkGxLxCuRgnAAf4BQV6xDgHwZAEtngcwAAGOOggyAIEuFQAxDg0_FgCwfnEQAe4hHkEe
sR4XABB_P0PRAX5hABH_ABEuIQ7RLhYAEFGmNxB_EAagId4RPhEeQRBRPhkAIG5hcz8CGQAg-gIH
CPAAQT4B8GUBXnFgAU4NHlEQjQeBHmEQMT4B8GYWANA_LQ4RDiEQIY4NbiEuOAAkQS4bAONODR4R
DgEwIX4tXgFeIRsAUWUBbmFgZAIWMDQA8AIxHiHwZD4NPlFgAc4BMCGu8fgRECFJAFEuLS5RYDcG
MDAhTghaYhAhDiHwZiwAsA4NXiEeAUARHgEeuDcA7gRQnkFgAS3pBqJQMR4BDoEOsRBBFQAwDg1O
8ETwAyEOgQ7RAGHwaAFuER4xYAFecVg1YAwQMfBpjmkAQGEAUTBMAGDwaQGuMWApAQMQADBjAf4T
BDAQAd7KAPAAETABrhEOsfBnEW4BrkHO4ghgUa4RDkEOTAcwaI4hDQgBEAAAIw8QwRQAQH4xTkFa
AfAQHmEwAd7h8GgeIR4RABFOQRBBPjEeUSAxPiE_8QDwaew8AO4BEF5BSwAgCRAROB8CgApQLvEA
8GohABAuOgICFwAYESEAgx4RDsHwawEOIwAkDmEjACZOESMAQC6B8G6MPyJxQB0AYQFOEUABIB0A
Q26B8IV2ADAOMZCxC-AJgfCNESAxIEGgMSBh8P--LSEQAZAB8JwRhjgQERA8evCZAUBBAEFTDCyO
AZwMRDIuMzecDE4wLjg3Xy8PmwwA0FsR8Fch8Ewh8E8RPxNbBPELTCHwTgGeIfBJIfBNAd4B8KYR
LpEuAfClAS6EDFCjAS4BsAkAMqERHqcEIKARbQUwLgHwIAABHQVBoAEuERIAcJsBABE_EeALAMCZ
IQ8VXgHwAC4B8JozBdARDiEg8QLwgwGOEbARkgxAggGOEXw-IA4R1zBQfAGOEZCOPfAY8QvwegF_
IYCxIPEN8HgBXiGAgQAhIPEO8HgBTiFg8QAg8Q-wd3FQNDkBygDwQxnxAiDxEfBWIfAZkTAxIPEU
8FMh8BMxAKEgQWAxMPEJ8FMB8BTRMFHg8QnweMEwYeDxCvB1wSAhjgE_IR4xQPEG8HLBIAH_CREw
8QfwcKFAAf6UB3AC8HCRQAH_LwLwJwDxA-BvcUAR-hFRMBEAsfBugRAx-hSBILHwbHEwAf4XgTCx
8GthIBH_G2EwofBpcTAR-hxhIIQMkCAR-h6REJHwaBUL8AIggSCR8GdREBH_IaEggfBkcRUFIP4Y
DADwI2NxAAE_EVAB7jEgAe7BIIHwYmEgAS4RYAHOEWAB3tEQgfBiURARLhEAcb4REKG_wRBx_Asg
ET4BBkAEASBOGAzQsSBx8F9RIAEeQf4FAb8CMCARrjoAEF4UABAgZQsAPwzzGb7RAIHwXVEgER4Q
Ef4SMb7hAHHwXFEwAS4Q-hgRrhEOoRBh8AkR8EETAEAQAa7BEgBwIfBAUTA_EREAJb6xEQAg-h6u
CyLxBTIAwCAB-h8hrgEO8QPwXDUG8QMt8QAAYfBaQSABnhH_IfEAEFENAACGADH_H8EfDfAHWGEg
fhFAIf4CUd4RTsEOgfBYcQABbug8AAAKEFB2CoABTvEH8FhxEHMKoQEOEUABziFwEZ4YAACECgEa
AACEA2BAzgHAAY5KEyXxABgAQk4BMN4WAEFuYR6xXgDwAF4QXjDeQBFgjgEQjlE_QQhaQDEQIW4W
ACAwAdsKdo4BEK5BXhEZAOEgAd4QET4RIAGOQa4hbtxlACU-IAFurxuA-gAQbgEgAa60BwkdADER
XhEcAGEwrgEQ-gUZAIJREAH_ERBeES8AAhUAdllh-hIQbkERABBalAZJExH_BxIAEO4qQ1ARfgH_
CBcA0QNR8FsREAHeAaAh-g8RAACoCwITAFAgcSAR-kc0MJ5RHsUAEVw0DkEQgTABFgAwzjEOFgBx
YAG_EQCRUBMAIu5BEQAgARDxAlANQd4hEBAAEs41AACdFBDeg0ixQAHwEAHegTAhzlGuBwBJQpBA
IfAPAe4RkO6sASAhzpEBARMAQP4AAXAaB1BAAa4RjuADEDHpBQD9PdD_AwFAAf4FQRAx8GQRNwAg
-gWWAtIRDhEeYRBB8GYB7gEwFAAwruEgEABA-gARIOQCIAG_jEYwQfBoMBDRIP4DATDOUYBR8GkB
7hEP8ChAAb5hUHHwawGOUTAB3hFAEa5xQIHwbAFuAZBRTjFgfrFQcfBtQS4BkLGQPvEAQIHwblEe
IfAN-QXwBCCB8HBhLiHwCiEO8QAwgfB0MT7IQlAO8QIwoQ0A8RoBoA2PFA0QAR7xADCx8AMBsBHw
U1EOEZAMdAINAAEe0VDR8AExgCHwVdAQ8ABwDHQMDQABLpEgARDBECEbAKBB8FcuAWANdBwA8mgg
YSAcOVAx8AAhkI8OEFe8AgM0AADrQOHxBQBB8Axh8FUBLhEgDRgA8Qk_MRARIPEM8Ath8FURLgEg
DWQMEAE_AZDIAGAKQQ4B8FX4DDANVB1GBJEQ8QcgwfAJMR4XAFARAA1EDZgJcBDxBUDR8Aj_B-II
VwE_IRUtMS7xCiDxAPAJET4h8FURfgEmAPAHByDxAfAIIU4B8FYBfiFOERDxAyDxByYAADkAUO4R
EPECKAUQCggGUFgBzvEiNBVwAfBZAa4RECM-IPAIDwDwAFoRjhEQcaDxAF4hDjHwBxMAEFcCEnMA
IUDxBm5xEgCRMfAI8Qd_gfAGDgBRAQ7xHM4NAPAOIfBVHvEZ-gAhHjHwBgFuAfA4AfAMHvEX-gGB
8AcQAKg3IfALLvER-gWREABhDv4G4fAEEACyEfAMLvEM-gexLgESAJRVziE_Yf4KsT4QAHL_I8FO
EfAECwBU0U4B8AMXABBuTEIBDAAgItG3BvAAfgHwVT4x-hjxAm4B0AGODgAACBJxGaEgMV4RwBEA
AGILlf4ZYTAhEBFuARMAQBH_F3HySBROEwAQITAEYDH_AlEAoRoIAk0AIF4RgwOl-gFhAMEAER4R
wBUAIN4xLwAQcckPAHkIIaARGQDxBiEAAb5BAAHukd4hLgGgAX4h8FVeQRIAACoLMAYBkLsA4Vde
cX5RAAHugf4GAYAhEQBRMRAhXmHtAwBFBAMVADCRPnHICxAQEwCjcEFeAfBXbqEOgRMAQQYhYFET
ADZBAEEVACBBQG0LgVdu8QUAAc5REgDRMNHwV35RALEQAc5BIBEAMMHwWBEAEACdEKAR-gVRMLHw
WX5RfEEgrnHwEYVRIMHwWX7xAhAAhhDB8FpugQCBEQC0sfBbboEQcRABnoERAFFEAfAGbhNCJY6R
FADBEfAFboEwURABjmEwFAAxofBFKABSMFEQjnETAKCR8F1ugVAxEI6BnwAVYRAAQH6RIAEtEECB
8F0BEQAkAAESAGBx8F0RboHmQvAAbpFAEf4BgSBh8F0BfpFQFRFQcYAB-gAGFFFeAX6RkBAAIO6x
ixMMDwChboGwAW6RYAGu0Q8AEQARAFBeoWAxfhEA8QxfMW6BsG6BwAFu0RAh8FwxHgFugYAxTqGQ
QV4RAPAQAc5xkBFesYABPhE_0fBhEW4RPnFwEW6xcCE_8QTwX54DkHFgAX6xcAF_AVBCEWB1SpBe
YXARTtFgMU5dTmHwYR4QHhAbDAG8CiGxQJEKES4wABBjHAAwflFgMSLQEQCxUAEeMR4RAOHwZBgA
MI4xcAczQAEQsWCfCwAyADEB8GQSADB_MYATAHUOARChcAEOTwAQZdVDWaGgEQABGgBjkQAh8IkR
EQAAbRIacdUKIP9IzxkfStoKFQ-rFygPOwD-IlTIyAQPFap1AwEAgZsR8LYh8GgxjwfwASwR8B0B
8DuRAGHwWSHwM8HyUSAAYYILIS7hAEdgMRBh8JLhPD5QABHwjXGFRoDwCgHwipEQce1aAJ9IABcG
8AjwiPEMEPECACHwg2EQwfAAoQBB8H6BMGgWIQRxIQCAe1GQEXCRoFEEUfAz8HmhACGgAZ8TATAR
YMHwYRHwA8GQ-QcBYMHwdZEQEVAh-QghQMHwc7FwAf0NAVBxIBHwcYEQEVD9ESEwcQAx8G9hpAmQ
QAH9FBEg0fBtiU2QAf0XASDR8GxxhQ4g-RoMACBqcRZK8AL9GxEwkQAB8GmBYAH9GzEwgQwAEGHb
SKD9HEEgUQBR8GZxrAqw-SABIMHwZpFQ-R9AV5Cx8GahMP0fER0LABBkC0kBGABiDQEwwfBiWQAw
ITEgDADgEAEw-SQxMLHwYMEg-SQUABBg6wgx-SNBCwCiIBEQ-SJhMFEAQQ0A4J0B-RdhUAFAMfBf
gVAODgDwAXFAMQBR8F2BcP0icTAxEFE6dAALAECx8F2RBUsADAAA2FpsXcEQAf0jDABgMQAB8F2B
o02A-QwR-QSBMEFrSSDwXCEA8BoKATD9A4EwQSARABHwXKEgAf0KUf0CkTBBAHHwWqEw-QoBAAH9
BpEQYShIARIAgAkQAf0GoSCxDwCBkTD9ChH9BrEOAI8MAfA9kSD9Iw4AAdBakSBNMf0HYa3BEPEA
DgAQPR8B8BEFAWABjdEQ0fBckSANAXAB-QLQAS3hMKHwXpEgAZAB7V0-IA3h7kjwB-BdscABzQHw
AgEN4SBhAFHwXMHAAa3TB-AHDeEQ8QHwPAHwDcFQEVCtAUARsAEtwRQAIDsRFADAAQ1QrQEwAR2w
AT2hDQlEXLFQERIAoC2hMOHwXbFQAWA4AGCgES2hMHE6ATCx0K2RFBFNMQACDgBgAAFdkSDhSQGQ
wbABvQHQAX2BRwmAXcGg7QHAjYFwACBfsWVHgED9AgFwEZ1xHgAgYKEgQfEBABE9AU0RbQEQQa1x
MJEQQRcAcK0QPRD9CnH8GjJgkSAPADAJcSB9a5CBIL0RPRH9CWGjDmBigSD9HVEKAGBjgSD9HFFr
dtBkYTD9G2Ew4QAh8GVRCwAANwAQZgoAEFFnGzBmYSDHAgAqAACWDjD9GjEWAPAIaFFA-RkxQPED
8GlBQAF9wV0RrSFQ8QLXDmBtAcABTRAPAPAJAfBtUSBdAeABPRCdIRABQOHwcDEgET1Qn0BCESAB
LRYAkNHwcjEwPSABrf9BAhMAELEzHEA9EAHN5kGQEJ0REBFQkfB2K1MgEe1XQDARnQFnXPAVEHHw
eEEQAf0SATARIBEgYfBHDvQWDxSQMSAB-RABICEgISBRPATwAS0F-x8WBLAhIAH9DgEgITCIBBAL
FwDAHL8WDEsMqww7DAWwoAMRDB4A8AUwIfBLBQsMCxwEbgsMCw8UDgoLDKw_kAwrBQ4EDEsF0EkA
MAoBIKxR4FMFHAscBRAuEAQMCw4AMHwBLgBAHAUABFYAEfBPA-QDByEQAR1AIfBTBUsFEAULDAoA
LgBiBA4KSwUOKwBQAQEw-QZKAnEBMDEgHvBOLQAnHAUsAEIFKwwLgwBA8Ab9BFRLcGEgHhA_8Egr
ADYONQtVAAMpAABXAIAGEf0AIZBRQIOCdkcFSwVABRsoACQLPCcAoQgRzQGwYTAOCg4oAABBAFQQ
DhQFClUA8QMLDgVMBQ4EHCsMBfAKAX0BsKEsADx_8ESoADALHhQAASAFFCsA8AQLcbBxYA4aDgCe
8EMFSwoQBRseLyYCUgDwByAFCwwFIA4EGwwF8AUOCg7wArFgDioeI2BABUsKIB5VARIQKgBCChwF
MCgAgRoOAE4gMVChKgCg3vA-BQsMGwwEXqkAIAUOtwFhBS4EHAQ_LQDwGQQOCh4ADioOEFFQkVAO
Og4ADooeGg7wPgUcSwz7DQwF8AMOGhAeKg65T1EgkTAOSiIAoCoO8D0FHCvcG8zCAHACDioQDioe
IwAwMIEwRQDwCB56HkoO8DwFCww7RAssCwRLBAscC0RLwwFgDjoADjoeHVGTQHEwDkoQDnouKwAR
K3kBIQQOfgEA_AAhEC66AAA1ACIqDjYAURAhQGFANgAiHlo2AAB5AiEQDjUCAK4BkBwEHgsMBQAF
JG0AEAC5AACzAPADMRAxYEEwDloQDmouOj7wOwVMMQASCmQBUAUsCw4KjwGAJAsMKwwE8ADMACAO
Sqg-0kFQMUBqEA5qHkpO8DrIAlEFHAoOBKEA0RwLDgUcBUAFKxwF8ACiAPgCSh4gASBBUBEwARBq
DgAOWi43ABUFbQAACwJACiUEG48BBDoAYA5AESARQCZXEh47AEE6bvA5FQFQEAUMCx40AiEEHKgA
MQ4EPMkBA94AMDoOUKFO1SEADmoOEA5KLlo_Cg46AARHAgPMAgCDAmFbBRABPZDIAfAAOg4gQYBx
EA5aDhAOWh56_AFgOQUcGwwKTS_QBAsMCwQOAC4ArgCHPgQLBRABXYA3AAC0AGAAPkouek41AFML
HAROBAYAIAROeACBAW0BcA5KXhqgVkBxEDoetAHzBYpe8DgF2xz7AAUQAY0BYA46LiAOIgABCAHw
AR4KDmouem7wOAVbTGtMKywmA5ABrVAeKi4KDiBNAwDvWPMNYQAeKk56Hop_8DcFHBv8CCsMBQBd
ET0BQA4qPicAICEgJwBgDlo__gNuJgAAygICWUZwTQEwDhouACUA8AEOGhAxIDEgYQAOeg4ADvoC
KgCSLAv_CwsFAE0gKABREAoQDiomAMBBAB6KDhAO_gNO8DehAnP_CwsEDjEgUAAAsTISOigAJRCa
JwBh_xIOQAFdIQAiAB4hAPAUARABIEEQih4ADloeui4KDvA3BTvMCzwLHAscOwwLBAUUDgBUVBEe
lS4AlwMgIRCnVDAeem6bA_GqLhoO8DYFK-wDOzx7BSoAAEMvAVwAAAYREDHLAPACEA4KHkoOALou
KvA2BQsM_xP7ABAt8kYhDgrRNhA6BzgwQTAh2AKQEA4KLjoOAMoeLQBALAv_Ak8DQ14FSwXRVwCV
AQAuASAuKjUAIBFgNQCWDhBeOg4A_gEOMwAQbjIAIWEQLgBAEBoOAM8EUCEQAXAhWQJDAF5KEC4A
IPsTWQB3MSAOKk4ADigAMBEQev0BgB5qENoeGvA2hQKiC2wLfDscKxxLBVNHQxAeGl40ABIQMwCB
Si4AHqo_qi4xAFP7AwzrDCsANgAOOisAIFAO3WVDSk6qLkABFTUVAWwNMQAOKm4qAAFoARAKBgCD
PhoO8DQF_xYrACIaftsAMBARcCkAQTo_mj4nACROCicAIUEQJQC4LhoQAcARHjoQDqoiADMc_xQj
ABAABQVQCg5AAaDLBACWAEYADro_JQBGMRAOKiUAbQARcA4qTiYAYxAREB4ajiYAgHABcA4aHgAe
awAwAA66UD6RDPsVBVAOKo4QIQAg8AHnADQeql4gAKUOGv4OCl5ADiqeIQBUCg4AHrohALRh3hA6
LvACHgAe2lQAUFkOQP4A_ANxYAGgHgAO6hgAkcpO8FkuAP4BEBgAU7Au_gA_FwAyWv4EFQCBMA4B
YA76AV4WADBb-gNyBFBQAUABQHUDARUAa13_ACAOahQAg_4wDmpADgGgEgBwPvBhDgpuYCcABhMA
0WIuAB6ADmrwAg76AX43ABxwDgABLwAHDwCkHgARYA76Al4AHiAAkw4RcA76Ak4Q6hAAkAABgA76
Az4Q2m0BMXAOaqkBABEAI_ouEQAxUAGQMgAQDtgC8gY8AfAkDmogAYABMA76AW5ADroO8D0UAMER
YBEwDvoAflDO8HKYAIDqfhAR8IIOam8BopoOOn4QHfEA8HIQACDajmBMFAEPACDKjgtMMB0hHQoU
IfAIPwBz2m4AEd0RLU0AUdpeEAHtDgAQWkmFMFoOahEAMyENASAAg8puEAENIZ1RDwBAGk46jjEL
VQABTREtFQAwXiqOSk0hTRCgSkENAfBzfgBRSh5qfjAWABYQFQAlWg4VABMhQABQKj5KrhCQTgA-
ADIR8HOLAHEaXiq_ED0BfVhxEfB1DjoOChcAkQ4KPhreABEdIJ5MJPB2GAAh-gb6DtJ5Kj7wAg4K
-gnwhA4aCwB5CvCDbvAC-i4PTe0B8La4G2M2Ny41MTCBhCMxNIcPgzMxLjExNzg1GAAPzBsQUJ0R
8LRBpVxRNfEG8C4KAGAz8QvwLCFZXfAWMPEP8JfxFPCR8RnwjvEb8IvxH-CH8SPwg-Eo8H-xKvB8
8QfwBdYRgBHwBPEGQLFwFBLwGBHwA-EEYAHPEwGQ0fB18QJwEf4BEQ4BUNHwcvEBUDH_BxFA4fBv
8bkXYQ0hMNHwbQsAEBHWDvALbeFQEf4SETDB8GvhMBH_FhEw0fBp0SAB-hseAPATZ9EwAR4j-hcR
MLHwZ8EwAQ5T-hYxILHwZcEwAS4TDhP_FgMP8B5j0SABPhMOA-4aESDB8GHRMD4z-hshILHwYOEg
AS5D-hpBIKHwYNEgER5D-hsMAIBf4SABHkP_HiQAwF7hEAEeU-4CE74DzlsA8QRd0SABLhMeA-4P
Ew4THgNuEQ4BFgCQEAE_E-4TAx4DRSDxAzCh8F3BIAEeM-4TA85BILHwWzYAcP4hYRCx8FpeAHQj
-hETTgN_EADyBT4D-hETHgMeE35RENHwWOEg-hYjDwDwAiDB8FjRIAEOA-4EE94jPiN_yhAQWG8A
YBEQAR4D-rBZ8AMeIw5THgNOcRCx8FfRIB4DDlAwAPADAJABDnMeE05xAMHwVgEesRA_VgHwAAJR
DgEgHhMeIx4TPoEA0RMYEKFUE0BAER4DNCcQERoA9ApugQDh8FQBPpEAAR4hXiO_Ex5TTgABHiMO
GgDwAi6hEB4BHqPeUx4TblM_kQDhOlYQQhcAly6THgPeYz4TPhcAxB6xEB6j-gcDLkMuQxYA8xNB
IQ6xAAEOs64TzkMeEw4zLqEA4fBTAS6xAAHDrhPOUw5jEgBAHsEAAcoBKKM_EAAA9hmiAoABHhNO
Ez6RIBgAYBAOAw4BcBMaUpABfgNOFwDALrEQAR4BgA4DzsABJysgPqF1FAAYAAChZhDOcx4yM06R
FAAwHsHwti2BAC4TXqEQ8QASAHCAEVABngFACyMjA24WAPQBLsFwHgFAAY4BQAEOEYABji0AceFg
LgEwAX7kLQUXADARHtGnFAAYAHNgIYABfqEgFgBQ4AFOEw5QEGAOA06BDgG_D1A5EfAJARoAMS4D
DhwAZn6hIOHwOxYAAdEkEJ49UgEWAIERHsHQAZ4B4BMA4AHwVhEO0RABkA4jDhNeuSQyA35xFwAB
NAEgAWDCATcjbsAZAABvARADKEcwjhN_aEvwFs5hEPEC8FcRDsEADhNeIw4BLgOOER5h3mEQ8QPw
WAEOwQABowE9GoBeA-4FYRDxBBUAQKEgHlOvAACMWzAg-gQUAxAxRwCAWsEQPnNeAx4QIxATkwAQ
LvkZ8APwWsEAAR4DHuMOIf4BEx4DngFMECBaIQ4YsA4THnNeEx4B-g8RXAAhXKETALQDDkN_A-4P
AQ4RIBUAYAMeY24D-nVS8AME8F2hAAEeMw4T-gwDziEg8QXLEaAOY-4HIAFOE34hIgBgYIEgARMO
IwBwAwFAPhN_EZ4QADATw2OeI04xUAEuE34BQBMAIC4jyQAQ3vABMRN_EfwQYHEgAR4DLtMv8AoO
I24RcOHwZmEwPgMe8AgBEA4zXhGA4fBmOQAQEwAn8AYhDhEOA34RoNHwZ3EgAQ4TDgMu8AFwHBBg
yROAaWEwDhMuAw52AkADXgNuXXAQoRAR8AMBftF_Ax4TXhFAQRCR8AUh8FXdHzAXMTBJaPAaBiHw
KQEfFfAMDUAdAE0QIUD_FwEAETAxQEHwQw0fFjU8JSzFPAUcFSx-NlAhMAH_FNFe8AMxYDHwQwUf
Dz8fLw8fH08PLx8MAJEPDy8fDw8fHw8FADEfHy8QABAFrBQg-hIPEbAx8E4NDCsfHxsKDBxq8AJK
CxorGgtKGyoLGgwKCwUQMb8gACgA8AdBUA3wRw0MCowKLEosGiwKHArMBRBB6CAQATwR8AwgDRAt
8EUNXGUsCgwlLBUEPAoMFZwFwBH_ChEfAPASMB0ATfBDDUwEDUANDCoFEA0cDRAFPAsMDQAEfAoF
YDEwrB4BQ160LQBd8EINDAocCgwsAHAMCg0QBRwaLgDzBgUMCjwqBYAhMBH_AwGgcTAdEG3wQS4A
URAFBEUMLwAAQg4UKl0AAI8BMAEBwCwANI3wPywAIAwbhQADLQAQGhMAMAAMChwAECwxADAeA84y
AKENDxQNEJ3wPg08XwAQHF0ABGEAICwajwBATAoMCjMQ8gABrgGgsTAdCQ0QXTkd8DwxAEQ9BQQc
6wAAYQDzBAVsCgsF0AGQAeDBQA0ZfWkN8DuPADNABTopAAJXAPQEbAsKBdABLZBRQOFADSlteR3w
ObkANC0FPBMBIQoLFAEgBFyObfMJ0B0JDQBdEEEOAUDhMA0pXakd8DgNDBoMugAzHQUMYgAgGyrs
APMMCyocKgXQDRkNAA05DRBhUMEwHSkNAB3ZHfA3NgBCAA0MG-EAEAU3ABBKNgCBGhsqCwoFwE01
APEDUSABMEEOUTANOQ0AHekd8DYNdQExEA0FFTgCbwAgDTVqNvAHNQw6BcA9AB05DQBRICEgoUAN
KV3pDTIAcwoMCgsMDXAvAMNgBQwNUAUMKgWwPRAtAPwFQIEwHSlNuR0ZHfA1DQw6DA1gBRwsAEAA
HUkN02owQGFANgDxGQENaQ2JLfA0DQwqLGUMChwlHHUcZSwKCwWwLQEdWQ0AMTAxQGEwHUkqAFAd
WR0ZDSwAMAsqCwECoDoLOiyKbDobBaAYY-AELUkNMUAxUEFADVkNAB1pDVkdKS0A8AAKCwoMGhxq
DDosihyKCwosAJFdOR0RUDFwEWAqACNJLSoA8QoMClxKPBqMGhwKnAoMBZAdGV0pDWBBwAEwJwCA
OT1ZDTkd8DN_APEWDGU8FTwVLAUsBGVMBZAdKV0JHTBxQIEgDVkNEA05PWkNSR3wMgIBMEANDPIR
AD0BYQUQDAoFAA4BcDwFgC1JbQBVGNaRIA1JHQAdKT15DVkNNQAVCjUA8QUaBQANGg0gPQUsCgWA
LTkdED0AYSpfcR05TUkd_QA1ACALKjsCMAsaLDYAUBoFIAoMaQBAAA0FfDUAcBk9EA0ZEGHlZrUg
DTkNIA35CB3wMXICIAsaoYMLOQAgDAQfAMAcBXA9CT0ALRkQUSAjZxEdPgAnCQ0_ABIqPQAAegAA
EJXBGg1ABRocBA0gAUBdqAKQQSAxEJEQDTkdOQAxHfAw4gAwEC0ANwChEAwaDAAFEAUABVkDQAwL
DA2PdfABID0ZDSAdORBBIEEAgRANSTsAUQoN8DANcgMpHSA7AAC6AsEdBSwFQR4BIC0pDRBgAhAQ
oWOQDUktEA1ZLfkBOwBAPAoMHYgFAzkAMQwgDb4AtgwaDAUAAV4BIB05OwBgcRAdWS0A9gFgDfkC
DfAviQGAGgwdBAwaHAvDARY8QACTLAoFAH4BEA1JPgB6AFEQYSANaT4AETqiAzM6CwrUAQAGACIQ
DfMAQAUAjhDgWwZ_AFBRIB1pHfYAC0AAAPoEIAUdiQCSDAoEDQUKDB0wPwARTT0AAS5YZ1EgDXkN
IDwAYFoMBWwKHMwBEBV6AEAMChxFH1WwDjEuAQA9GQ0AHVl2YgAUBkZZLQAtOADhyhwqPAosGgs6
DDoLDA3ZMwCvAyANaS8AlRBREB1JHSAdWS8AYAz6ABw6HJYDYToLKgwFDXceoU0JDQANGQ05AEFI
YGYtOS0QHWkzAOGaHGobKisKHBocGjw1Da8e8QldAA0ZHSkAQQBhEFEAHUkdEB15LQAN_QEwAPEF
CyocBQQMBCXsChwEFRQFDDobBQCYAEAQLQAdQgGBAEEAcQBRAA04AEUNCR0QOQBQDA0A-QKkAjAN
AD1vBhIKOgCALRAdAF0JDRDdYyBRHcMBEHkhBWIN_QAd8C7FBaD1AQ01PFUEDAo8MwAQEBNc8gEd
AH0QIRBhIDEtKR0gHckNoQABMADhGgwqTEoMCixKDCoMKmwyAGEpDTAdGT0xABARPwOgEC3ZDQD5
Aw3wLZwXEUqdBOAKCwocGiwqLHocChwKBXwfAjYAAN9ntiARAC0pHQAdyQ0ZOABQKhwqDGo5ACAc
CnUBICwaDAcAGS1TAA05LQA6AIIQMR0pDSAN2TkAAKEAMAuaG3EAcCobSgtqTAV3CgFnAvUBHQk9
CQAhIGEQMQ0pHRAd2WoAsA0MOhwUHAQcFAwVAT5xBEwEFTwKfDkAMAANSXYBE004AGUZLQAd_QI3
AAHRB7mdEG0AHRANAA18GjMA1BAREHEQIR0ZDRAd_QMzAIAKCyoM9Q0sOskIAC0AMA1ZDT4CICk9
3WhAEBEADfIGNPkEHS4A8Ac6HAoLGhw6CwpcGgxaHDocGgUAIQ1JWAcBKgAANgBBIAEADWUAUQQN
APkCogHBehs6CxobCiw6GxoreQEQLPF-JkktawAwQC0goAIVGTMAYBoMSlwabL8H4QocKgwqDBos
BSANOT0JjQeIMBEAgVAdEB0yAPIGCgsKTBpMGgwaPEocGjwKbAUQDTlNLwAgICEvACIALS8A8AIN
_QLwGAHwBQ0KC2oLChwKK1l1QJoLaizyBSk5XTMANw35BzEAIPwdIgAQTUQAPUkwESEAYAYB-R4p
fUAAMEkNIB8AND35BKAAQ1UdMC0cAAElAVBQLfkEHRwAcAEd8FR9WW0aACFZDRoAAHQFARgAMVVN
eRgAEWkXACD5C0oAah3wVS2JjRQAcA3wVx1JDSlKASANads0JEANGQB1WE0JDVktMBcAMAc9EMoB
YFqtUA1pQBEAmQgdIPkD8FyNYBAAdl1NkA1pDTARABRsDwAxBV0QdwMIEQCAPdkN8DcB8CQTANCh
IA35Bj1g7fA2IfAjEQAgsRARAEEQAfBKIgDwB1ARoA35Bi0QAS7h8G4NafADDfkFLSCcLijwbQ8A
BR0AEB3JLyDwWH8BAhEAEA05JKDwVyHwBA1pDfACEgAAijQDIwAEEgAA2ygFUgCYDRAuMT4RLiEu
EwAAgA4DpCMmER4ZACEtYBUAJxABLQA0LVABFQAEmABQAh0JPTA7BQAWACQOERcAYQEdSR0AERcA
AOo1YXANafAE_VEJAJRpAUYAQQ4B8HEtAGLpbSkdQRApOBNyugCAAU1JDWAR8Hc4APcBDcmdKQ3w
gW3wBf0BAA0AXZASH1-oEikP7iIoDzsA----------95UG09OH19
:: gfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE2OjQ3OjIyIixtb2RpZmllZD0iMjAyNS0w
Ni0wNSAxNjoxNDoxMiJdXQ==
:: map/
:: map/0.map
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE0OjA1OjM1Iixtb2RpZmllZD0iMjAyNS0w
Ni0wNSAxNjoxNDoxMiIscmV2aXNpb249MTgwMV1dbHo0AKgAAABYEAAA8Ah7e2JtcD11c2VyZGF0
YSgiaTE2IiwzMgMALyIwAQD------yM9NDgwAQAvNDABAF8iNDEEAA8BANEfNBUABS80MAEAZ181
MDAwNoQAZFMzMDAwMQgALzcwAQBfFzIEAB44iAEPAQD---------nvEIIiksaGlkZGVuPWZhbHNl
LHBhbl94PTAIANJ5PTAsdGlsZV9oPTE2CgAQdwoAgHpvb209MX19
:: map/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE2OjQ3OjIyIixtb2RpZmllZD0iMjAyNS0w
Ni0wNSAxNjoxNDoxMiJdXQ==
:: sfx/
:: sfx/0.sfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE0OjA1OjM2Iixtb2RpZmllZD0iMjAyNS0w
Ni0wNSAxNjoxNDoxMiIscmV2aXNpb249MTg0MF1dbHo0ACcGAADJGwAA8idweHUAAygAAAQABA9A
EAIOAAGgASACoA4ADxAADfDJDg9ID0IPQwQFBgcAA5APQQ9IYAOQD0IHABJDBwASRAcAj0UPSFAC
A-D-AQDr8QOCARAGDyAQASABIAHwAA8SEAIOAPkuDyEPqhABD-8gDzEgAVABCSAPPiAPVPAGAQgg
D3FQAvCMDygP--DGD-gKD-8PgA-3Dw0BcA9iD0EPTg9HwFMAQAIQAgxRALElDxYP8BEwD1fwwzwA
WgYPIfCvQAAQZT4AcA9BD0cPRaBEABwdRAD6FSEgAQ-_EAQPVg8xgA8RAhAEDg8oQAIgAQQQBAzw
owsPngLwxVMAAJUA-QsyD24Pbw9kD2UPLQ9mD20PYg9hH3MgARAGDGAAEQr0AB0N8wDBQSAPShAC
DxfwiwsN9gAVDWIANGQPSfUAAUQAUQUHDzYRUwAhDx9UAFADEAFADK8A_SYgDFABAhABMA-U8KML
DdABUA8VDyUPKg8vDzUPPw9KD1oPag96D38Pjw_fD7kPzw-p8J8BAGwAoGwPQQ9TD0UPUrAfAREe
bwBHD_EAEcIA0w-3DwUAESAPoiAPqFB1ADAgAeDFAPkSHSAPDxACDz7wAwkgDyogDzMgDy3wag8S
Cw0JsAGgCfCsbAACjQEA3AAvRaAsAQJrIAEwDvDDEAEv8AksAP----88H-8BACZfQwEQBgJmAABi
IAQPLw9aPAaADxMADjACARAVAJEh8KIGDwwP6gpABh8NPwYIhWwPdQ90D2UwYQB1DwUPFQ_w0GUA
-xoQAQ8FDzoP8QEED4gP6QFwAQgQBA84D8IBQA__8KsED_UL8AUJ8K0BAGkACnJhD2MPaQ9krAYQ
AO4FFiHPAGEGDyUPEhHRAJIP-RAED0QAAXDTAJAQUAIPKhABBhDTAO_jD0EADwvwBQ8UAAnwrW8A
Ct9zD3QfZQ9sD3APYQ9uEwluEHDOCfMwATAPMP0vAP0vDP0v8HAOAAQPDTAPKQ8vDA8rDzcPKg8b
DyQPKgsPJA8sDyH9I8D9Iw8RDw8PDQ8RDwsPEA8OCgBADxz9Iz4A8QQPFAIwDzAPIv0uAQL9Lg8N
Bv0uVQAfBVQACBLDVAAUBVMAGgVSAMK2ATAPKf0vBP0vDxCjADAHESC0ACUPBbUATwdA-bAIAHYf
-wEACh8GJgAJ0QUOAA8MDjAfMx81PzcGAFE6HzUfMwQAoTcdPzofMB8zPy4ZABQ8GQDlPy4-K-89
Ch34FA9aD0gEAD85Dy4QAAoDBAAfHS0AEgwQAAwYACE5D_cBAbwAD6MABAIKADAPNw8GACAwDw4A
oDcfNQ8zDQ8wDy7vAE4-NfgwXQAPEAAIDBgACyAAEy8EABUPBABgDSkPSAkKKAAoCQqzAAB8AACj
APAAPykfNx0fNR0fOh88HzofFgABpwCIPzo-PH8w_DA8AA8GAAERHQMABAIACBoADBAAAAYAhQ8k
Dx0PFw8SOQEPIQEPDyMACxAwxAAi_DBuADEpCikIAEoJDSkKfAAPHgAJD4wAEwFpAA-oAQEPgQAX
DwoAAQYOAAiLADF-On_JAZF-MH83fzV-M39iAAhBAQ8OAAEIBgAOKAAPDgAbBIoA-wL-GAYd8g4d
cvEGHfEOHXEJCgIAAQcBAg8fAAoEVQCR-QwS-Q4S-Q4RAwAgCQoEABAdHQC-Bg4wDysNCw0LLQsG
ABaPDz4NAw0DLQMGABZfDA0MDQwGABgDmQAf8gkBOA9TAEcPWwEGDLYFD38AZA93ADwPygBoD0kB
bw8kAANG----AycABHcHHwMLAAAPAQD-CBFrYAGjX1QdVR01PTU9VQgAdVEdUR0xPTEIAAm7AQEH
ABU9BQAPGAABA7gBD_oIHGA78Qod8RRBAAThBQoKAANlAA4bAAwlAAIOAARoBg_4AlxPBg4wVU8B
Rw9ECC2AO-EDDfEPDbFYAA-HBw0OHgAPVQHBD4sCAw9sARAk8SNHAQYzAQYKAAYOAA9RAQIPpgLl
AIMCD-4DBUADDfEcSgAPKQEHARQADwoAAgYOAA9RAb4CwQwfO8AMC0HxBh0RPQUGBQEPxQw7D08B
tgxzDC978XIMXR--AQAyUP----_K
:: sfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE2OjQ3OjIyIixtb2RpZmllZD0iMjAyNS0w
Ni0wNSAxNjoxNDoxMiJdXQ==
:: asteroid.lua
--[[pod_format="raw",created="2025-05-20 13:51:18",modified="2025-06-03 13:32:01",revision=865]]
function new_asteroid(position)
	return{
		_position=position,
		_speed=new_point(0,2),		
		_sprites,
		_sprite=0,
		_flipx,
		_flipy,
		
		health=0,
		threat=0,
		name="dummy",
		init=function(self)
			self._sprites=game.sprites1
			self.flipx=rnd() < 0.5
			self.flipy=rnd() < 0.5
		end,
		update=function(self)
			self._position+=self._speed 
			if(is_point_on_screen(self._position)==false) then
				self:kill(3)
			end
		end,
		draw=function(self)
			spr(self._sprites[self._sprite].bmp,self._position.x,self._position.y,self.flipx,self.flipy)
		end,
		damage=function(self,d)
			self.health-=d
			if(self.health<1) then
				self:kill(2)
			end
			return self.health
		end,
		kill=function(self,mode)--0 hit, 1 deflected, 2 destroyed, 3 passed
			if(mode!=3) then			
				local particle_system= new_particle_system()
	 			particle_system.spawn_rate=1
				particle_system.lifetime=10
				particle_system.position=self._position:round(tileSize)
				particle_system.particle_position_r=new_point(-8,-8)
				particle_system.particle_speed_r=new_point(-.5,-.5)
				particle_system.particle_halflife=0.99
				particle_system.particle_animation={127}
				particle_system.particle_flipx_r=true
				particle_system.particle_flipy_r=true
				add(game.particle_systems,particle_system)
			end
			del(game.asteroids,self)
		end
	}
end

function new_small_asteroid(position)
	local ret = new_asteroid(position)
	ret.threat=1
	ret._sprite=65
	ret.name="swarm"
	ret.basekill=ret.kill
	ret.health=1
	ret.kill=function(self,mode)
		if(mode==0 or mode==2) then
			play_sfx(1,channels.enemy)
		elseif(mode==1) then
			play_sfx(3,channels.enemy)
		end
		self:basekill(mode)
	end
	return ret
end
function new_large_asteroid(position)
	local ret = new_asteroid(position)
	ret.threat=2
	ret._sprite=64
	ret.name="large"
	ret.basekill=ret.kill
	ret.health=30
	ret.kill=function(self,mode)
		if(mode==0) then
			play_sfx(0,channels.enemy)
		end
		self:basekill(mode)
	end
	return ret
end
:: camera.lua
--[[pod_format="raw",created="2025-05-19 23:50:11",modified="2025-05-26 01:15:35",revision=73]]
camera_helper={
camera_point =new_point(0,0),
camera_desired_point =new_point(0,0),
camera_shake =new_point(0,0),
shake_intensity=0,
shake_timer=0,
shake_time=0,
camera_shake =new_point(0,0),
-- Function to set the camera position and update the variables
set_camera=function(self,point,instant)
		self.camera_desired_point=point
	if(instant) then
		self.camera_point=point
	end

end,
get_camera=function(self)
    return self.camera_point
end,	
update_camera=function(self)
	self.camera_point=self.camera_point:lerp(self.camera_desired_point,0.5)
	 self:calculate_shake()
	local c=self.camera_point+self.camera_shake
	 camera(c.x, c.y)
end,

shake_camera= function(self,intensity, t )
	self.shake_intensity=intensity
	self.shake_timer=t
	self.shake_time=t
end,
calculate_shake = function(self)
	if(self.shake_timer>0) then		
		local strength=self.shake_intensity*self.shake_timer/self.shake_time
		local point=new_point(random(-1)*strength,random(-1)*strength)
		self.camera_shake=self.camera_shake:lerp(point,0.5)
		self.shake_timer-=1
	else
		self.camera_shake =new_point(0,0)
	end
end
}
:: director.lua
--[[pod_format="raw",created="2025-05-26 03:25:48",modified="2025-06-05 16:14:12",revision=723]]
new_director=function()
	return{
	scenes={},
	current_scene=1,
	total=0,
	timer=0,
	goal=10,
	init=function(self)					
		for i=1,#self.scenes do
			self.total+=self.scenes[i]._duration
		end
		
	end,
	update=function(self)
		local scene=self.scenes[self.current_scene]
		self.timer+=1
		if(scene:update()) then
			if(#self.scenes>self.current_scene) then
				self.current_scene+=1
			else
				self:kill()
			end			
		end
	end,
	draw=function(self)
		local scene=self.scenes[self.current_scene]
		scene:draw()
		--print_right(scene._timer.."/"..scene._duration,0)
		local fill=self.timer/self.total
		rect(screenWidth-101,0,screenWidth-1,10,31)
		rectfill(screenWidth-101*fill ,0,screenWidth-1,10,31)
	end,
	kill=function(self)
		game:finish_level()
	end
}
end
new_scene=function(duration,rate,action)
	return{
		_duration=duration,
		_timer=0,	
		left=0,
		right=480-16,
		message="Smooth flying",
		spawn_timer=new_timer(rate,0,action), 
		update=function(self)
			self.spawn_timer:update(self)
			self._timer+=1
			return self._timer>=self._duration
		end,
		draw=function(self)
			if(self._timer<=60*3)then
				local c=8
				if(self._timer%60>30) then
					c=24
				end
				print_centered(self.message,0,c)
			end
		end	
	}
end
new_pirate_scene=function(duration,rate)
	local ret=new_scene(duration,rate,function(self)
		--local pos= new_point(self.left+random(self.right-self.left),-16)
		local pirate =new_pirate()
		pirate:init()
		add(game.pirates,pirate)	
	end)
	ret.message="Beware of pirates"	
	return ret
end
new_asteroid_scene=function(duration,rate)
	local ret=new_scene(duration,rate,function(self)
		local pos= new_point(self.left+random(self.right-self.left),-16)
		local asteroid =pick_random(self.asteroids)(pos)
		asteroid:init()
		add(game.asteroids,asteroid)	
	end)
	ret.message="Avoid the asteroids"	
	ret.asteroids={new_small_asteroid,new_large_asteroid}
	return ret
end

new_parts_scene=function(duration,rate)
	local ret=new_scene(duration,rate,function(self)
		local pos= new_point(self.left+random(self.right-self.left),-16)
		local part =new_free_part(pos,pick_random(self.parts)())
		part:init()
		add(game.free_parts,part)	
	end)
	ret.message="Get the parts"	
	ret.parts={
				new_part_engine,new_part_engine,
				new_part_bulkhead,
				new_part_scaffold,new_part_scaffold,
				new_part_gun,
				new_part_shield
				}
	return ret
end

new_cargo_scene=function(duration,rate)
	local ret=new_scene(duration,rate,function(self)
		local pos= new_point(self.left+random(self.right-self.left),-16)
		local part =new_free_part(pos,pick_random(self.parts)())
		part:init()
		add(game.free_parts,part)	
	end)
	ret.message="Get the cargo"	
	ret.parts={
				new_part_cargo1,
				new_part_cargo2,
				new_part_cargo3
				}
	return ret
end
:: error_explorer.lua
b64$LS1bW3BvZF9mb3JtYXQ9InJhdyIsY3JlYXRlZD0iMjAyNS0wNS0xOSAxNTowMjoyNiIsbW9k
aWZpZWQ9IjIwMjUtMDUtMjAgMTk6MTI6NDAiLHJldmlzaW9uPTQxMl1dCi0tICMgcGljb3Ryb24g
ZXJyb3IgZXhwbG9yZXIKLS0KLS0gYnkga2lyYQotLQotLSB2ZXJzaW9uIDAuMC42Ci0tCi0tIGFu
IGludGVyYWN0aXZlIGVycm9yIHNjcmVlbiBmb3IgcGljb3Ryb24uCi0tIG9uIGVycm9yLCBzaG93
cyB0aGUgc3RhY2ssIGxvY2FsIHZhcmlhYmxlcywKLS0gYW5kIHRoZSBzb3VyY2UgY29kZSB3aGVu
IGF2YWlsYWJsZS4KLS0KLS0gIyMgdXNhZ2UKLS0KLS0gYGluY2x1ZGVgIG9yIGByZXF1aXJlYCBg
ZXJyb3JfZXhwbG9yZXIubHVhYAotLSBpbiB5b3VyIHByb2dyYW0gX2FmdGVyXyBkZWZpbmluZyB5
b3VyIGBfaW5pdGAsCi0tIGBfdXBkYXRlYCwgYW5kIGBfZHJhd2AgZnVuY3Rpb25zLgotLQotLSBw
cmVzcyBgdXBgIGFuZCBgZG93bmAgdG8gbW92ZSB1cCBhbmQgZG93biBvbgotLSB0aGUgc3RhY2ss
IHByZXNzIGB4YCBvciBgc3BhY2VgIHRvIHRvZ2dsZSBmb250Ci0tIHNpemUuIGNsaWNrIG9uIHRh
YmxlcyBpbiB0aGUgdmFyaWFibGUgdmlldyB0bwotLSBleHBhbmQgdGhlbS4KLS0KLS0gIyMgaG93
IGl0IHdvcmtzCi0tCi0tIGluIG9yZGVyIHRvIGNhdGNoIGVycm9ycyBhbmQgaW5zcGVjdCBydW50
aW1lCi0tIHN0YXRlLCB0aGlzIHNjcmlwdCByZXBsYWNlcyBgX2luaXRgLCBgX3VwZGF0ZWAKLS0g
YW5kIGBfZHJhd2AgZnVuY3Rpb25zIHdpdGggb25lcyB0aGF0IGNhbGwgdGhlCi0tIG9yaWdpbmFs
IG9uZXMgaW5zaWRlIGEgY29yb3V0aW5lLgotLQotLSB3aGVuIHRoZXJlJ3MgYW4gZXJyb3IsIGl0
IHVzZXMgbHVhJ3MgZGVidWcKLS0gbGlicmFyeSB0byBpbnNwZWN0IHRoZSBjb3JvdXRpbmUuIGEg
Y29weQotLSBvZiB0aGUgZXJyb3IgaXMgYWxzbyBwcmludGVkIHRvIHRoZSBjb25zb2xlCi0tIHdp
dGggcHJpbnRoIGlmIHlvdSdyZSBydW5uaW5nIHBpY290cm9uIGZyb20KLS0gdGhlIGNvbW1hbmQg
bGluZS4KLS0KLS0gdGhlIGZvbGxvd2luZyBkZWJ1ZyBhcGlzIGFyZSB1c2VkOgotLQotLSAtIGBk
ZWJ1Zy5nZXRpbmZvYAotLSAtIGBkZWJ1Zy5nZXRsb2NhbGAKLS0gLSBgZGVidWcuZ2V0dXB2YWx1
ZWAKLS0gLSBgZGVidWcudHJhY2ViYWNrYAotLQotLSAjIyB2ZXJzaW9uIGhpc3RvcnkgCi0tCi0t
IHZlcnNpb24gMC4wLjYKLS0gLSBvbiBlcnJvcjoKLS0gICAtIHNob3cgY3Vyc29yCi0tICAgLSBt
YWtlIHdpbmRvdyByZXNpemFibGUKLS0gLSBhdXRvbWF0aWNhbGx5IGFkanVzdCBsYXlvdXQgdG8g
d2luZG93IHNpemUKLS0gLSBzdXBwb3J0IHlpZWxkaW5nIChzaW5jZSBmZXRjaCBzb21ldGltZXMg
eWllbGRzKQotLQotLSB2ZXJzaW9uIDAuMC41Ci0tCi0tIC0gZnV0dXJlIHByb29maW5nOiBncmFj
ZWZ1bGx5IGhhbmRsZSB3aGVuCi0tICAgdmFyaW91cyBwYXJ0cyBvZiB0aGUgYGRlYnVnYCBtb2R1
bGUgYXJlbid0Ci0tICAgYXZhaWxhYmxlCi0tCi0tIHZlcnNpb24gMC4wLjQKLS0KLS0gLSBhbHNv
IGNhdGNoIGVycm9ycyBpbiBgX2luaXRgCi0tCi0tIHZlcnNpb24gMC4wLjMKLS0KLS0gLSBhdXRv
bWF0aWNhbGx5IGNob29zZSB0aGUgcmlnaHQgc3RhY2sgZnJhbWUKLS0gICBiYXNlZCBvbiB0aGUg
ZXJyb3IgbWVzc2FnZQotLSAtIG1vcmUgdGhvcm91Z2hseSBwcm90ZWN0IGZyb20gZXJyb3JzIGlu
IGVycm9yCi0tICAgZXhwbG9yZXIgaXRzZWxmCi0tCi0tIHZlcnNpb24gMC4wLjIKLS0KLS0gLSBk
b24ndCByZWdlbmVyYXRlIHN0YWNrIGluZm8gZXZlcnkgZHJhdwotLSAtIHNjcm9sbCBzdGFjayBh
bmQgdmFyaWFibGVzIGxpc3Qgd2l0aCBtb3VzZXdoZWVsCi0tIC0gY2xpY2sgb24gc3RhY2sgdG8g
c3dpdGNoIHN0YWNrIGZyYW1lcwotLSAtIGNsaWNrIG9uIHRhYmxlcyBpbiB2YXJpYWJsZXMgdmll
dyB0byBleHBhbmQgdGhlbQotLSAtIGVzY2FwZSBzdHJpbmdzIHdoZW4gcHJpbnRpbmcgdGhlbQot
LQotLSB2ZXJzaW9uIDAuMC4xCi0tCi0tIC0gYWRqdXN0IGNvbG9ycwotLSAtIGNvZGUgY2xlYW51
cAotLSAtIHVzZSBgYnRucGAgaW5zdGVhZCBvZiBga2V5cGAKLS0gLSBzbGlnaHRseSBtb3JlIHRo
b3JvdWdoIGByZXNldGAKLS0gLSBkb24ndCBzaG93IHRlbXBvcmFyaWVzCi0tCi0tIHZlcnNpb24g
MC4wLjAgKHByZXJlbGVhc2UpCi0tCi0tIC0gaW5pdGlhbCBkaXNjb3JkIGJldGEKCi0tICMjIGxp
Y2Vuc2UKLS0KLS0gQ29weXJpZ2h0IDIwMjQgS2lyYSBCb29tCi0tIAotLSBQZXJtaXNzaW9uIGlz
IGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcg
YSBjb3B5Ci0tIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBm
aWxlcyAodGhlIOKAnFNvZnR3YXJl4oCdKSwgdG8KLS0gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0
aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUKLS0gcmln
aHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3Vi
bGljZW5zZSwgYW5kL29yCi0tIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBl
cm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzCi0tIGZ1cm5pc2hlZCB0byBkbyBz
bywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6Ci0tCi0tIFRoZSBhYm92ZSBj
b3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1
ZGVkIGluCi0tIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3
YXJlLgotLSAKLS0gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIOKAnEFTIElT4oCdLCBXSVRIT1VU
IFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTCi0tIE9SIElNUExJRUQsIElOQ0xVRElORyBC
VVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAotLSBG
SVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBO
TyBFVkVOVCBTSEFMTAotLSBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFC
TEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUgotLSBMSUFCSUxJVFksIFdIRVRIRVIg
SU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORwotLSBG
Uk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNF
IE9SIE9USEVSCi0tIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4KCi0tLS0gdXRpbCAtLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpsb2NhbCBmdW5jdGlvbiBmaWxlbmFt
ZV9vZiAocGF0aCkKICByZXR1cm4gcGF0aDptYXRjaCAoJ1teL10qJCcpCmVuZAoKbG9jYWwgZnVu
Y3Rpb24gc2FmZV90b3N0cmluZyAodmFsdWUpCiAgaWYgdHlwZSAodmFsdWUpID09ICdzdHJpbmcn
IHRoZW4KICAgIHJldHVybiBzdHJpbmcuZm9ybWF0ICgnJXEnLCB2YWx1ZSkKICBlbHNlCiAgICBs
b2NhbCBzdWNjZXNzLCB2YWx1ZV9zdHJpbmcgPSBwY2FsbCAodG9zdHJpbmcsIHZhbHVlKQogICAg
cmV0dXJuIHN1Y2Nlc3MgYW5kIHZhbHVlX3N0cmluZwogICAgICAgICAgICAgICAgICAgb3IgKCdl
cnJvciBkdXJpbmcgdG9zdHJpbmc6ICcgLi4gdG9zdHJpbmcgKHZhbHVlX3N0cmluZykpCiAgZW5k
CmVuZAoKbG9jYWwgZnVuY3Rpb24gZ2V0X2xpbmVzICh0ZXh0KQogIGxvY2FsIGxpbmVzID0ge30K
ICBmb3IgbGluZSBpbiB0ZXh0OmdtYXRjaCAoIiguLSlccj9cbiIpIGRvCiAgICB0YWJsZS5pbnNl
cnQgKGxpbmVzLCBsaW5lKQogIGVuZAogIGxvY2FsIGxhc3RfbGluZSA9IHRleHQ6bWF0Y2ggKCco
W15cbl0qKSQnKQogIGlmIGxhc3RfbGluZSBhbmQgbGFzdF9saW5lIH49ICcnIHRoZW4KICAgIHRh
YmxlLmluc2VydCAobGluZXMsIGxhc3RfbGluZSkKICBlbmQKICByZXR1cm4gbGluZXMKZW5kCgps
b2NhbCBmdW5jdGlvbiBjb21wYXJlX2tleXMgKGEsIGIpCiAgbG9jYWwgdGEgPSB0eXBlIChhLmtl
eSkKICBsb2NhbCB0YiA9IHR5cGUgKGIua2V5KQogIGlmIHRhIH49IHRiIHRoZW4KICAgIHJldHVy
biB0YSA8IHRiCiAgZW5kCiAgaWYgdGEgPT0gJ251bWJlcicgb3IgdGEgPT0gJ3N0cmluZycgdGhl
bgogICAgcmV0dXJuIGEua2V5IDwgYi5rZXkKICBlbHNlCiAgICByZXR1cm4gc2FmZV90b3N0cmlu
ZyAoYS5rZXkpIDwgc2FmZV90b3N0cmluZyAoYi5rZXkpCiAgZW5kCmVuZAoKbG9jYWwgZnVuY3Rp
b24gc29ydCAodCwgZikKICAtLSBpbnNlcnRpb24gc29ydAogIGYgPSBmIG9yIGZ1bmN0aW9uIChh
LCBiKSByZXR1cm4gYSA8IGIgZW5kCiAgZm9yIGkgPSAxLCAjdC0xIGRvCiAgICBsb2NhbCB2YWwg
PSB0W2krMV0KICAgIGxvY2FsIGogPSBpCiAgICB3aGlsZSBqID49IDEgYW5kIG5vdCBmKHRbal0s
IHZhbCkgZG8KICAgICAgdFtqKzFdID0gdFtqXQogICAgICBqID0gaiAtIDEKICAgIGVuZAogICAg
dFtqKzFdID0gdmFsCiAgZW5kCmVuZAoKbG9jYWwgZnVuY3Rpb24gYXBwcm9hY2ggKGZyb20sIHRv
KQogIHJldHVybiBmcm9tICsgKHRvIC0gZnJvbSkgKiAwLjI1CmVuZAoKbG9jYWwgZnVuY3Rpb24g
cm91bmQgKHZhbHVlKQogIHJldHVybiBtYXRoLmZsb29yICh2YWx1ZSArIDAuNSkKZW5kCgpsb2Nh
bCBmdW5jdGlvbiBwYXJzZV9tZXNzYWdlX2Zvcl9sb2NhdGlvbiAobXNnKQogIGxvY2FsIHBhdGgs
IGxpbmUsIGVyciA9IG1zZzptYXRjaCAoJ14oW146XSspOiglZCspOiguKikkJykKICByZXR1cm4g
cGF0aCwgdG9udW1iZXIgKGxpbmUpLCBlcnIKZW5kCgotLS0tIHN0YXRlIC0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKbG9jYWwgX0cgPSBfRwpsb2NhbCBlcnJvcl9tZXNz
YWdlCmxvY2FsIGVycm9yX3RocmVhZApsb2NhbCBlcnJvcl90cmFjZWJhY2sKbG9jYWwgaW5pdF9k
b25lID0gZmFsc2UKbG9jYWwgdXNlX3NtYWxsX2ZvbnQgPSBmYWxzZQpsb2NhbCBtb3VzZV93YXNf
Y2xpY2tlZCA9IGZhbHNlCgotLSBzdGFjayB2aWV3CmxvY2FsIHN0YWNrX2ZyYW1lcyA9IHt9Cmxv
Y2FsIGN1cnJlbnRfc3RhY2tfaW5kZXggPSAxCmxvY2FsIGhvdmVyZWRfc3RhY2tfaW5kZXggPSBm
YWxzZQpsb2NhbCBtb3VzZV9vdmVyX3N0YWNrID0gZmFsc2UKbG9jYWwgc3RhY2tfbWF4X3Njcm9s
bCA9IDAKbG9jYWwgc3RhY2tfc2Nyb2xsID0gMApsb2NhbCBzdGFja19zY3JvbGxfc21vb3RoID0g
MAoKLS0gdmFyaWFibGVzIHZpZXcKbG9jYWwgdmFyaWFibGVzID0ge30KbG9jYWwgaG92ZXJlZF92
YXJpYWJsZSA9IGZhbHNlCmxvY2FsIHZhcmlhYmxlc19tYXhfc2Nyb2xsID0gMApsb2NhbCB2YXJp
YWJsZXNfc2Nyb2xsID0gMApsb2NhbCB2YXJpYWJsZXNfc2Nyb2xsX3Ntb290aCA9IDAKbG9jYWwg
bW91c2Vfb3Zlcl92YXJpYWJsZXMgPSBmYWxzZQoKLS0gc291cmNlIHZpZXcKbG9jYWwgc291cmNl
X2xpbmVzID0ge30KCgotLS0tIG1haW4gZXZlbnRzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLQoKbG9jYWwgZnVuY3Rpb24gcmVidWlsZCAoKQogIC0tIHJlYnVpbGQgc3RhY2sgZnJh
bWUgaW5mbwogIHN0YWNrX2ZyYW1lcyA9IHt9CiAgdmFyaWFibGVzID0ge30KICBzb3VyY2VfbGlu
ZXMgPSB7fQogIHZhcmlhYmxlc19zY3JvbGwgPSAwCiAgdmFyaWFibGVzX3Njcm9sbF9zbW9vdGgg
PSAwCgogIGZvciBpID0gMCwgMjAgZG8KICAgIGxvY2FsIGluZm8gPSBkZWJ1Zy5nZXRpbmZvIChl
cnJvcl90aHJlYWQsIGkpCiAgICBpZiBub3QgaW5mbyB0aGVuCiAgICAgIGJyZWFrCiAgICBlbmQK
CiAgICBpZiBpbmZvLnNob3J0X3NyYyB0aGVuCiAgICAgIHRhYmxlLmluc2VydCAoc3RhY2tfZnJh
bWVzLCB7CiAgICAgICAgZmlsZW5hbWUgPSBmaWxlbmFtZV9vZiAoaW5mby5zaG9ydF9zcmMpLAog
ICAgICAgIHBhdGggPSBpbmZvLnNob3J0X3NyYywKICAgICAgICBsaW5lID0gaW5mby5jdXJyZW50
bGluZSwKICAgICAgICBkZXB0aCA9IGksCiAgICAgICAgZm5fbmFtZSA9IChpbmZvLm5hbWUgb3Ig
KGZpbGVuYW1lX29mIChpbmZvLnNob3J0X3NyYykgLi4gJzonIC4uIHRvc3RyaW5nIChpbmZvLmxp
bmVkZWZpbmVkKSkpLAogICAgICAgIHNvdXJjZSA9IGluZm8uc291cmNlLAogICAgICB9KQogICAg
ZW5kCiAgZW5kCgogIGxvY2FsIGZyYW1lID0gc3RhY2tfZnJhbWVzIFtjdXJyZW50X3N0YWNrX2lu
ZGV4XQoKICBpZiBub3QgZnJhbWUgdGhlbgogICAgcmV0dXJuCiAgZW5kCgogIC0tIHJlYnVpbGQg
dmFyaWFibGVzCiAgZG8KICAgIGlmIGRlYnVnLmdldGxvY2FsIHRoZW4KICAgICAgbG9jYWwgbG9j
YWxfaW5kZXggPSAxCiAgICAgIHJlcGVhdAogICAgICAgIGxvY2FsIG5hbWUsIHZhbHVlID0gZGVi
dWcuZ2V0bG9jYWwgKGVycm9yX3RocmVhZCwgZnJhbWUuZGVwdGgsIGxvY2FsX2luZGV4KQogICAg
ICAgIGlmIG5hbWUgdGhlbgogICAgICAgICAgaWYgbmFtZSB_PSAnKHRlbXBvcmFyeSknIHRoZW4K
ICAgICAgICAgICAgdGFibGUuaW5zZXJ0ICh2YXJpYWJsZXMsIHsKICAgICAgICAgICAgICBrZXkg
PSBuYW1lLAogICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUsCiAgICAgICAgICAgIH0pCiAgICAg
ICAgICBlbmQKICAgICAgICAgIGxvY2FsX2luZGV4ID0gbG9jYWxfaW5kZXggKyAxCiAgICAgICAg
ZW5kCiAgICAgIHVudGlsIG5vdCBuYW1lCiAgICBlbHNlCiAgICAgIHRhYmxlLmluc2VydCAodmFy
aWFibGVzLCB7CiAgICAgICAgZXJyb3IgPSAnbm8gZGVidWcuZ2V0bG9jYWwsIGNhblwndCBzaG93
IGxvY2FscycKICAgICAgfSkKICAgIGVuZAoKICAgIGlmIGRlYnVnLmdldHVwdmFsdWUgdGhlbgog
ICAgICBsb2NhbCBpbmZvID0gZGVidWcuZ2V0aW5mbyAoZXJyb3JfdGhyZWFkLCBmcmFtZS5kZXB0
aCkKICAgICAgaWYgaW5mbyBhbmQgaW5mby5mdW5jIHRoZW4KICAgICAgICBsb2NhbCB1cHZhbHVl
X2luZGV4ID0gMQogICAgICAgIHJlcGVhdAogICAgICAgICAgbG9jYWwgbmFtZSwgdmFsdWUgPSBk
ZWJ1Zy5nZXR1cHZhbHVlIChpbmZvLmZ1bmMsIHVwdmFsdWVfaW5kZXgpCiAgICAgICAgICBpZiBu
YW1lIHRoZW4KICAgICAgICAgICAgdGFibGUuaW5zZXJ0ICh2YXJpYWJsZXMsIHsKICAgICAgICAg
ICAgICBrZXkgPSBuYW1lLAogICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUsCiAgICAgICAgICAg
IH0pCiAgICAgICAgICAgIHVwdmFsdWVfaW5kZXggPSB1cHZhbHVlX2luZGV4ICsgMQogICAgICAg
ICAgZW5kCiAgICAgICAgdW50aWwgbm90IG5hbWUKICAgICAgZW5kCiAgICBlbHNlCiAgICAgIHRh
YmxlLmluc2VydCAodmFyaWFibGVzLCB7CiAgICAgICAgZXJyb3IgPSAnbm8gZGVidWcuZ2V0dXB2
YWx1ZSwgY2FuXCd0IHNob3cgdXB2YWx1ZXMnCiAgICAgIH0pCiAgICBlbmQKICBlbmQKCiAgLS0g
cmVidWlsZCBzb3VyY2UgbGluZXMKICBsb2NhbCBzb3VyY2UgPSBmcmFtZS5zb3VyY2UKICBpZiBz
b3VyY2UgdGhlbgogICAgaWYgc3RyaW5nLnN1YiAoc291cmNlLCAxLCAxKSA9PSAnQCcgdGhlbgog
ICAgICBsb2NhbCBmaWxlbmFtZSA9IHN0cmluZy5zdWIgKHNvdXJjZSwgMiwgI3NvdXJjZSkKICAg
ICAgc291cmNlID0gZmV0Y2ggKGZpbGVuYW1lKQogICAgZW5kCiAgICBpZiBzb3VyY2UgYW5kIHR5
cGUgKHNvdXJjZSkgPT0gJ3N0cmluZycgdGhlbgogICAgICBzb3VyY2VfbGluZXMgPSBnZXRfbGlu
ZXMgKHNvdXJjZSkKICAgIGVuZAogIGVuZAplbmQKCmxvY2FsIGZ1bmN0aW9uIGVycm9yX3VwZGF0
ZSAoKQogIGxvY2FsIGxhc3RfaW5kZXggPSBjdXJyZW50X3N0YWNrX2luZGV4CiAgaWYgYnRucCAo
NSkgb3Iga2V5cCAnc3BhY2UnIHRoZW4KICAgIHVzZV9zbWFsbF9mb250ID0gbm90IHVzZV9zbWFs
bF9mb250CiAgZW5kCiAgaWYgYnRucCAoMikgdGhlbgogICAgY3VycmVudF9zdGFja19pbmRleCA9
IG1hdGgubWF4ICgxLCBjdXJyZW50X3N0YWNrX2luZGV4IC0gMSkKICAgIHN0YWNrX3Njcm9sbCA9
IG1hdGgubWluIChjdXJyZW50X3N0YWNrX2luZGV4LTEsIHN0YWNrX3Njcm9sbCkKICBlbmQKICBp
ZiBidG5wICgzKSB0aGVuCiAgICBjdXJyZW50X3N0YWNrX2luZGV4ID0gbWF0aC5taW4gKCNzdGFj
a19mcmFtZXMsIGN1cnJlbnRfc3RhY2tfaW5kZXggKyAxKQogICAgc3RhY2tfc2Nyb2xsID0gbWF0
aC5tYXggKChjdXJyZW50X3N0YWNrX2luZGV4KSAtICgjc3RhY2tfZnJhbWVzIC0gc3RhY2tfbWF4
X3Njcm9sbCksIHN0YWNrX3Njcm9sbCkKICBlbmQKCiAgbG9jYWwgXywgXywgY2xpY2ssIF8sIHdo
ZWVsID0gbW91c2UgKCkKICBpZiBtb3VzZV9vdmVyX3N0YWNrIHRoZW4KICAgIHN0YWNrX3Njcm9s
bCA9IG1hdGgubWF4ICgwLCBtYXRoLm1pbiAoc3RhY2tfc2Nyb2xsIC0gd2hlZWwgKiAyLCBzdGFj
a19tYXhfc2Nyb2xsKSkKICBlbmQKICBzdGFja19zY3JvbGxfc21vb3RoID0gYXBwcm9hY2ggKHN0
YWNrX3Njcm9sbF9zbW9vdGgsIHN0YWNrX3Njcm9sbCkKICBpZiBtb3VzZV9vdmVyX3ZhcmlhYmxl
cyB0aGVuCiAgICB2YXJpYWJsZXNfc2Nyb2xsID0gbWF0aC5tYXggKDAsIG1hdGgubWluICh2YXJp
YWJsZXNfc2Nyb2xsIC0gd2hlZWwgKiAyLCB2YXJpYWJsZXNfbWF4X3Njcm9sbCkpCiAgZW5kCiAg
dmFyaWFibGVzX3Njcm9sbF9zbW9vdGggPSBhcHByb2FjaCAodmFyaWFibGVzX3Njcm9sbF9zbW9v
dGgsIHZhcmlhYmxlc19zY3JvbGwpCgogIGNsaWNrID0gY2xpY2sgfj0gMAogIGlmIGNsaWNrIGFu
ZCBub3QgbW91c2Vfd2FzX2NsaWNrZWQgdGhlbgogICAgaWYgaG92ZXJlZF9zdGFja19pbmRleCB0
aGVuCiAgICAgIGN1cnJlbnRfc3RhY2tfaW5kZXggPSBob3ZlcmVkX3N0YWNrX2luZGV4CiAgICBl
bmQKICAgIGlmIGhvdmVyZWRfdmFyaWFibGUgYW5kIHR5cGUgKGhvdmVyZWRfdmFyaWFibGUudmFs
dWUpID09ICd0YWJsZScgdGhlbgogICAgICBpZiBob3ZlcmVkX3ZhcmlhYmxlLmNvbnRlbnRzIHRo
ZW4KICAgICAgICBob3ZlcmVkX3ZhcmlhYmxlLmNvbnRlbnRzID0gbmlsCiAgICAgIGVsc2UKICAg
ICAgICBsb2NhbCBjb250ZW50cyA9IHt9CiAgICAgICAgaG92ZXJlZF92YXJpYWJsZS5jb250ZW50
cyA9IGNvbnRlbnRzCiAgICAgICAgZm9yIGssdiBpbiBwYWlycyAoaG92ZXJlZF92YXJpYWJsZS52
YWx1ZSkgZG8KICAgICAgICAgIHRhYmxlLmluc2VydCAoY29udGVudHMsIHsKICAgICAgICAgICAg
a2V5ID0gaywKICAgICAgICAgICAgdmFsdWUgPSB2LAogICAgICAgICAgfSkKICAgICAgICBlbmQK
ICAgICAgICBzb3J0IChjb250ZW50cywgY29tcGFyZV9rZXlzKQogICAgICBlbmQKICAgIGVuZAog
IGVuZAogIG1vdXNlX3dhc19jbGlja2VkID0gY2xpY2sKCiAgaWYgY3VycmVudF9zdGFja19pbmRl
eCB_PSBsYXN0X2luZGV4IHRoZW4KICAgIHJlYnVpbGQoKQogIGVuZAplbmQKCmxvY2FsIGZ1bmN0
aW9uIGVycm9yX2RyYXcgKCkKICBsb2NhbCBXID0gZ2V0X2Rpc3BsYXkoKTp3aWR0aCgpCiAgbG9j
YWwgSCA9IGdldF9kaXNwbGF5KCk6aGVpZ2h0KCkKCiAgbG9jYWwgcHJlZml4ID0gdXNlX3NtYWxs
X2ZvbnQgYW5kICdcMDE0JyBvciAnJwogIGxvY2FsIGZvbnRfaGVpZ2h0ID0gKHVzZV9zbWFsbF9m
b250IGFuZCA2IG9yIDExKQogIGxvY2FsIG14LCBteSA9IG1vdXNlKCkKICBsb2NhbCBvdmVyX3Nl
Y3Rpb24gPSBmYWxzZQogIGxvY2FsIHgwLCB5MCwgeCwgeQoKICBsb2NhbCBmdW5jdGlvbiBnb190
byAobmV3X3gsIG5ld195KQogICAgeDAsIHkwID0gbmV3X3gsIG5ld195CiAgICB4LCB5ID0geDAs
IHkwCiAgZW5kCgogIGxvY2FsIGZ1bmN0aW9uIHNlY3Rpb24gKHN4LCBzeSwgc3csIHNoKQogICAg
b3Zlcl9zZWN0aW9uID0KICAgICAgbXggPj0gc3ggYW5kIG14IDwgc3ggKyBzdyBhbmQKICAgICAg
bXkgPj0gc3kgYW5kIG15IDwgc3kgKyBzaAogICAgY2xpcCAoc3gsIHN5LCBzdywgc2gpCiAgICBn
b190byhzeCsyLCBzeSsyKQogIGVuZAoKICBsb2NhbCBmdW5jdGlvbiBwcmludF9ob3Jpem9udGFs
ICh0ZXh0LCBjb2xvcikKICAgIGxvY2FsIG5ld194LCBfbmV3X3kgPSBwcmludCAocHJlZml4IC4u
IHRleHQsIHgsIHksIGNvbG9yKQogICAgeCA9IG5ld194CiAgZW5kCgogIGxvY2FsIGZ1bmN0aW9u
IHByaW50X2xpbmUgKHRleHQsIGNvbG9yKQogICAgbG9jYWwgX25ld194LCBuZXdfeSA9IHByaW50
IChwcmVmaXggLi4gdGV4dCwgeCwgeSwgY29sb3IpCiAgICB4ID0geDAKICAgIHkgPSBuZXdfeQog
IGVuZAoKICAtLSBkcmF3IHNldHVwCiAgY2xzICgwKQogIC0tIGxpZ2h0ZXIgZGFyayBncmF5IGZv
ciByZWFkYWJpbGl0eQogIHBhbCAoNSwgMHhmZjcwNzA3MCwgMikKICBjb2xvciAoNSkKCiAgLS0g
ZXJyb3IgbWVzc2FnZQogIHNlY3Rpb24gKDAsIDAsIFcsIEgvMikKICBtb3VzZV9vdmVyX3N0YWNr
ID0gb3Zlcl9zZWN0aW9uCgogIGxvY2FsIGxvY19wYXRoLCBsb2NfbGluZSwgZXJyID0gcGFyc2Vf
bWVzc2FnZV9mb3JfbG9jYXRpb24gKGVycm9yX21lc3NhZ2UpCiAgaWYgbG9jX3BhdGggdGhlbgog
ICAgcHJpbnRfbGluZSAoJ2Vycm9yIGF0ICcgLi4gbG9jX3BhdGggLi4gJzonIC4uIGxvY19saW5l
IC4uICc6JywgNikKICAgIHByaW50X2xpbmUgKCcgICcgLi4gZXJyLCA4KQogIGVsc2UKICAgIHBy
aW50X2xpbmUgKCdlcnJvcjonLCA2KQogICAgcHJpbnRfbGluZSAoJyAgJyAuLiBlcnJvcl9tZXNz
YWdlLCA4KQogIGVuZAoKICAtLSBzdGFjayBmcmFtZXMKICBwcmludF9saW5lICgnc3RhY2s6Jywg
NikKICBzZWN0aW9uICgwLCB5LCBXLCBILzIteSkKICBsb2NhbCBzdGFja190b3BfeSA9IHkKICB5
ID0geSAtIHJvdW5kIChzdGFja19zY3JvbGxfc21vb3RoICogZm9udF9oZWlnaHQpCiAgbG9jYWwg
bGFzdF9ob3ZlcmVkX3N0YWNrX2luZGV4ID0gaG92ZXJlZF9zdGFja19pbmRleAogIGhvdmVyZWRf
c3RhY2tfaW5kZXggPSBmYWxzZQogIGZvciBpLCBmcmFtZSBpbiBpcGFpcnMgKHN0YWNrX2ZyYW1l
cykgZG8KICAgIGNvbG9yIChsYXN0X2hvdmVyZWRfc3RhY2tfaW5kZXggPT0gaSBhbmQgNyBvcgog
ICAgICAgICAgIGN1cnJlbnRfc3RhY2tfaW5kZXggPT0gaSBhbmQgNiBvciA1KQoKICAgbG9jYWwg
eV9iZWZvcmUgPSB5CiAgICBwcmludF9saW5lIChzdHJpbmcuZm9ybWF0ICgnICAlczolZCBpbiBm
dW5jdGlvbiAlcycsCiAgICAgIGZyYW1lLmZpbGVuYW1lLCBmcmFtZS5saW5lLCBmcmFtZS5mbl9u
YW1lICkpCiAgICBpZiBvdmVyX3NlY3Rpb24gdGhlbgogICAgICBpZiBteSA_PSB5X2JlZm9yZSBh
bmQgbXkgPCB5IHRoZW4KICAgICAgICBob3ZlcmVkX3N0YWNrX2luZGV4ID0gaQogICAgICBlbmQK
ICAgIGVuZAogIGVuZAogIHN0YWNrX21heF9zY3JvbGwgPSAjc3RhY2tfZnJhbWVzIC0gKEgvMiAt
IHN0YWNrX3RvcF95KSAvIGZvbnRfaGVpZ2h0CgogIGxvY2FsIGZyYW1lID0gc3RhY2tfZnJhbWVz
IFtjdXJyZW50X3N0YWNrX2luZGV4XQogIGlmIG5vdCBmcmFtZSB0aGVuCiAgICByZXR1cm4KICBl
bmQKCiAgLS0gdmFyaWFibGVzCiAgc2VjdGlvbiAoMCwgSC8yLCBXLzIsIEgvMikKICBtb3VzZV9v
dmVyX3ZhcmlhYmxlcyA9IG92ZXJfc2VjdGlvbgogIHByaW50X2xpbmUgKCd2YXJpYWJsZXM6Jywg
NikKICBzZWN0aW9uICgwLCB5LCBXLzIsIEgteSkKICBsb2NhbCB2YXJpYWJsZXNfdG9wX3kgPSB5
CiAgeSA9IHkgLSByb3VuZCAodmFyaWFibGVzX3Njcm9sbF9zbW9vdGggKiBmb250X2hlaWdodCkK
ICBsb2NhbCBsYXN0X2hvdmVyZWRfdmFyaWFibGUgPSBob3ZlcmVkX3ZhcmlhYmxlCiAgaG92ZXJl
ZF92YXJpYWJsZSA9IGZhbHNlCiAgbG9jYWwgdmFyaWFibGVfY291bnQgPSAwCiAgbG9jYWwgZnVu
Y3Rpb24gZHJhd192YXJpYWJsZSAodmFyaWFibGUsIGluZGVudCkKICAgIHZhcmlhYmxlX2NvdW50
ID0gdmFyaWFibGVfY291bnQgKyAxCiAgICBsb2NhbCBob3ZlcmVkID0gdmFyaWFibGUgPT0gbGFz
dF9ob3ZlcmVkX3ZhcmlhYmxlCiAgICBsb2NhbCB5X2JlZm9yZSA9IHkKICAgIGlmIHZhcmlhYmxl
LmVycm9yIHRoZW4KICAgICAgcHJpbnRfbGluZSAoJyAgJyAuLiB2YXJpYWJsZS5lcnJvciwgOCkK
ICAgIGVsc2UKICAgICAgcHJpbnRfaG9yaXpvbnRhbCAoaW5kZW50IC4uIHZhcmlhYmxlLmtleSwg
aG92ZXJlZCBhbmQgNyBvciA2KQogICAgICBwcmludF9ob3Jpem9udGFsICgnOiAnLCB2YXJpYWJs
ZSA9PSBsYXN0X2hvdmVyZWRfdmFyaWFibGUgYW5kIDcgb3IgNSkKICAgICAgcHJpbnRfbGluZSAo
c2FmZV90b3N0cmluZyh2YXJpYWJsZS52YWx1ZSkpCiAgICBlbmQKCiAgICBpZiBvdmVyX3NlY3Rp
b24gYW5kIHR5cGUgKHZhcmlhYmxlLnZhbHVlKSA9PSAndGFibGUnIHRoZW4KICAgICAgaWYgbXgg
Pj0gMCBhbmQgbXggPCBXLzIgYW5kIG15ID49IHlfYmVmb3JlIGFuZCBteSA8IHkgdGhlbgogICAg
ICAgIGhvdmVyZWRfdmFyaWFibGUgPSB2YXJpYWJsZQogICAgICBlbmQKICAgIGVuZAoKICAgIGlm
IHZhcmlhYmxlLmNvbnRlbnRzIHRoZW4KICAgICAgZm9yIF8sIHYgaW4gaXBhaXJzICh2YXJpYWJs
ZS5jb250ZW50cykgZG8KICAgICAgICBkcmF3X3ZhcmlhYmxlICh2LCBpbmRlbnQgLi4gJyAgJykK
ICAgICAgZW5kCiAgICBlbmQKICBlbmQKICBmb3IgXywgdmFyaWFibGUgaW4gaXBhaXJzICh2YXJp
YWJsZXMpIGRvCiAgICBkcmF3X3ZhcmlhYmxlICh2YXJpYWJsZSwgJyAgJykKICBlbmQKICB2YXJp
YWJsZXNfbWF4X3Njcm9sbCA9IHZhcmlhYmxlX2NvdW50IC0gKEggLSB2YXJpYWJsZXNfdG9wX3kp
IC8gZm9udF9oZWlnaHQKCiAgLS0gc291cmNlCiAgc2VjdGlvbiAoVy8yLCBILzIsIFcvMiwgSC8y
KQogIHByaW50X2xpbmUgKCdzb3VyY2Ugb2YgJyAuLiBmcmFtZS5wYXRoIC4uICc6JywgNikKICBs
b2NhbCBjb250ZXh0ID0gdXNlX3NtYWxsX2ZvbnQgYW5kIDEwIG9yIDUKICBsb2NhbCBpX21pbiA9
IG1hdGgubWF4ICgxLCBmcmFtZS5saW5lIC0gY29udGV4dCkKICBsb2NhbCBpX21heCA9IG1hdGgu
bWluICgjc291cmNlX2xpbmVzLCBmcmFtZS5saW5lICsgY29udGV4dCkKICBmb3IgaSA9IGlfbWlu
LCBpX21heCBkbwogICAgY29sb3IgKGkgPT0gZnJhbWUubGluZSBhbmQgNiBvciA1KQogICAgcHJp
bnRfaG9yaXpvbnRhbCAoc3RyaW5nLmZvcm1hdCAoJyU0ZCAnLCBpKSkKICAgIHByaW50X2xpbmUg
KHNvdXJjZV9saW5lcyBbaV0pCiAgZW5kCgogIGNsaXAgKCkKZW5kCgotLS0tIHRha2luZyBvdmVy
IGR1cmluZyBlcnJvcnMgLS0tLS0tLS0tLS0tLS0tLS0tLQoKbG9jYWwgZnVuY3Rpb24gcmVzZXQg
KCkKICAtLSBiYXNlZCBvbiByZXNldCgpIGZyb20gL3N5c3RlbS9saWIvaGVhZC5sdWEKICAtLSBz
ZWUgdGhhdCBmbiBmb3IgaW5mbwogIHdpbmRvdyB7CiAgICBjdXJzb3IgPSAxLAogICAgcmVzaXph
YmxlID0gdHJ1ZSwKICB9CiAgbm90ZSAoKQogIC0tIHBpY290cm9uIHNlZ2ZhdWx0cyBpZiB3ZSBj
YWxsIGNsaXAoKSBkdXJpbmcgaW5pdAogIGlmIGluaXRfZG9uZSB0aGVuCiAgICBjbGlwICgpCiAg
ZW5kCiAgY2FtZXJhICgpCiAgcGFsICgpCiAgcGFsdCAoKQogIG1lbXNldCAoMHg1NTFmLCAwLCA5
KQogIHBva2UgKDB4NTUwOCwgMHgzZikKICBwb2tlICgweDU1MDksIDB4M2YpCiAgcG9rZSAoMHg1
NTBhLCAweDNmKQogIHBva2UgKDB4NTUwYiwgMHgwMCkKICBjb2xvciAoNikKICBmaWxscCAoKQog
IHBva2UgKDB4NWY1NiwgMHg0MCkKICBwb2tlICgweDVmNTcsIDB4NTYpCiAgcG9rZSAoMHg0MDAw
LCBnZXQgKGZldGNoIi9zeXN0ZW0vZm9udHMvbGlsLmZvbnQiKSkKICBwb2tlICgweDU2MDAsIGdl
dCAoZmV0Y2giL3N5c3RlbS9mb250cy9wOC5mb250IikpCiAgcG9rZSAoMHg1NjA2LCBwZWVrICgw
eDU2MDApICogNCkKICBwb2tlICgweDU2MDUsIDB4MikKICBwb2tlICgweDVmMjgsIDY0KQogIHBv
a2UgKDB4NWYyOSwgNjQpCmVuZAoKbG9jYWwgZnVuY3Rpb24gb25fZXJyb3IgKHRocmVhZCwgbWVz
c2FnZSkKICAtLSBkbyB0aGlzIGZpcnN0IGluIGNhc2Ugd2UgaGl0IGFub3RoZXIgZXJyb3IKICBl
cnJvcl90cmFjZWJhY2sgPSBkZWJ1Zy50cmFjZWJhY2sgKHRocmVhZCwgbWVzc2FnZSkKICBwcmlu
dGggKGVycm9yX3RyYWNlYmFjaykKCiAgZXJyb3JfdGhyZWFkID0gdGhyZWFkCiAgZXJyb3JfbWVz
c2FnZSA9IHRvc3RyaW5nIChtZXNzYWdlKQogIHJlc2V0ICgpCiAgcmVidWlsZCAoKQogIC0tIGp1
bXAgdG8gdGhlIHByb3BlciBzdGFjayBmcmFtZSBpZiB3ZSBjYW4KICBsb2NhbCBsb2NfcGF0aCwg
bG9jX2xpbmUgPSBwYXJzZV9tZXNzYWdlX2Zvcl9sb2NhdGlvbiAoZXJyb3JfbWVzc2FnZSkKICBm
b3IgaSwgZnJhbWUgaW4gaXBhaXJzIChzdGFja19mcmFtZXMpIGRvCiAgICBpZiBmcmFtZS5wYXRo
ID09IGxvY19wYXRoIGFuZCBmcmFtZS5saW5lID09IGxvY19saW5lIHRoZW4KICAgICAgY3VycmVu
dF9zdGFja19pbmRleCA9IGkKICAgICAgcmVidWlsZCAoKQogICAgICBicmVhawogICAgZW5kCiAg
ZW5kCmVuZAoKLS0tLSBpbnN0YWxsIG1haW4gZXZlbnRzIHRoYXQgY2F0Y2ggZXJyb3JzIC0tLS0t
LS0KCmxvY2FsIHVzZXJfaW5pdCA9IHJhd2dldCAoX0csICdfaW5pdCcpCmxvY2FsIHVzZXJfdXBk
YXRlID0gcmF3Z2V0IChfRywgJ191cGRhdGUnKQpsb2NhbCB1c2VyX2RyYXcgPSByYXdnZXQgKF9H
LCAnX2RyYXcnKQoKYXNzZXJ0ICh1c2VyX2RyYXcgYW5kIHVzZXJfdXBkYXRlLAogICdwbGVhc2Ug
aW5jbHVkZSBlcnJvcl9leHBsb3JlciBhZnRlciBkZWZpbmluZyBib3RoIF91cGRhdGUgYW5kIF9k
cmF3JykKCmlmIG5vdCByYXdnZXQgKF9HLCAnZGVidWcnKSBvciBub3QgZGVidWcudHJhY2ViYWNr
IG9yIG5vdCBkZWJ1Zy5nZXRpbmZvIHRoZW4KICBwcmludGggJ2Vycm9yIGV4cGxvcmVyOiBkZWJ1
ZyBtb2R1bGUgbm90IGF2YWlsYWJsZSwgZXJyb3IgZXhwbG9yZXIgd2lsbCBiZSBkaXNhYmxlZCcK
ICByZXR1cm4KZW5kCgpsb2NhbCBmdW5jdGlvbiBjYWxsX2Vycm9yX2V2ZW50IChmbiwgLi4uKQog
IC0tIGlmIHRoZXJlJ3MgYW4gZXJyb3IgaW4gb3VyIHVwZGF0ZSBvciBkcmF3LCB0aHJvdyB0aGUK
ICAtLSBvcmlnaW5hbCBlcnJvciBhcyB3ZWxsIGFzIHRoZSBuZXcgZXJyb3IKICBsb2NhbCBzdWNj
ZXNzLCBlcnIgPSBwY2FsbCAoZm4sIC4uLikKICBpZiBub3Qgc3VjY2VzcyB0aGVuCiAgICBlcnJv
ciAoZXJyb3JfdHJhY2ViYWNrIC4uICdcblxuZXJyb3IgZHVyaW5nIGVycm9yIGhhbmRsaW5nOiAn
IC4uIHRvc3RyaW5nIChlcnIpKQogIGVuZAplbmQKCmxvY2FsIGZ1bmN0aW9uIGNhbGxfcHJvdGVj
dGVkIChmbikKICAtLSBuZWVkIHRvIHVzZSBjb3Jlc3VtZSBldGMuIGFuZCBub3QgY29yb3V0aW5l
LnJlc3VtZSBldGMuCiAgLS0gZm9yIHBpY290cm9uIGNvbXBhdGliaWxpdHkKICBsb2NhbCB0aHJl
YWQgPSBjb2NyZWF0ZSAoZm4pCiAgbG9jYWwgc3VjY2VzcywgbWVzc2FnZSA9IGNvcmVzdW1lKHRo
cmVhZCkKICB3aGlsZSBjb3N0YXR1cyAodGhyZWFkKSB_PSAnZGVhZCcgZG8KICAgIHlpZWxkICgp
CiAgICBzdWNjZXNzLCBtZXNzYWdlID0gY29yZXN1bWUgKHRocmVhZCkKICBlbmQKICBpZiBub3Qg
c3VjY2VzcyB0aGVuCiAgICBjYWxsX2Vycm9yX2V2ZW50IChvbl9lcnJvciwgdGhyZWFkLCBtZXNz
YWdlKQogIGVuZAplbmQKCmlmIHVzZXJfaW5pdCB0aGVuCiAgZnVuY3Rpb24gX2luaXQgKCkKICAg
IGNhbGxfcHJvdGVjdGVkICh1c2VyX2luaXQpCiAgICBpbml0X2RvbmUgPSB0cnVlCiAgZW5kCmVs
c2UKICBpbml0X2RvbmUgPSB0cnVlCmVuZAoKZnVuY3Rpb24gX3VwZGF0ZSAoKQogIGlmIGVycm9y
X3RocmVhZCB0aGVuCiAgICBjYWxsX2Vycm9yX2V2ZW50IChlcnJvcl91cGRhdGUpCiAgZWxzZQog
ICAgY2FsbF9wcm90ZWN0ZWQgKHVzZXJfdXBkYXRlKQogIGVuZAplbmQKCmZ1bmN0aW9uIF9kcmF3
ICgpCiAgaWYgZXJyb3JfdGhyZWFkIHRoZW4KICAgIGNhbGxfZXJyb3JfZXZlbnQgKGVycm9yX2Ry
YXcpCiAgZWxzZQogICAgY2FsbF9wcm90ZWN0ZWQgKHVzZXJfZHJhdykKICBlbmQKZW5k
:: free_part.lua
--[[pod_format="raw",created="2025-05-19 18:14:49",modified="2025-05-20 17:53:00",revision=433]]
function new_free_part(position,part)
	return{
		_position=position,
		_speed=new_point(0,0),
		part=part,
		init=function(self)
			self.part._position=self._position
			self.part:init()
			self._speed=	self._speed:randomize(new_point(-0.1,1))
		end,
		update=function(self)  			
			self._position+=self._speed --apply velocity
			self.part._position=self._position
			if(is_point_on_screen(self._position)==false) then
				self:kill()
			end	
		
		end,
		draw=function(self)	 	 	
	    	self.part:draw()
		end,
		kill=function(self)
			del(game.free_parts,self) --fix
		end
	}
end

:: game.lua
--[[pod_format="raw",created="2025-05-19 15:03:03",modified="2025-06-05 16:14:12",revision=2191]]
function new_game()
	return{
		_actions = {},
		_ship,
		free_parts={},
		asteroids={},
		pirates={},
		bullets={},
		particle_systems={},
		_director=nil,
		_light_road,
		bank=0,
		init=function(self)
			self._ship=new_ship(new_point(480/2,270/2+30))
			self._light_road= new_lightroad()
						
			self._director:init()	
			
			self.sprites1=fetch("./gfx/0.gfx")	
			self._ship:init()	
			music(0,0,0x1|0x2|0x4|0x8)
		end,
		update=function(self)
			camera_helper:update_camera()
			self._light_road:update()
			self._ship:update()
			
			foreach(self.particle_systems, function(particle_system)
    			particle_system:update()
 	 		end)	
		
			foreach(self.free_parts, function(part)
	    		part:update()
	 	 	end)
	 	 	foreach(self.asteroids, function(asteroid)
	    		asteroid:update()
	 	 	end)
	 	 	foreach(self.pirates, function(pirate)
	    		pirate:update()
	 	 	end)
	 	 	foreach(self.bullets, function(bullet)
	    		bullet:update()
	 	 	end)
			self._director:update()
		 	foreach(self._actions, function(action)
			   if costatus(action) then
			      coresume(action)
			   else
			      del(self.actions,action)
				end
			end)
	 		
		end,
		draw=function(self)
			cls()
			self._light_road:draw()
			foreach(self.particle_systems, function(particle_system)
   	 		particle_system:draw()
	 	 	end)
			foreach(self.free_parts, function(part)
	    		part:draw()
	 	 	end)
	 	 	foreach(self.asteroids, function(asteroid)
	    		asteroid:draw()
	 	 	end)
	 	 	foreach(self.pirates, function(pirate)
	    		pirate:draw()
	 	 	end)
	 	 	foreach(self.bullets, function(bullet)
	    		bullet:draw()
	 	 	end)
			self._ship:draw()
			self._director:draw()
			print_right("$"..format_money(self._ship.worth+self.bank).."/".. format_money(self._director.goal) ,12,10)
		
		end,
		addAction=function(self,action)
			add(self._actions,cocreate(action)) 
		end,
		death=function(self)
			self:addAction(function()
				for i=1,60*2 do
					yield()
				end
				gameover()
			end)
		end,
		finish_level=function(self)
			if(self._ship.worth+self.bank>=self._director.goal) then
				self.bank+=self._ship.worth-self._director.goal
				next_screen()
			else
				gameover()
			end
			
		end		
				
	}
end
:: help.lua
--[[pod_format="raw",created="2025-05-24 18:42:03",modified="2025-06-05 16:14:12",revision=544]]
function new_help()
	return{
	sprites,
	init=function(self)
		camera_helper:set_camera(new_point(0,0),true)
		self.sprites=	fetch("./gfx/0.gfx")	
	end,
	update=function(self)
		camera_helper:update_camera()
		if(btnp()>0) then
		  next_screen()
		end

	end,
	draw=function(self)
		cls()
		print_centered("Use \131 \139 \145 \148 to control"
		,10,7)
		spr(self.sprites[1].bmp,310,5)

		spr(self.sprites[2].bmp,10,25)
		print("Move Faster",30,30)
		
		spr(self.sprites[3].bmp,10,45)
		print("Shoot stuff down",30,50)	
	
		spr(self.sprites[4].bmp,10,65)
		print("Immune to small damage",30,70)
		
		spr(self.sprites[5].bmp,10,85)
		print("Shield your ship",30,90)
		
		spr(self.sprites[12].bmp,10,105)
		print("Easy connections",30,110)

		spr(self.sprites[65].bmp,240,25)
		print("Only hurts open connectots",260,30)
		
		spr(self.sprites[64].bmp,240,45)
		print("Can be shot down",260,50)
		
		spr(self.sprites[9].bmp,240,65)
		print("Common cargo !fragile!",260,70)
		
		spr(self.sprites[10].bmp,240,85)
		print("Rare cargo !heavy!",260,90)
		
		spr(self.sprites[11].bmp,240,105)
		print("Volatile cargo !danger!",260,110)
				
	end}
	
end
:: helpers.lua
b64$LS1bW3BvZF9mb3JtYXQ9InJhdyIsY3JlYXRlZD0iMjAyNS0wNS0xOSAxNToxMzo1MyIsbW9k
aWZpZWQ9IjIwMjUtMDYtMDUgMTY6MTQ6MTIiLHJldmlzaW9uPTEzNTFdXQpmdW5jdGlvbiBzbShh
KQoJcmV0dXJuIHNldG1ldGF0YWJsZShhLGEpCmVuZApmdW5jdGlvbiByYW5kb20obikKCWlmKG4_
MCkgdGhlbiAKCQlyZXR1cm4gcm5kKCkqbgoJZWxzZQoJCXJldHVybiAtbitybmQoKSpuKjIgCgll
bmQKZW5kCmZ1bmN0aW9uIHBpY2tfcmFuZG9tKGFycikKCWlmIGFycj09bmlsbCB0aGVuIHJldHVy
biBuaWwgZW5kCglpZiAjYXJyID09IDAgdGhlbiByZXR1cm4gbmlsIGVuZAoJcmV0dXJuIGFycltm
bHIocm5kKCNhcnIpKSArIDFdCmVuZApmdW5jdGlvbiBibG9ja19jb2xsaXNpb24ocG9pbnRBLCBz
aXplQSwgcG9pbnRCLCBzaXplQikKCWxvY2FsIGF4MSwgYXkxID0gcG9pbnRBLngsIHBvaW50QS55
Cglsb2NhbCBheDIsIGF5MiA9IGF4MSArIHNpemVBLngsIGF5MSArIHNpemVBLnkKCglsb2NhbCBi
eDEsIGJ5MSA9IHBvaW50Qi54LCBwb2ludEIueQoJbG9jYWwgYngyLCBieTIgPSBieDEgKyBzaXpl
Qi54LCBieTEgKyBzaXplQi55CgoJaWYgYXgxIDwgYngyIGFuZCBheDIgPiBieDEgYW5kIGF5MSA8
IGJ5MiBhbmQgYXkyID4gYnkxIHRoZW4KCQlyZXR1cm4gcG9pbnRBLXBvaW50QgoJZW5kCgoJcmV0
dXJuIG5pbAplbmQKZnVuY3Rpb24gY2FyZGluYWxfZGlyZWN0aW9uKHYsIHRocmVzaG9sZCkKCXRo
cmVzaG9sZCA9IHRocmVzaG9sZCBvciAxICAtLSBtaW5pbXVtIGRpZmZlcmVuY2UgYmV0d2VlbiBh
eGVzCgoJbG9jYWwgYWJzX3ggPSBhYnModi54KQoJbG9jYWwgYWJzX3kgPSBhYnModi55KQoJaWYg
YWJzX3ggPiBhYnNfeSArIHRocmVzaG9sZCB0aGVuCgkJcmV0dXJuIG5ld19wb2ludChzaWduKHYu
eCksIDApCgllbHNlaWYgYWJzX3kgPiBhYnNfeCArIHRocmVzaG9sZCB0aGVuCgkJcmV0dXJuIG5l
d19wb2ludCgwLCBzaWduKHYueSkpCgllbHNlCgkJcmV0dXJuIG5pbCAgLS0gdG9vIGRpYWdvbmFs
LCBkb24ndCBhdHRhY2gKCWVuZAplbmQKZnVuY3Rpb24gc2lnbihuKQoJaWYgbiA_IDAgdGhlbiBy
ZXR1cm4gMQoJZWxzZWlmIG4gPCAwIHRoZW4gcmV0dXJuIC0xCgllbHNlIHJldHVybiAwCgllbmQK
ZW5kCmZ1bmN0aW9uIGdldF9zdHJpbmdfd2lkdGgocykKCWxvY2FsIHdpZHRoPXByaW50KHMsLTEw
MDAsMCkKCXByaW50KCIiLDAsMCkKCXJldHVybiB3aWR0aCsxMDAwCmVuZApmdW5jdGlvbiBwcmlu
dF9jZW50ZXJlZCh0ZXh0LCB5LCBjb2wpCgljb2wgPSBjb2wgb3IgY29sb3JzLndoaXRlCglsb2Nh
bCB0ZXh0X3dpZHRoID1nZXRfc3RyaW5nX3dpZHRoKHRleHQpCglsb2NhbCB4ID0gKHNjcmVlbldp
ZHRoIC0gdGV4dF93aWR0aCkgXCAyCglwcmludCh0ZXh0LHgrY2FtZXJhX2hlbHBlcjpnZXRfY2Ft
ZXJhKCkueCwgeStjYW1lcmFfaGVscGVyOmdldF9jYW1lcmEoKS55LCBjb2wpCmVuZApmdW5jdGlv
biBwcmludF9yaWdodCh0ZXh0LCB5LCBjb2wpCgljb2wgPSBjb2wgb3IgIGNvbG9ycy53aGl0ZQoJ
bG9jYWwgdGV4dF93aWR0aCA9Z2V0X3N0cmluZ193aWR0aCh0ZXh0KQoJbG9jYWwgeCA9IHNjcmVl
bldpZHRoIC0gdGV4dF93aWR0aAoJcHJpbnQodGV4dCwgeCtjYW1lcmFfaGVscGVyOmdldF9jYW1l
cmEoKS54LCB5LCBjb2wpCmVuZApmdW5jdGlvbiBpc19wb2ludF9vbl9zY3JlZW4ocG9pbnQpCgkK
CWxvY2FsIGNhbWVyYV9wb3M9Y2FtZXJhX2hlbHBlcjpnZXRfY2FtZXJhKCkKCQoJcmV0dXJuICgK
CQlwb2ludC54ID49IGNhbWVyYV9wb3MueCAtIHRpbGVTaXplIGFuZCBwb2ludC54IDwgY2FtZXJh
X3Bvcy54ICsgc2NyZWVuV2lkdGggYW5kCgkJcG9pbnQueSA_PSBjYW1lcmFfcG9zLnkgLSB0aWxl
U2l6ZSBhbmQgcG9pbnQueSA8IGNhbWVyYV9wb3MueSArIHNjcmVlbkhlaWdodAoJKQplbmQKY29s
b3JzID0gewoJYmxhY2sgICAgICAgID0gMCwKCWRhcmtfYmx1ZSAgICA9IDEsCglkYXJrX3B1cnBs
ZSAgPSAyLAoJZGFya19ncmVlbiAgID0gMywKCWJyb3duICAgICAgICA9IDQsCglkYXJrX2dyYXkg
ICAgPSA1LAoJbGlnaHRfZ3JheSAgID0gNiwKCXdoaXRlICAgICAgICA9IDcsCglyZWQgICAgICAg
ICAgPSA4LAoJb3JhbmdlICAgICAgID0gOSwKCXllbGxvdyAgICAgICA9IDEwLAoJZ3JlZW4gICAg
ICAgID0gMTEsCglibHVlICAgICAgICAgPSAxMiwKCWluZGlnbyAgICAgICA9IDEzLAoJcGluayAg
ICAgICAgID0gMTQsCglwZWFjaCAgICAgICAgPSAxNSwKCgktLSBFeHRlbmRlZCBjb2xvcnMgKDE2
4oCTNjMpIG1heSB2YXJ5IGJ5IHBhbGV0dGUgc2V0dXAsIGJ1dCBoZXJlJ3MgYSB1c2VmdWwgZGVm
YXVsdCBzZXQ6Cglyb3NlICAgICAgICAgPSAxNiwKCXNhbG1vbiAgICAgICA9IDE3LAoJYmVpZ2Ug
ICAgICAgID0gMTgsCglsaWdodF95ZWxsb3cgPSAxOSwKCWxpZ2h0X2dyZWVuICA9IDIwLAoJc2Vh
Zm9hbSAgICAgID0gMjEsCglza3lfYmx1ZSAgICAgPSAyMiwKCXBlcml3aW5rbGUgICA9IDIzLAoJ
bGF2ZW5kZXIgICAgID0gMjQsCglsaWdodF9waW5rICAgPSAyNSwKCWRhcmtfYnJvd24gPTI4Cgkt
LSAuLi55b3UgY2FuIGNvbnRpbnVlIGFkZGluZyBhcyBuZWVkZWQKfQpuZXdfdGltZXI9ZnVuY3Rp
b24oc3Bhd25fcmF0ZSxzdGFydCxhY3Rpb24pCglyZXR1cm57CglzcGF3bl9yYXRlPXNwYXduX3Jh
dGUsCgl0aW1lcj1zdGFydCwKCWFjdGlvbj1hY3Rpb24sCgl1cGRhdGU9ZnVuY3Rpb24oc2VsZixv
dGhlcikKCQlpZigJc2VsZi5hY3Rpb249PW5pbCkgdGhlbgoJCQlyZXR1cm4KCQllbmQKCgkJaWYo
c2VsZi5zcGF3bl9yYXRlPT0wKSB0aGVuCgkJCXJldHVybgoJCWVsc2VpZihzZWxmLnNwYXduX3Jh
dGU_MSkJdGhlbgkKCQkJaWYoc2VsZi50aW1lcj5zZWxmLnNwYXduX3JhdGUpIHRoZW4KCQkJCXNl
bGYuYWN0aW9uKG90aGVyKQoJCQkJc2VsZi50aW1lcj0wCgkJCWVsc2UKCQkJCXNlbGYudGltZXIr
PTEKCQkJZW5kCgkJZWxzZQoJCQlmb3IgaT0xLDEvc2VsZi5zcGF3bl9yYXRlLDEgZG8KCQkJCXNl
bGYuYWN0aW9uKG90aGVyKQoJCQllbmQKCQllbmQKCWVuZAoJfQplbmQKCmZ1bmN0aW9uIHJhbmRv
bV9vZmZzY3JlZW5fcG9pbnQoKQoJbG9jYWwgc2lkZSA9IGZscihybmQoNCkpICAtLSBwaWNrIGEg
cmFuZG9tIHNpZGU6IDA9dG9wLCAxPWJvdHRvbSwgMj1sZWZ0LCAzPXJpZ2h0CglpZiBzaWRlID09
IDAgdGhlbgoJCS0tIFRvcDogeSA9IC10aWxlU2l6ZQoJCXJldHVybiBuZXdfcG9pbnQoZmxyKHJu
ZChzY3JlZW5XaWR0aCAvIHRpbGVTaXplKSkgKiB0aWxlU2l6ZSwgLXRpbGVTaXplKQoJZWxzZWlm
IHNpZGUgPT0gMSB0aGVuCgkJLS0gQm90dG9tOiB5ID0gc2NyZWVuSGVpZ2h0CgkJcmV0dXJuIG5l
d19wb2ludChmbHIocm5kKHNjcmVlbldpZHRoIC8gdGlsZVNpemUpKSAqIHRpbGVTaXplLCBzY3Jl
ZW5IZWlnaHQpCgllbHNlaWYgc2lkZSA9PSAyIHRoZW4KCQktLSBMZWZ0OiB4ID0gLXRpbGVTaXpl
CgkJcmV0dXJuIG5ld19wb2ludCgtdGlsZVNpemUsIGZscihybmQoc2NyZWVuSGVpZ2h0IC8gdGls
ZVNpemUpKSAqIHRpbGVTaXplKQoJZWxzZQoJCS0tIFJpZ2h0OiB4ID0gc2NyZWVuV2lkdGgKCQly
ZXR1cm4gbmV3X3BvaW50KHNjcmVlbldpZHRoLCBmbHIocm5kKHNjcmVlbkhlaWdodCAvIHRpbGVT
aXplKSkgKiB0aWxlU2l6ZSkKCWVuZAplbmQKZnVuY3Rpb24gcmFuZG9tX29uc2NyZWVuX3BvaW50
KCkKCWxvY2FsIHggPSBmbHIocm5kKHNjcmVlbldpZHRoKSkgCglsb2NhbCB5ID0gZmxyKHJuZChz
Y3JlZW5IZWlnaHQpKQoJcmV0dXJuIG5ld19wb2ludCh4LCB5KQplbmQKCmZ1bmN0aW9uIGZvcm1h
dF9tb25leShuKQoJaWYobj09MCkgdGhlbgoJCXJldHVybiAiMCIKCWVsc2UKCQlyZXR1cm4gbi4u
IiwwMDAiCgllbmQKZW5k
:: include.lua
--[[pod_format="raw",created="2025-05-19 15:00:08",modified="2025-06-05 16:14:12",revision=1367]]
include "lib.lua"
include "point.lua"
include "helpers.lua"
include "sfx.lua"
include "camera.lua"
include "particle_system.lua"
include "parts.lua"
include "input.lua"
include "ship.lua"
include "free_part.lua"
include "part_spawner.lua"
include "asteroid_spawner.lua"
include "asteroid.lua"
include "pirate.lua"
include "lightroad.lua"
include "screen.lua"
include "levels.lua"
include "start.lua"
include "game.lua"
include "director.lua"
include "help.lua"
include "game_over.lua"
:: input.lua
--[[pod_format="raw",created="2025-05-19 16:29:01",modified="2025-05-19 18:10:29",revision=48]]
input_lookup = {
	-- Define logical mappings for clarity
	lpad = {
		left = 0,
		right = 1,
		up = 2,
		down = 3
	},
	rpad = {
		left = 8,
		right = 9,
		up = 10,
		down = 11
	},
	buttons = {
		o = 4,
		x = 5,
		menu=6,
		a = 12,
		b = 13
	}
}
function new_input(player)
	return {
	player=player or 0,
	_button_down_frame = {},
button=function(self, b, hold)
	local now = t()
	if type(b) ~= "table" then
		b = {b}
	end
	local key = join_with_dashes(b)

	if all_buttons_pressed(b, self.player) then
		local start = self._button_down_frame[key]
		if not start then
			self._button_down_frame[key] = now
			return 1  -- just pressed
		end

		local held = now - start 

		if hold then
			if held >= hold then
				if held >= hold + 0.1 then  -- small extra time past charge (you can adjust)
					return 4  -- overheld
				else
					return 3  -- finished charging
				end
			else
				return 2  -- still holding
			end
		else
			return held  -- legacy: how long held (seconds)
		end
	else
		self._button_down_frame[key] = nil
		return nil
	end
end,
		button_press=function(self,b)
			return btnp(b,self.player)
		end
	}
end
function join_with_dashes(arr)
	local result = ""
	for i = 1, #arr do
		result ..= arr[i]
		if i < #arr then
			result ..= "-"
		end
	end
	return result
end
function all_buttons_pressed(buttons, player)
	player = player or 0  -- default to player 0 if not specified
	for i = 1, #buttons do
		if not btn(buttons[i], player) then
			return false
		end
	end
	return true
end
:: levels.lua
--[[pod_format="raw",created="2025-06-04 13:56:27",modified="2025-06-05 16:14:12",revision=181]]
get_levels=function()
	return{		
				new_level(level1_start(),level1_end(),{
				new_parts_scene(60*5,30),
				new_asteroid_scene(60*10,60),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_parts_scene(60*5,30),
				new_asteroid_scene(60*20,15),
				new_asteroid_scene(60*20,10),
				new_cargo_scene(60*5,30),
				new_pirate_scene(60*5,120),
				new_scene(60*5,180)
			},
			10),
			new_level(level2_start(),level2_end(),{
				new_parts_scene(60*5,30),
				new_asteroid_scene(60*10,60),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_parts_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,15),
				new_asteroid_scene(60*20,10),
				new_pirate_scene(60*5,120),
				new_scene(60*5,180)
			},
			15),		
			new_level(level3_start(),level3_end(),{
			new_parts_scene(60*5,30),
				new_asteroid_scene(60*10,60),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_parts_scene(60*5,30),
				new_pirate_scene(60*5,120),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,15),
				new_pirate_scene(60*5,120),
				new_parts_scene(60*5,30),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_scene(60*5,180)
			},
			20)
	}
end


new_level=function(start_screen,end_screen,scenes,goal)
	return{
		start_screen=start_screen,
		end_screen=end_screen,
		scenes=scenes,
		goal=goal
	}
end


:: lib.lua
--[[pod_format="raw",created="2025-05-19 15:05:26",modified="2025-05-19 15:05:47",revision=3]]
--lib

-- pq-debugging, by pancelor

-- quotes all args and prints to host console
-- usage:
--   pq("handles nils", many_vars, {tables=1, work=11, too=111})
function pq(...)
  printh(qq(...))
  return ...
end

-- quotes all arguments into a string
-- usage:
--   ?qq("p.x=",x,"p.y=",y)
function qq(...)
  local args=pack(...)
  local s=""
  for i=1,args.n do
    s..=quote(args[i]).." "
  end
  return s
end

-- quote a single thing
-- like tostr() but for tables
-- don't call this directly; call pq or qq instead
function quote(t, depth)
  depth=depth or 4 --avoid inf loop
  if type(t)~="table" or depth<=0 then return tostr(t) end

  local s="{"
  for k,v in pairs(t) do
    s..=tostr(k).."="..quote(v,depth-1)..","
  end
  return s.."}"
end

-- like sprintf (from c)
-- usage:
--   ?qf("%/% is %%",3,8,3/8*100,"%")
function qf(fmt,...)
  local parts,args=split(fmt,"%"),pack(...)
  local str=deli(parts,1)
  for ix,pt in ipairs(parts) do
    str..=quote(args[ix])..pt
  end
  if args.n~=#parts then
    -- uh oh! mismatched arg count
    str..="(extraqf:"..(args.n-#parts)..")"
  end
  return str
end
function pqf(...) printh(qf(...)) end
:: lightroad.lua
--[[pod_format="raw",created="2025-05-20 20:49:16",modified="2025-05-29 19:06:59",revision=684]]
new_lightroad=function()
	return{
		beam_timer=new_timer(0,0,function(obj)
			local beam=new_beam(obj)
			beam.position= new_point(obj.left+random(obj.right-obj.left),-16)
			beam.color=pick_random(obj.beam_colors)
			beam.speed=new_point(0,random(10)+5)
			beam.size=random(200)
			add(obj.decorations,beam)	
		end	
		),
		star_timer=new_timer(2,0,function(obj)
			local star=new_star(obj)
			local size=random(2)
			star.position= new_point(obj.left+random(obj.right-obj.left),-16)
			star.color=obj.star_colors[3-flr(size)]
			star.speed=new_point(0,size+2)
			star.size=0
			add(obj.decorations,star)	
		end	
		),
		--spawn_rate=0,
		--timer=0,
		left=0,
		right=480,
		decorations={},
		--colors={2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30},
		beam_colors={20,4,21,2,23,1,18,19},
		star_colors={7,6,5},
		update=function(self)
			self.beam_timer:update(self)
			self.star_timer:update(self)

			foreach(self.decorations, function(deco)
	    		deco:update()
	 	 	end)
		end,
		draw=function(self)
			foreach(self.decorations, function(deco)
	    		deco:draw()
	 	 	end)
		end,

		
}
end

new_decoration=function(parent)
	return{
		_parent=parent,
		position=new_point(0,0),
		speed=new_point(0,0),
		size=1,		
		color=2,
		update=function(self)
			self.position+=self.speed
		end,
		draw=function(self)
		end,
		kill = function(self)
			del(self._parent.decorations,self)
		end
}
end

new_beam=function(parent)
	local ret = new_decoration(parent)
	ret.baseupdate=ret.update
	ret.update=function(self)
		ret:baseupdate()
		if(is_point_on_screen(self.position+new_point(0,-self.size/2))==false	and is_point_on_screen(self.position+new_point(0,self.size/2))==false	) then 
			self:kill()
		end
	end
	ret.draw=function(self)
		line(self.position.x,self.position.y-self.size/2,self.position.x,self.position.y+self.size/2,self.color)
	end
	return ret
end
new_star=function(parent)
	local ret = new_decoration(parent)
	ret.baseupdate=ret.update
	ret.update=function(self)
		ret:baseupdate()
		if(is_point_on_screen(self.position)==false) then 
			self:kill()
		end
	end
	ret.draw=function(self)
		circfill(self.position.x,self.position.y,self.size,self.color)
	end
	return ret
end

:: main.lua
--[[pod_format="raw",created="2025-05-19 14:05:35",modified="2025-06-05 16:14:12",revision=1481]]
include "include.lua"
tileSize=16
halfTileSize=tileSize/2
screenWidth=480 --30 tiles
screenHeight=270 --16+ tiles
screenHeightTileAdjusted=256 
mode=1
input=new_input(0)
game=nil
levels=nil
current_level=0
modes= { new_start(), new_help(),0,0,0,new_gameover(),new_win()}

mode_keys={
	start=1,
	help=2,
	level_start=3,
	game=4,
	level_end=5,
	game_over=6,
	win=7,
}

function	restart()
	pq("----------------restart-----------------")
	current_level=1
	levels=get_levels()
	mode=mode_keys.start
	modes[mode]:init()
end

function next_screen()
	mode+=1
	pq("----------------mode "..mode.."-----------------")
	local level =levels[current_level]
	if(mode==mode_keys.level_start) then
		pq("setting up a level")
		modes[mode_keys.level_start]=level.start_screen
		local ngame=new_game()
		modes[mode_keys.game]=ngame
		ngame._director=new_director()
		ngame._director.scenes=level.scenes
		ngame._director.goal=level.goal
		if(game!=nil) then 
			ngame.bank=game.bank
		end
		game=ngame
		modes[mode_keys.level_end]=level.end_screen
	end
	modes[mode]:init()
end

function next_level()
	if(current_level+1>#levels) then
		win()
	else	
		current_level+=1
		pq("----------------level "..current_level.."-----------------")
		mode=mode_keys.level_start-1
		next_screen()
	end
end

function	gameover()
	mode=mode_keys.game_over
	modes[mode]:init()
end
function	win(score)
	modes[mode_keys.win]=new_win(score)
	mode=mode_keys.win
	modes[mode]:init()
end
function _init()	
	pq("----------------start-----------------")
	restart()
end

function _update()
	modes[mode]:update()
end
function _draw()
	modes[mode]:draw()
end


include "error_explorer.lua"
:: particle_system.lua
--[[pod_format="raw",created="2025-05-25 03:10:34",modified="2025-05-26 01:13:00",revision=43]]
function new_particle_system()
	return{
		sprites =game.sprites1,
		particles={},
		age=0,
		lifetime=60,
		spawn_rate=0.25; 
		particle_animation={},
		particle_flipx_r=false,
		particle_flipy_r=false,
		particle_lifetime=60,
		particle_halflife=1,
		position=new_point(0,0),
		particle_radial=false,
		particle_position_r=new_point(0,0),
		particle_speed=new_point(0,0),
		particle_speed_r=new_point(0,0),
		particle_acceleration=new_point(0,0),
		particle_acceleration_r=new_point(0,0),
		particle_update=nil, --leave nil for default behavior
		init=function(self)
			
		end,
		update=function(self)
			foreach(self.particles, function(particle)
    			particle:update()
 	 		end)
 	 		if( self.age>self.lifetime) then
 	 			if(#self.particles==0) then
 	 		 		self:die(game.particle_systems)
 	 		 	end
 	 		 	return
 	 		end
			if(self.spawn_rate>1) then
				for i=1,self.spawn_rate,1 do
					self:spawn()
				end
			else
				local inverse=1/self.spawn_rate
				if(self.age%inverse==0) then
					self:spawn()
				end
			end	
			self.age+=1
		end,
		draw=function(self)
			foreach(self.particles, function(particle)
    			particle:draw()
 	 		end)
		end,
		die=function(self,particle_system_container)
			del(particle_system_container,self)
		end,
		spawn=function(self)
			local particle=new_particle()
			particle.animation=self.particle_animation
			particle.lifetime=self.particle_lifetime
			particle.halflife=self.particle_halflife
			particle.position=self.position:randomize(self.particle_position_r)
			local speed=self.particle_speed:randomize(self.particle_speed_r)
			if(self.particle_radial) then
				speed=speed:square_to_circle()
			end
			particle.speed=	speed
			local acceleration=self.particle_acceleration:randomize(self.particle_acceleration_r)
			if(self.particle_radial) then
				acceleration=acceleration:square_to_circle()
			end	
			particle.acceleration=acceleration
		
			particle.particle_container=self.particles
			if(self.particle_flipx_r) then
				particle.flipx=rnd()>0.5
			end
			if(self.particle_flipy_r) then
				particle.flipy=rnd()>0.5
			end				
			particle.update=self.particle_update or particle.update
			add(self.particles,particle)
		end
	}
end
function new_particle()
	return{
		sprites =game.sprites1,
		particle_container,
		animation={},
		age=0,
		lifetime=60,
		halflife=1,
		position=new_point(0,0),
		speed=new_point(0,0),
		acceleration=new_point(0,0),
		flipx=false,
		flipy=false,
		init=function(self)
			
		end,
		update=function(self)
			self.position+=self.speed
			self.speed+=self.acceleration
			self.age+=1
		 		if(self.lifetime>=0 and self.age>self.lifetime) then
		 			self:die(self.particle_container)
		 		end
		 		if(rnd()>self.halflife) then
			 		self:die(self.particle_container)
		 		end
		end,
		draw=function(self)			
			spr(self.sprites[self.animation[self.age%#self.animation+1 ]].bmp,self.position.x,self.position.y,self.flipx,self.flipy)
		end,
		die=function(self,sprites)
			del(sprites,self)
		end
	}
end
	

:: parts.lua
--[[pod_format="raw",created="2025-05-19 15:12:11",modified="2025-06-03 13:32:01",revision=1768]]
function new_part(position)
	return{
		_position=position,
		_sprite=0,
		_sprites,
		name="dummy",
		attach_sides = {
			["1,0"] = true,   -- right
			["-1,0"] = true, -- left
			["0,-1"] = true,  -- up
			["0,1"] = true   -- down
		},
		mass=1,
		thrust=0,
		worth=1,
		fragile=false,
		_energy=0,
		_energy_max=0,
		_energy_regen=0,

		location=nil,
		init=function(self)
			self._sprites=game.sprites1
		end,
		can_use=function(self)
			return self._energy_max>0 and self._energy>=self._energy_max
		end,
		can_regen=function(self)
			return true
		end,
		update=function(self)		
			if(self:can_regen()) then
				self._energy=min(	self._energy+self._energy_regen,self._energy_max)
			end
		end,
		draw=function(self)
			if(self:can_use()==false)then
				pal(11,19)
			end
			spr(self._sprites[self._sprite].bmp,self._position.x,self._position.y)
			pal()
			local acc=game._ship.acceleration:length()
			if(self.location!=nil and self.thrust>0 and acc>0 ) then			
				local particle_system= new_particle_system()
	 			particle_system.spawn_rate=self.thrust*4
				particle_system.lifetime=.25
				particle_system.position=self._position+new_point(0,8)
				--particle_system.particle_position_r=new_point(-8,-16)
				particle_system.particle_speed=(game._ship.acceleration*-3*self.thrust)
				particle_system.particle_speed_r=new_point(.1,.1)
				particle_system.particle_halflife=0.95
				particle_system.particle_animation={58,59}
				particle_system.particle_flipx_r=true
				particle_system.particle_flipy_r=true
				add(game.particle_systems,particle_system)
			end
			
		end,
		set_position=function(self,position)
			self._position=position+self.location*16
		end,
		kill=function(self)
			camera_helper:shake_camera(5, 30 )
			for i=1,#game._ship.parts do
				local part=game._ship.parts[i]
				if(part.defend!=nil) then
					if(part:defend(self)) then
						return false
					end
				end
			end		
			del(game._ship.parts,self) --fix
			
 			local particle_system= new_particle_system()
 			particle_system.spawn_rate=1
			particle_system.lifetime=10
			particle_system.position=self._position:round(tileSize)
			particle_system.particle_position_r=new_point(-8,-8)
			particle_system.particle_speed_r=new_point(-.5,-.5)
			particle_system.particle_halflife=0.99
			particle_system.particle_animation={57}
			particle_system.particle_flipx_r=true
			particle_system.particle_flipy_r=true
			add(game.particle_systems,particle_system)
		  	
			return true
		end
	}
end
function new_part_command(position)
	local ret = new_part(position)
	ret._sprite=1
	ret.thrust=.25
	ret.name="command"
	ret.worth=0
	ret.basekill=ret.kill
	ret.kill=function(self)
		if(self:basekill()) then
			game:death()
		end
	end
	return ret	
end
function new_part_engine(position)
	local ret = new_part(position)
	ret._sprite=2
	ret.thrust=1	
	ret.name="engine"
	ret.attach_sides = {
		["1,0"] = false,   -- right
		["-1,0"] = false, -- left
		["0,-1"] = true,  -- up
		["0,1"] = false   -- down
	}
	return ret	
end
function new_part_bulkhead(position)
	local ret = new_part(position)
	ret._sprite=4
	ret.mass=2
	ret.name="bulkhead"
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = false   -- down
		}
	return ret	
end
function new_part_scaffold(position)
	local ret = new_part(position)
	ret._sprite=12
	ret.name="scaffold"
	return ret	
end
function new_part_cargo1(position)
	local ret = new_part(position)
	ret._sprite=9
	ret.mass=2
	ret.worth=2
	ret.name="treasure"
	ret.fragile=true
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = false   -- down
		}
	return ret	
end
function new_part_cargo2(position)
	local ret = new_part(position)
	ret._sprite=10
	ret.mass=3
	ret.worth=3
	ret.name="treasure"
	ret.fragile=true
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = false   -- down
		}
	return ret	
end
function new_part_cargo3(position)
	local ret = new_part(position)
	ret._sprite=11
	ret.mass=1
	ret.worth=5
	ret.name="treasure"
	ret.fragile=true
	ret.basekill=ret.kill
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = false   -- down
		}
	ret.kill=function(self)
		if(self:basekill()) then
			game._ship.parts[1]:kill()
		end
	end
	return ret	
end
function new_part_gun(position)
	local ret = new_part(position)
	ret._sprite=3
	ret.name="gun"
	ret._energy_max=30
	ret._energy_regen=0.5
	ret._target=nil	
	ret._gun_arc=8
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = true   -- down
		}
	ret.baseupdate=ret.update
	ret.update=function(self)
		self:baseupdate()
		if(self:can_use()) then
			for i=1,#game.asteroids do
				local asteroid= game.asteroids[i]
				if(block_collision(asteroid._position,new_point(tileSize,tileSize) 
				,new_point(self._position.x+halfTileSize-self._gun_arc,0)
				,new_point(self._gun_arc,self._position.y)) )then
					if(asteroid.name=="large") then					
						self._target=asteroid
						play_sfx(4, channels.ship)
					end
				end
			end
			
			for i=1,#game.pirates do
				local pirate= game.pirates[i]
				if(block_collision(pirate._position,new_point(tileSize,tileSize) 
				,new_point(self._position.x+halfTileSize-self._gun_arc,0)
				,new_point(self._gun_arc,self._position.y)) )then
									
					self._target=pirate
					play_sfx(4, channels.ship)
					
				end
			end	
	
		end
		if(self._target!=nil) then
			self._energy-=1
			if(self._target:damage(1)<1) then
				self._target=nil
				stop_sfx(4, channels.ship)
			end
		end
		if(self._energy<=0) then
			self._target=nil
			stop_sfx(4, 0)
		end		
	end	
	--ret.basedraw=ret.draw
	ret.draw2=function(self)
		--self:basedraw()
		if(self._target!=nil) then
			line(self._position.x+halfTileSize,self._position.y+halfTileSize,
				self._target._position.x+halfTileSize,self._target._position.y+halfTileSize,11)
		end
	end
	ret.basekill=ret.kill
	ret.kill=function(self)
		if(self:basekill()) then
			stop_sfx(4, 0)
		end
		
	end	

	ret.can_regen=function(self)
		return self._target==nil
	end
	return ret	
end

function new_part_shield(position)
	local ret = new_part(position)
	ret._sprite=5
	ret.name="shield"
	ret._energy_max=120
	ret._energy_regen=0.5
	ret._shield_time=0
	ret._target=nil 
	ret.fragile=true
	ret.attach_sides = {
		["1,0"] = false,   -- right
		["-1,0"] = false, -- left
		["0,-1"] = false,  -- up
		["0,1"] = false   -- down
	}
	ret.defend=function(self,part)
		if(self:can_use()) then
			self._energy=0
			ret._shield_time=30
			ret._target=part--._position+new_point(halfTileSize,halfTileSize)
			return true
		end
		return false
	end
	ret.baseupdate=ret.update
	ret.update=function(self)
		self:baseupdate()
		self._shield_time=max(0,self._shield_time-1)
	end
	--ret.basedraw=ret.draw
	ret.draw2=function(self)
		--ret:basedraw()
		if(self._shield_time>0) then
			line(self._position.x+halfTileSize,self._position.y+halfTileSize,
				self._target._position.x+halfTileSize,self._target._position.y+halfTileSize,12)
			circfill(self._target._position.x+halfTileSize,self._target._position.y+halfTileSize,8,12)
		end
	end
	return ret
end


:: pirate.lua
--[[pod_format="raw",created="2025-05-30 23:52:06",modified="2025-06-03 13:32:01",revision=258]]
new_pirate=function()
return {
	_position=nil,
	_speed=new_point(0,0),
	_sprites,
	_sprite=72,
	_thrust=1,
	_visit_points={},
	_visit_step=1,
	_shoot_timer=nil,
	health=30,
	init=function(self)
		self._sprites=game.sprites1
		self._position=random_offscreen_point()
		add(self._visit_points, random_onscreen_point())	
		add(self._visit_points, random_onscreen_point())
		add(self._visit_points, random_onscreen_point())
		add(self._visit_points, random_offscreen_point())
		
		self._shoot_timer= new_timer(130,0,self.do_shoot) 
	end,
	update=function(self)
		pq(self._visit_step)
		local point= self._visit_points[self._visit_step]
		self._speed=self._position:unitVector(point)
		self._position+=self._speed
		self._shoot_timer:update(self)
		if(abs((self._position-point):length())<self._thrust) then
			self._visit_step+=1
			if(self._visit_step>#self._visit_points) then
				self:kill(3)
			end
		end
		
	end,
	draw=function(self)		
		local particle_system= new_particle_system()
			particle_system.spawn_rate=0.5
		particle_system.lifetime=.25
		particle_system.position=self._position+new_point(0,0)
		particle_system.particle_speed=(self._speed*-1)
		particle_system.particle_speed_r=new_point(.1,.1)
		particle_system.particle_halflife=0.95
		particle_system.particle_animation={58,59}
		particle_system.particle_flipx_r=true
		particle_system.particle_flipy_r=true
		add(game.particle_systems,particle_system)

		spr(self._sprites[self._sprite].bmp,self._position.x,self._position.y)
	end,
	kill=function(self,mode)--0 hit, 1 deflected, 2 destroyed, 3 passed
		if(mode!=3) then			
			local particle_system= new_particle_system()
 			particle_system.spawn_rate=1
			particle_system.lifetime=10
			particle_system.position=self._position:round(tileSize)
			particle_system.particle_position_r=new_point(-8,-8)
			particle_system.particle_speed_r=new_point(-.5,-.5)
			particle_system.particle_halflife=0.99
			particle_system.particle_animation={57}
			particle_system.particle_flipx_r=true
			particle_system.particle_flipy_r=true
			add(game.particle_systems,particle_system)
		end
		del(game.pirates,self)
	end,
	do_shoot=function(self)
		local bullet=new_bullet(self._position,self._position:unitVector(game._ship._position))
		bullet:init()
		add(game.bullets,bullet)
	end,
		damage=function(self,d)
			self.health-=d
			if(self.health<1) then
				self:kill(2)
			end
			return self.health
		end,
}
end

new_bullet=function(position,direction)
return{
	_position=position,
	_speed=direction,
	_sprites,
	_sprite=80,
	_thrust=2,
	init=function(self)
		self._sprites=game.sprites1
		self._speed*=self._thrust
	end,	
	update=function(self)
		self._position+=self._speed
		if(is_point_on_screen(self._position)==false) then
			self:kill(3)
		end
	end,
	draw=function(self)
		spr(self._sprites[self._sprite].bmp,self._position.x,self._position.y)
	end,
	kill=function(self,mode)--0 hit, 1 deflected, 2 destroyed, 3 passed
		if(mode!=3) then			
		
		end
		del(game.bullets,self)
	end
}
end
:: point.lua
--[[pod_format="raw",created="2025-05-19 15:09:53",modified="2025-06-03 13:32:43",revision=747]]
function new_point(x,y)
	return sm({
		x=x,
		y=y,
		unitVector=function(self,b)
			return self.normalize(b-self)
		end,
		randomize=function(self,p)
			return new_point(self.x+random(p.x),	self.y+random(p.y))
		end,
		absPoint=function(p)
			return new_point(abs(p.x),abs(p.y))
		end,
		round=function(p,n)
			return new_point(flr(p.x/n+.5)*n,flr(p.y/n+.5)*n)
		end,
		clone=function(p)
			return new_point(p.x,p.y)
		end,
		length=function(p)
			return sqrt(p.x^2+p.y^2)
		end,
		square_to_circle=function (p)
	    local a = math.max( math.abs(p.x), math.abs(p.y)) -- max(|x|, |y|)
	    local mag = math.sqrt(p.x * p.x + p.y * p.y)
	
	    if mag == 0 then
	        return 0, 0 -- Origin stays at origin
	    end
	
	    local scale = a / mag
	    return new_point(p.x * scale, p.y * scale)
		end,
		__add=function(a,b)
			return new_point(a.x+b.x,a.y+b.y)
		end,
		__mul=function(a,b)
			return new_point(a.x*b,a.y*b)
		end,
		__sub=function(a,b)
			return new_point(a.x-b.x,a.y-b.y)
		end,
		equals=function(self,b)
			if(b == nil) then
				return false
			end
			return self.x==b.x and self.y==b.y
		end,
		__tostring=function()
			return "point"
		end,
		lerp=function(self, a, t)
		-- a and b are points, t is a number between 0 and 1
			local math=self + (a - self) * t
			--pq(self.x,a.x,t,math.x)
			return math
		end,
		box=function(self,left, top, right, bottom)
			self.x=mid(left,self.x,right)
			self.y=mid(top,self.y,bottom)
		end,
		normalize=function(p)
			local len = sqrt(p.x^2 + p.y^2)
			if len == 0 then return new_point(0, 0) end
			return new_point(p.x / len, p.y / len)
		end
	})
end

:: screen.lua
--[[pod_format="raw",created="2025-06-03 13:46:12",modified="2025-06-05 16:14:12",revision=339]]
function new_screen()
	return{
	sprites,
	image,
	text={},
	start_time=nil,
	wait_time=0.1,
	init=function(self)
		camera_helper:set_camera(new_point(0,0),true)
		
		stop_sfx()
		music(-1)
		self.sprites=	fetch("./gfx/0.gfx")	
		self.start_time=time()
	
	end,
	update=function(self)
		camera_helper:update_camera()
		if(self.start_time+self.wait_time<time()) then
			if(btnp()>0) then
			  self.next_screen_action()
			end
		end

	end,
	next_screen_action=function()
		 next_screen()
	end,
	draw=function(self)
		cls()
		spr(self.sprites[self.image].bmp,(480-200)/2,0)
		for i=1,#self.text do
			local t=self.text[i]
			print_centered(t,200+i*10,9)
		end
	end}
	
end

function new_gameover()
	local ret=new_screen()
	ret.wait_time=3
	ret.image=202
	ret.text={
		"You didn't make it.",
		"Or maybe you just didn't get money.",
		"Either way there is no going back.",
		"At least where you ejected near a space a space gas station.",
		"Cleaning space toilets won't save your dogs, but it will keep you fed.",
		"Better luck next life!"
	}

	ret.next_screen_action=function()
		 restart()
	end
	return ret	
end

function new_win()
	local ret=new_screen()
	ret.wait_time=1
	ret.image=203
	ret.text={
		"That's it for now!",
		"But Lucky willing, there is more Junk Haulers",
		"coming soon to space near you"

	}

	ret.next_screen_action=function()
		 restart()
	end
	return ret	
end


function level1_end(score)
	local ret=new_screen()
	ret.wait_time=1
	ret.image=201
	ret.text={
		"You made it home just in time.",
		"Lucky was lucky, and is all better now.",
		"Let's hope nothing else goes wrong."
	}
	ret.next_screen_action=function()
		 next_level()
	end
	return ret
	
end

function level1_start()
	ret=new_screen()
	ret.image=200
	ret.text={
		"You have been a junk hauler your entire life.",
		"When you retired, you opened a dog orphanage on a small asteroid",
		"Things were great for a while, but donations have run low",
		"Lucky needs surgery, That will cost 10,000 space bucks",
		"It's time to haul junk again"
	}
	return ret

end

function level2_end(score)
	local ret=new_screen()
	ret.wait_time=1
	ret.image=209
	ret.text={
		"Luna is doing great!",
		"All other dogs have been vaccinated",
		"You do have a sinking feeling you;re forgetting something.",
		"Something important..."
,
	
	}
	ret.next_screen_action=function()
		 next_level()
	end
	return ret
	
end

function level2_start()
	ret=new_screen()
	ret.image=208
	ret.text={
		"Luna has space chickenpox.",
		"Or is it spacechicken pox?",
		"You don't know, you're not a space vet",
		"You do know it will cost 15,000 space bucks.",
		"Better hurry before more dogs catch it!"
	}
	return ret

end

function level3_end(score)
	local ret=new_screen()
	ret.wait_time=1
	ret.image=217
	ret.text={
		"You did it. You paid for everything.",
		"The asteroid is now really yours.",
		"You do know this though.",
		"Junk hauling is in your blood, and you will never give it up."
	}
	ret.next_screen_action=function()
		 next_level()
	end
	return ret
	
end

function level3_start()
	ret=new_screen()
	ret.image=216
	ret.text={
		"So it turns out if you aren't home, bills don't just get paid.",
		"It's going to cost 20,000 credits to sort this one out.",
		"You know what to do."
	}
	return ret

end

:: sfx.lua
--[[pod_format="raw",created="2025-05-20 16:55:03",modified="2025-06-05 16:14:12",revision=269]]
channels={
	ship=5,
	enemy=6,
	engine=7
}

sfx_channels = {}
function play_sfx(sfx_id, channel,loop,restart)
	data = sfx_channels[channel]
	if data and (restart or false) and data.sfx_id == sfx_id then
		return
	end
	
		sfx(sfx_id)--, channel, loop)
		sfx_channels[channel] = {
			sfx_id = sfx_id,
			loop = loop,
			start_time = t()  -- use time() if preferred
		}

end

-- Stop SFX only if the given sfx is currently playing on the channel
function stop_sfx(sfx_id, channel)
	if channel then
		-- Stopping on a specific channel
		local data = sfx_channels[channel]
		if data and (sfx_id == nil or data.sfx_id == sfx_id) then
			sfx(-1, channel)
			sfx_channels[channel] = nil
		end
	elseif sfx_id == nil then
		-- No channel and no sfx_id: stop everything
		for ch, data in pairs(sfx_channels) do
			sfx(-1, ch)
			sfx_channels[ch] = nil
		end
		sfx(-1,channels.engine)

	end
end
:: ship.lua
--[[pod_format="raw",created="2025-05-19 15:07:48",modified="2025-06-05 16:14:12",revision=1889]]
function new_ship(position)
	return{
		parts={},
		_position=position,
		_speed=new_point(0,0),
		_mass=0,
		_thrust=0,
		_boost=1, --fudge number
		worth=0,
		acceleration=new_point(0,0),
		init=function(self)
			local command=new_part_command(self._position)
			command.location=new_point(0,0)
			command:init()
			add(self.parts,command) 
			self:update_ship()
		end,
		update=function(self)
			self.acceleration=new_point(0,0)
			local boost = self._thrust/self._mass*self._boost
			if input:button(input_lookup.lpad.left) then --left
			   self.acceleration.x-=boost
		   elseif input:button(input_lookup.lpad.right) then --right
			   self.acceleration.x+=boost
		   end
		  	
		  	if input:button(input_lookup.lpad.up) then --left
			   self.acceleration.y-=boost
		   elseif input:button(input_lookup.lpad.down) then --right
			   self.acceleration.y+=boost
		   end   
		  	 self._speed+=self.acceleration 
		  	if(self.acceleration:length()>0) then
		  		--play_sfx(5,channels.ship)
		  		note(48,5,self._thrust*5,'t', 10,channels.engine,false,false)
		  	else
		  		sfx(-1,channels.engine)
		  	end	
		  
			self._position+=self._speed --apply velocity
			self._position:box(0,0,screenWidth-tileSize,screenHeight-tileSize)
			self._speed*=0.90
			foreach(self.parts, function(part)
				part:set_position(self._position)
	    		part:update()
	 	 	end)	
	 	 	self:do_part_pickups()
			self:do_asteroids()
			self:do_pirates()
			self:do_bullets()
		end,
		draw=function(self)
	 	 	foreach(self.parts, function(part)
	    		part:draw()
	 	 	end)
	 	 	foreach(self.parts, function(part)
	 	 		if(part.draw2!=nil)then
	 	 			part:draw2()
	 	 		end
	 	 	end)
		end,
		do_part_pickups=function(self)
			local dimension= new_point(16,16)
	 	 	for i = 1, #game.free_parts do				
				local free_part = game.free_parts[i]			
				for j = 1, #self.parts do
					local ship_part = self.parts[j]		
					local result = block_collision(free_part._position, dimension, ship_part._position, dimension)
					if result != nil then
						local attached=self:attach_part(ship_part,free_part,result)
						if(attached==false) then
							free_part._speed+=result*0.005
						end
						return  -- exit both loops early
					end
				end
			end
		end,	
		do_pirates=function(self)
			local dimension= new_point(16,16)
			for i = 1, #game.pirates do				
				local pirate = game.pirates[i]			
				for j = 1, #self.parts do
					local ship_part = self.parts[j]
					local result = block_collision(pirate._position, dimension, ship_part._position, dimension)--fix
					if result != nil then
						pirate:kill(0)
						ship_part:kill()
						self:update_ship()
						return
					end
				end
			end
		end,
		do_bullets=function(self)
			local dimension= new_point(12,12)
			for i = 1, #game.bullets do				
				local bullet = game.bullets[i]			
				for j = 1, #self.parts do
					local ship_part = self.parts[j]
					local result = block_collision(bullet._position, dimension, ship_part._position, dimension)--fix
					if result != nil then
						bullet:kill(0)
						ship_part:kill()
						self:update_ship()
						return
					end
				end
			end
		end,
		do_asteroids=function(self)
			local dimension= new_point(16,16)
			for i = 1, #game.asteroids do				
				local asteroid = game.asteroids[i]			
				for j = 1, #self.parts do
					local ship_part = self.parts[j]
					local result = block_collision(asteroid._position, dimension, ship_part._position, dimension)--fix
					if result != nil then
						
						if(asteroid.threat<2 and  ship_part.fragile==false) then --todo: consolidate check connector better
							local cardinal=cardinal_direction(result,0)
							local key = cardinal.x .. "," .. cardinal.y						
							local can_hurt = ship_part.attach_sides[key]
							if(can_hurt==false) then
								asteroid:kill(1)
								return
							end
						end
						asteroid:kill(0)
						ship_part:kill()
						self:update_ship()
						return
					end
				end
			end
		end,
		update_ship=function(self)
			local unattached=find_unattached_parts(self.parts)	
			for i = 1, #unattached do
				local part=unattached[i]
				part:kill()
			end
	
			self._mass=0
			self._thrust=0
			self.worth=0
			foreach(self.parts, function(part)
				self._mass+=part.mass
				self._thrust+=part.thrust
				self.worth+=part.worth
	 	 	end)
		end,
		attach_part=function(self,ship_part,free_part,collision_result)
			local direction=cardinal_direction(collision_result,8)
			if(direction!= nil and parts_can_attach(ship_part, free_part.part, direction))then				
				local new_location=ship_part.location+ direction
				for i = 1, #self.parts do --check if this spot is already taken
					local ship_part = self.parts[i]	
					if(new_location:equals(ship_part.location)) then 
						return false
					end				
				end
				free_part.part.location=new_location
				add(self.parts,free_part.part)
				del(game.free_parts,free_part)
				self:update_ship()
				play_sfx(2,channels.ship)
				return true
			else
				return false				
			end
			
		end
		
	}
end
function loc_key(p)
		return p.x .. "," .. p.y
end
function find_unattached_parts(parts)
	local visited = {}
	local part_map = {}

	-- Build lookup by location
	for _, part in pairs(parts) do
		part_map[loc_key(part.location)] = part
	end

local directions = {
	{ dx = 1, dy = 0 },
	{ dx = -1, dy = 0 },
	{ dx = 0, dy = 1 },
	{ dx = 0, dy = -1 }
}

function flood_fill(part)
	local key = loc_key(part.location)
	if visited[key] then return end
	visited[key] = true

	for _, dir in ipairs(directions) do
		local dx, dy = dir.dx, dir.dy
		local neighbor_pos = new_point(part.location.x + dx, part.location.y + dy)
		local neighbor_key = loc_key(neighbor_pos)
		local neighbor = part_map[neighbor_key]

		if neighbor then
			-- If either side allows attachment
			local dir_key = dx .. "," .. dy
			local reverse_key = (-dx) .. "," .. (-dy)

			local this_allows = part.attach_sides[dir_key]
			local neighbor_allows = neighbor.attach_sides[reverse_key]

			if this_allows or neighbor_allows then
				flood_fill(neighbor)
			end
		end
	end
end

	-- Start from origin part at (0,0)
	local start = part_map["0,0"]
	if start then
		flood_fill(start)
	end

	-- Now collect any parts not visited
	local unattached = {}
	for _, part in pairs(parts) do
		if not visited[loc_key(part.location)] then
			add(unattached, part)
		end
	end

	return unattached
end
function parts_can_attach(partA, partB, direction)
	local key = direction.x .. "," .. direction.y
	local reverse_key = (-direction.x) .. "," .. (-direction.y)

	local a_can_attach = partA.attach_sides[key]
	local b_can_attach = partB.attach_sides[reverse_key]

	return a_can_attach or b_can_attach
end
:: start.lua
--[[pod_format="raw",created="2025-05-20 16:44:31",modified="2025-06-05 16:14:12",revision=777]]
function new_start()
	return{
	sprites,
	init=function(self)
		camera_helper:set_camera(new_point(0,0),true)
		self.sprites=	fetch("./gfx/0.gfx")	
	end,
	update=function(self)
		camera_helper:update_camera()
		if(btnp()>0) then
		 next_screen()
		end

	end,
	draw=function(self)
		cls()
		spr(self.sprites[192].bmp,(480-200)/2,20)
		print_centered("Time to haul",200,8)
		print_centered("Press any button",220,({7,7,6,13,5,0,5,13,6,7,7})[flr(t()*10)%11+1]) 	

	end}
	
end

:: .info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE0OjE0OjE1Iixtb2RpZmllZD0iMjAyNS0w
Ni0wNSAxNjoxNDoxMiIscnVudGltZT0xOCx3b3Jrc3BhY2VzPXt7bG9jYXRpb249Im1haW4ubHVh
IzEiLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRpb249ImdhbWUubHVhIzEiLHdvcmtzcGFjZV9p
bmRleD0xfSx7bG9jYXRpb249ImxldmVscy5sdWEjMTEiLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9j
YXRpb249InNjcmVlbi5sdWEjMSIsd29ya3NwYWNlX2luZGV4PTF9LHtsb2NhdGlvbj0iZGlyZWN0
b3IubHVhIzEiLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRpb249InN0YXJ0Lmx1YSMxIix3b3Jr
c3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJoZWxwLmx1YSMxIix3b3Jrc3BhY2VfaW5kZXg9MX0s
e2xvY2F0aW9uPSJpbmNsdWRlLmx1YSMxIix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJo
ZWxwZXJzLmx1YSMxMTQiLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRpb249InNoaXAubHVhIzEi
LHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRpb249InNmeC5sdWEjMSIsd29ya3NwYWNlX2luZGV4
PTF9LHtsb2NhdGlvbj0iZ2Z4LzAuZ2Z4Iix3b3Jrc3BhY2VfaW5kZXg9Mn0se2xvY2F0aW9uPSJt
YXAvMC5tYXAiLHdvcmtzcGFjZV9pbmRleD0zfSx7bG9jYXRpb249InNmeC8wLnNmeCIsd29ya3Nw
YWNlX2luZGV4PTR9fV1d
:: [eoc]
