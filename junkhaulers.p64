picotron cartridge // www.picotron.net
version 2

:: gfx/
:: gfx/0.gfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE0OjA1OjM2Iixtb2RpZmllZD0iMjAyNS0w
Ni0wNCAxODo1ODoxMiIscmV2aXNpb249MTk0Ml1dbHo0AOSIAAAK4QAA8Sh7WzBdPXtibXA9cHh1
AEMgEBAE8FYHEAfAF9AXwAcQB-BWLGZsYWdzPTAscGFuX3g9LTAuMTI1DQAQeQ0A2jYyNSx6b29t
PTExfSxJAPAhIB8eUB5gDlYOcAYfHB8QHxwGMA4QBi0fEC0GEC4GPRw9Bh4ABr0GEAYHnQcGEAa3
CgBHPRc9BwgA-xQXLRctFwYAHgYXHRcdFwYuEAZ3BhAOMAZXBnAOVg5gHlAeIKAALv8GUA5weXAJ
FRkVCWAJdQlQCQUZFRkFCAAOIUAZCAAsGTAIAK8lGRUZJSDZENUAmgAn8AXwFHhgGBIYEhhAKBIY
EigwKBUYFQYAIR8dBwAVHgYAsRgOFR4VDhgwGA5VBgA_BTsFCACfUA8eUA1gHVAdLAEoMBAWFQIA
EiAHACMWAAgAKxUGCAArFgUIAA8iACoTABMAIgUgEwAvBRDCACfwFDAPERAeEA6AXxCADVwNYJ0g
DgAdfB0ADgANDA0MXQwNDA0QCgAhDTsGACcADg0AFx4MACcOAA0AFRA8ABMATgCgIJ1gDVwNgF2A
Dm0AHzCdAi7wGQMwAw5wczAOEBNbExAuEwtfGwsTHgATCw1bDQsTIAMLDQs9Cw0LAzAKAD8NGw0M
AAIBIgATIDQAgQAeEwtdCxMuUQBBDjBzcGMAD0oDLhIZSgPxBVC9EA4ADTYfDzYNAC4NNhw2DR4Q
BwATMAYAE5wEAAYUACEQHgcAIS4ABwB-AA4QvVAOUJEANAB7BBFXdgRgFw8cFw0XeAQwF10XeAQC
WgQGagQPfgQCGn18BCEXDUQAD4AENWDwAw8REA4CAPEDQL0gDg07Hw87DQ4gDTscOw0wBgAhIA4H
ACMOIDcBBhAADyQAADK9QA5NAC-wA5MANkA6Hw86bwBROhw6DTAGACEgDgcACJMALzocJAACD5MA
REA4Hw84bwBROBw4DTAGACEgDgcACJMALzgcJAACD5MANQU5BvAGULYQDgAGMBYQJgAuBiAWEDYe
EAYQDgDwAAYwBgAWECYQBjAmECYQFiIAQBAmMAYMAAEcANAmEBYQBhAeNhAWIAYuDgBvMAYADhC2
_gIwL-DwPAD-------------CQWfDdDwBA7QLrAe8FAesC7QDgAPbwov-wk2CgAK0AmwChAJwBkG
0AkGAArAGcAK8ElTACifdwrQCvABCvBHRAAo32YK8AAK0ArgChAK8EayAZ8P7gEy-wxQuBAOADg7
OAAuGHsYHhAYGz8bGxgwCBtdGwgGAACxGBs9GxgQHhh7GC41AD8OELiPDDH-OgdvFIAOZGAOJC8f
FDAuJB0eJBAOVD4kAA4EDqQNAEQNFA40DRAkPSQOFA0QFB0uFA4UDSAOBA0_NB0gFC5EDUCEDVBE
TWBN8AmEACfwHUAvFMAUIAQOUAQO4AQgDuAEECTQDx8EQATgBA6gBCAEEBQQFBANBGAEEBQgBgAR
DRQAYNAUABSgDRQATyTADQTCDiof8DwA-1TxTwAZAHcAGRAZBxU3FQcZEBcVBwYXBgcVFxAHNTc1
BwAHVRdVFxM1FzUTFxMVFxUXFRMXRQcVB0UHAAdFF0UHEBclBxUHJRcgCAcFFxUXBQcIMBh3GDAY
AAcFHxwFBwALABc_CAA-YFdA6AApDzwA-5HgJwrgCtAqsEqAioBKsCpOBi-wOIsAKQ88AP------
------__j2YPHwTQBPBpfwApDzwA-------------------2U8jIBPD-AQDxDocPFfC2Dg8U8NyO
IL5wfnCeIL7wAj4wPkA_ID5QCADzMfAlDo8ZDhAPFK8ZcH1wnSAPFK3wAj0OEA49DjA9DhAMLQ5A
PQwQDD0wDj0M8CIOrQ4QDJ0MYA59HEAOnSAMnQwtABFALABRDA4wDC0uABIMLgDEDBAMzTAMrQ4g
vSAMWABxQAwtDhAMTSoA8AQOPSAMTQzwFB6wDk0MLRwOEAw98jDIMD1MLQ4gPXwgDD1sYQAxTR4Q
jQAQIF8A9g0UHsAOPQ6ADC0MQD0gDi0MMD0MID0MkAwtDPAJMwAibRCSAJIgTfAkDj0MHmAwADAM
LQyBAAAIAAgyAAGbADBtHD2aAHAQTQ7wJA5tMQAQMKgACGIAZgAOAA7wBWYAEM1jAJoADE3wJQ5t
LDBjAAAyAEaNDvADLgDQLRx9DBAOjQzwKAx9DD4AASwAEk2NAEeNDPADjQBgLQ4AfQ4QFgBBKA6N
DCwAFT1XABmdVgBRDBAOXQwrACArDAkAIa1AiQEBKgAwLWyQcjIoDjBbADAMIF3pAFAcTfAsDFgB
YE0MDQwdDDYAM00OEEsBEACbAAhlABFAUAGBLQwQTfAsDj0LABKwaAAnDC0zACoMLTQAANsBECBE
AlQjDg1MTTcA8QYMAAwOTQ4QTQ4MDjwgDD1cDoAMPTxuABhMbgAAXwBD8CMMrTcAQM0MEL18AnaA
DL0OEA7NKQAB2gByDPAiDJ0MDisAAUgAERyqAqaADgyNHDAMnRwgWABwQD0O8CIMjdoBELAWAPIB
PQwwnSCtDKAMfQxQDI0OMBQABCkA8AMOHH5AHgwOwAwODA5QDA4MQF4KAOAwjgwOsAwuDB4McAxu
DBgAYFAuDDAMLgoAAIkDIFcOJgBAQC4MYAgAIgweCAARQBYAESAGABCQFgADBAAxIAweTAAiDmAR
AGAODA7wRk1_AzBADH2cAREOawHBPZAMzRAOvWCNDPBGngB0QI0OQAw9QIcBEL0AArAMDjAejQzw
Cj7wKEIAIA5A6gABQgAkLQxDABHNKQCS8AkOAA4AHvAnTAAB4QJGDC0wDlEAAJgDAgIA8QEQDj1c
PRAOPXzwCU4ADvAmWwADTQMTMIMAED0JAjOgDj1nAUDwEC4QXwARJV8AAr8CBokAAF8AUy0OoAw9
xAFwDvAOHgAeEGMDZgkO8AtNTCkAGCBgADEATkChAAA1BPMELvALDgAeAA4ALvAJDA7wCgzNDOYA
ESCeAAOeAjOdDDCVAFAOffAKXjIAMPAl3V8AOA4gPV4AASkA8AhMTRAODH0c8AYeAA4QHgAu8CUM
zQ4gDrsAGSC_AAAuAHDNDDAOjfAHKwAzTvAlMAFBPQ4gTcoCB7cA8QkOHA4cDjAOvQwOQBwODE0M
DvAHHhAe8CgcAUgQDu0QsQAARgGArQygHj0M8AfdACEpTSUAO90MEGoBALEDEMAmADE_8CquBSEO
ICUAEUzXABBsDwMijA5wBUAOIHw98gEh8CtNALAMPV5NEAzdIAy9EBECET3tBEK9DPBF9QVgEAw9
UAw9KQIRIIEDAyMAcQwQDr0O8EX9ASAQTXwCQjAMnUBEAKEMPUAOPRAMrfBHBQEQQAYAcA4QDB0M
DVAFABIw-DYDHAAiHRwKAHUNDBAOHQwNAgBsIB0MDUAOGAAF2gbxGv83DvBRLvAdHvAkHvAdDA7w
IH7wfg7wID4ATvCuPhAeAB7wrE4wPvCrFwLwCxA_8EEO8F0eEE7wPh5M8FqO8DoMDjwePPBbVQHw
ADUcHmweDA488F0e8DQOvI0EoA7wER7wTh7wH9wOAPAM8BIe8Bce8CUO8B78By7wOB7wUg78C-Cb
HnwuzwHwB2wOLPCaDmwOHC4ArC4MDvB-LvACfjzAAzEeAJzFA2DwgA7wAV7RAxEcFwAQbAwAMR7w
keADQAweDE4IADFMDhwjAEEMDvCSywJwDA4cEAwOfBMAQG4MDnCCAhKKIQAQALEAMC4MDisEYFCe
AA7whEYAED4bAKAsPgweDJ4wrg8WDgAg8IEZADEeHB5XBBI_IwDSDA4g-gAMCw7wgY4MDlEAAwgA
oG4QfhAuC27wgRwlAARTABEM6ASAEO4LDAsMHgvgAEIMHhAeOQAwIB4QIgCiLhD_BAAOHA7wbkwA
8ADwAg4gDA4McCwODDA_AL44AAA6AGE1DvAnDA5FABAGOwXwAg5QHjCuQC4LDA4LLvA1HvAiCQEg
-gZHA2JeYE4LDgw0AGAiTgz_ClCjBPAEjiB_gI7waF4LDgv_BhD_AiB_IBcAoA4QjvBn-gYAjgAT
AGAQDnB_8GmRAPEFCw4LTgAOC34LHgtOAI4wDgAOII4aAHB_ED4AHgseqjXgQH4gDlB_8HnuAG7Q
jjAhAPAEDB7wW94QLgseEH4ADiA_ED5QnhQAUEwOXA4QOwHDAA4LLhCuIL4grvBqQAHwDfABPhA_
EF4QPjD_BAAu8JC_QP4H8GcOHAs_AD7LAQCFAvMR4O5ArgCO8Gj7CBAOIF4g-gFA-gLwaA77CA4Q
nhBOAA4CANMeYP4A8Gn7CgwAnhBeFADwBw6QzvBqDPsAHIsQLgBOEP4BkI7wa-sIAvAGID4QbgBO
AB7wFw7wUAwOLAAO_wwMFAHwDRAe8Az_AgwOgA7wSQ5cTQAOq2AOiw6w-gNQTM1JA_BTDH0MHQAO
GxxbDBAOMBsA8Q5rDRsMmw4gHA4M-QAO8E1cPQwdPA0ADqsATgAOi9U29QIwDvsHICz9ABzwTQxt
TB0MHR4A8QQAPgAeEAybAA6bDCAcPUyNDPBMAwUQLVUIBCYA8AEMEA4ALiAcC0wbfB48EDwtKgLw
Aw49DD0O8EQODRwNHC0MDUw9C6sAQQAuCw51AGEeAA4gDhxjAUCsDjwQUwWwHB4MLSwt8EBOjSwS
BDAdSz12AACUASAADKcA8BEAHiAsDhAuAG58EBx9LC0cLfA-DF0MXSw9Cw0rDQsdC7UAAJAGUIsO
gCw_mAHwAAA_fBAM-QAMLQ7wP0xdPFMAASoAAFcA0GAOiwxgjJ58EBz9AwynAPAYPB0MLQwdC01b
AA6rDAsODA4LDJsOUA78Cg4QDP0EDvBKDD1MDQxdPgDwCUsM_wYOIA4QDvwHHg0OEE0sDRyNDA7w
TQQFwlwNDE0ADjsMDvsCLLoGwBBsHtweDA4QXQ4sjaAB8ClNDA1MDVw9AA77CAwLDAsOIA4g-AcO
LBAMTQ4cDQxtDB0O8FMOLQwNHD0Q_wkOCwxwPA78BQ4QPKIAEA1UBfAKLA7wMx7wDg48bRAO_wcM
CwyADrwOTA4ATAwGsSwADgBOAC4gHgAuWAMBAgDwBfAfDvAUDE4wC-wAC1wO8AhMDkwOKgHwAPAA
fgD_A-BGDgwL3B5cDkcDcfABrA6gDhA3APAAMH4A-gTwRw4L3B5MCxAuEwARIAIAYQAOEA6cMJMB
AWgBcB4A-hHwSA5HBCELjAYAIRwQJwAhAC4CAFEOMF4ALkE5gv4VAD7wSQ4wNgBBbhBOEE0AYCAO
MA7wAi8AxP4G8HMeAF7wAC4AjmAA8ArweS4gDlA_IC7wAA4MHgBeDPCFDE5wPgAugwCwnA4cDnwO
8IEu0F51CdH8Ci6wDvBwLI4gDiA_EQDxAQc_HE5QDvBxHA5MLhxwHiByAjAsPkw0BXEwDvB0DjwO
cAUBhQBgIB4cDhweUgASbDsFoB7wegwuLA4MDhzQAPAXUB5MLmwO3F7wflwOHEAOQHwOTD5cThwu
DB7wgQwOLA4MIA5QHqySACA_LDEG4Swe8EceHEAOIA5cDswO8wXQHvAtDvBKDkAOIB4sLjII8AD8
Ak7waA7wGg5MDpwOLA5YBlDwaR7wGRwGUB5sDjxOJgPwAPCiDgwObE4cPvClHowOLBIAMKcujAcA
Yw0MDvCMPqwA0Q4O8JYe8P--rS7wtg5TB0B4HvC2EgAFAQCjGh7wFh7wjw7wFhcAExkiACBlDggA
8gVbDgzwSg7wFR7wWQ7wTQ7wWC7wtUoAK-_YuA5zMzIuNjkxNgEAFDfBDlYzLjYxNhYAAsoODwUP
Jx84OwD-XQhmEAcBAPFCHfEE8KTxBPCd8RXwk-EV8JLxF-CI8STwg-El8H-xLvB68S7wefEw8Hbx
NPB08TTwcvEEAAEAcRABABEAERARIPEJ8G-xBfAL8QrwbvEFcA8VYwQBDQzxBkDxCvBs8QKw7xQO
sPEE8GrxArAO3QsA8Alo4QAhQH7tfkAhAPEC8GXxAIAO-Q6Q8QELAPAGMD4ADv0NXkDxAvBi4WAO
-RiQ4fBgCQDwFBcOkOHwXvEBEF79GE5A4fBd8QAwDv0iYMHwXeFADu0O-REODADAwTAO-SkOQLHw
W8FACQDxB8HwWdEQLv0qLhDB8FjBMA4E-S0OMKELACH9LgoA8iGRMA79NA4wkfBWkUD9NECR8FSx
EC79NC4ggfBTkUAO-TgOQGHwU6EwDv0nHu0OMHEMABAm1gsAQACGUKEwDg0O-SQQAIAQLv0BLt0_
-QIFsN0uIJHwUKEADv0EIAAhEA4WAEL9AUBxFgAQAGoGARkAVA0uHQ6NHAC3TpEwDt0OYA7dDpAU
ACxA7RIA8QIwDo1eQC7dLnBOPQ4gHu0uECcA0Z2Q-QTATUD9AAQOMFEmAOEdLh0ukP0EsC4dDkD9
ARYAEXEKDK8dDoAO-QsOgA4NGQAWTK79C55HAC-9JBEADSC9DtIAjzAO-QEOEC7dGQAMcRAuPQ4Q
bV4ZACFevRgA8AAADhBR8E5BMA5tDhBtDoAIAQE6AB8uFwALsT0_EB0OIA5wEQ7dAAcdbR0AELAb
ABvQGQAjLiAZADDgLj38DRROGQAjDkAZAD-wAQ4aAAI-DQ69HAADQA0OYA4fAGHdDhAhkBEhAEYN
Pj1_IwBdTWAh-QEdACFPMR0AcD0OAAEuAQBaAvADIQAOUA4hDj0uEI4NfhBB8FEh4AHyBUA9DmEO
-QZBDhBhDj0uQO4QIfBTGQCYTWEODR79A0EgGQDyAV5ATX79Bg4NDoEuTS5AzjAVAIQwDv0VDoEO
bRIA8BkAARBeQC6t-gBtrk1OQM4QAQAh8FNRMC5gDq0O4A79BV5grhBB8FRBEgAWvREA8QNWIdAO
jQ5AgUAO-QGu8AEh8FgRABAwOANCAY4NDhMAYQ7ADh0OXScAQO2_8ABcAEBYQbAOexNqDt2u8AFR
DwCQQfBboTAOjS7gYwGQrmAhMHHwXaEwdwAS3Q4AIF6RcwEyIE4QEQBAYfBhcXAAuRAO-QZ_YFEw
UfBiEADwFUHwZXEQLu0u-QZ_QHEwMfBmcUD9GE5wcTAh8GhhQC6Nru1_YA0AUGpBYA6NWgJTfkBx
8HQNAPAB7X4wcfB2UTAObS4QTiBObXgMQHEO8HcSAPAAQE1gDm1_QGEO8HlBMF4dCwUQTXYJoP4A
QGFQDvB1QWC_A5J_YHFgDg0O8HQPAPASXg0OYHFgLvB7IRD_D0CRQG7weSFg-gWQYXAtPvAKHfBd
DgDwBYBxUB4dTvAKHQ7wXUHwDpFgDl0_ChUp8FsOAJFcoeDxAkAubS4OAJhdkeDBkJ1O8AcMAPAI
Hh0O8F-xD5Au3U7wBw4NLvBd8Q_QHu0NALE98F4BIPEDAEFwThAAwg0OHfBi8QLgDgT9AiAAAQ4A
kP0DXvAGDj3wW8UAcBAO-Qs_8AUPABEdDgBhAA6dTvAEPACAWx1e8AOO-QsQAFA98FtdBNEBI-0T
DwAZbQ4A8AJ9Tg0eDV4NHv0GLr0ODU7wAhUAR-0fPt0LAEBe8AEOTgNx8Fo9Dv0bLhAAYz0e8Fn9
IAwAwC7wWG0OEP0TDhAubXgBSG7QHk0UAJBwbsBtLvBYTQ56BdKtPv0DDhBOHS4QzsBtJgAANBcS
DhYAXw4wDm1OGAAMNDAOjRgArkAODQ5tDg0uoB4bAFHNHpAOjRYAAAEGACgAAxoA5BAuvT6ADm1O
8FhtLhAuFwCRLjAO3U5wDl1eFwACMAAi-QQYAPEDXmAOXU7wWW0uIC5dDhDOTR4gFgDyA0AuXT7w
VR4gbS5ADl0O4D0OQBcARI0u8FYWAHAQfkAuDQ5A3hMDGwBQVD4gnUBvBfAABQ8WNQwFYC6Q-QFe
QG1OGQAxTQ49GwAZVRgAwE4QnS4QLh0OMLUO4BQAIT1_FAAATwGoHi1ABTwlHAUMBRoA8AAuEE5A
TnVOcB7tfjCu8FYSAJDwAQ4MVQwVDAUEA0DtfhDOFwDwAI0_8AEFDKVgLu1_EL7wVygAgWBlDhAu
dQwFFAD1B57wWU4QPQ5NLmAFDAUMBRwFQBwFDFUbADAADp0aAEE1DAVOMgBhzZ4QjvBaRgCABQyF
DAUwDiUXAGK9rhB_8FsXACA8VRcAAEsAARgAQW7wXT5GABFORwDgDgUOEE5gTn2uMC7wYi4ZAPAl
sAUMBTwFHA7QDg0_bZ5QDvBjLhBOLU5wDiCVDiAOkF4d7lAO8FwNDj0OkA4NXmAFDCVwZS0AZP4A
8GIObRQA8RBgDhwFDBUMDtAOHe7wYC4dThB_HV4wDgUORT4FDhAeHADyATCuHc7wYB5NYA4EfV4w
DhzyAAAZALAOPA4wDgStzvBgTlMGcV0eDV4wDrVWAnA1DjAOXQ5NOQAAKQJgvV4wDuWAXQVQYC4g
HkAPAFMMFQyVDhMAsBAuQB0uHa4wLsVOKAZATe7wYicAEB38B3AQfmAO5QwFDQCQPQ4QvvBkDjAe
3gIDGwBS9QAOMA4cAECu8HEuFgBjTpAO1Q5QFQBRfvB0HiAVABTlFADzBCBu8I4elS5gDkAu8JuF
DvCuPkWADAYBAB-72woVD0EbBwcBAPMZG-EG8KLxBvCbEQDxEAAh8JABDxMxDvEIDmEO8JDxGPCJ
8SMO8ITxJOgK8BMtDvB68S-wdPE48HDxOPBv8QcPFQEdIT0BAA0BAA0QHQEg0ArwFgEO8QbwCgEO
8QrwavEI8ArxDPBo8QTwAg3wBfEG8GbxBPAY8QbICvYqPUB9DxT9ASANYD3xA-BhAQ7RDgGQ-Ang
8QTwYPECMD0ADfwJbXDxBvBc8QFgDfwVDbDxAfBc4QANDQDwCtENMA0MLfwWPQwNYB3h8FyxYA38
Hw1ADSAMAPYHUB38Hw0gDUDxAPBYwWAN-CYNYOHwVgoA8gqRDQENMC38Jy1ADdHwVpFgDfwqBAxg
AQ6hDQCAKw0QDTDR8FMMAPAeMQ1QsfBScQ4BYPwyDTANALHwUoENMC2cLfwlLQAdAB2R8FJhYA2M
LRAN-CdgDQDwEA1QLUwNDA0wDfwJDSwd-Ag9IKHwTpENYB1MDVAN-AjDAMMJDSDB8EyRDXANTGAT
APAACA0wwfBMcQ0BEC0QDTytFQDxDy38BA0MDUCx8ExxMA0cEA08DRAMBPwODZD8Bi1AkRYAMAwd
ABcAtA38Dw0QHVCMDZxNGQAAFQAwHw0wHgAS7BQAHS0SAAMmAEYtEC0cFACnHA0ADfwgBAwwLBQA
cxAN-CENIA0TAMBKYUANPBAN-CkNEOzqABRxEgCFbE38HQ0Q-AETALkNAA1MHSBd-AVN7BgAAM0A
jYAd-AItQA3cGQC-ED8PIA38Aw0QKxAeAAAwADswHQBeADsgHbwdACEbUB0ALytQHAAAIQtgHABJ
C3AtjB0AEA1EAWmADfwEsA0ZABIMdQEQgDYACBsAEEF4AQA7ARBcuQEVBRwAoQwNEHHwSiEOATCy
EoEQbA1g-AYNkG4AKAQQOQB3bG38By1gvDYABRsAP-wXDRkAA9DcDTxdDB2sDSAdEA2sEAAaTR8A
MuD8DhYAYFHwTEEwPRQAIcwNFQAwLaxdSAszAQ4BLQCRvB0AvAAcLfwLk08QvHgUcg0QMQ7wTyE4
AGOcDSDsEA0fADAMDYwVABBBHgBQXRANjB0cALacDfwADRAtDB18XRoANA1A3BoAMG1MfRgAFQEM
AWKcDVANnDBUAEEsHVxdcQBQAfBOQRA6AIAtcAwwDCAtbHMBcC28DRBtLJ0-AIBBkKwEDfABnIEB
AO0D8wQsXQwNAA0QIfBRQZANrA3wAQ2MGwAR3RcA8gZUEZAN3LANDA2cDQwNbA1sTSDtEEEWAGDA
-AYNbE3tAREMzgDwCQ3wU0Fg7F0AXfwEHXxNIA0AvSBB8FQhDm4EEAMCA6kTTfAEIfBWYQ0wEQBB
WEENMN8DMAANbBYAoQMNHA2sXSAN0A2hCxFgTgISEBwAYAQNrH3wAhkA8BpaUTAtHC0gfRD9B4x9
IA0AHVBRDSHwWyEOASANIA08DZAN8AcNjH0QUakLAEUAYfATDWx9MA8AAaIC8RQMDfANDYxdUA1R
HRBR8GBhQFwEDcANgA1ADYxdIA0QYQ0RDRcA8A8tPC3wCw1sfUBxMA0x8GNBYA1s8AsNTJ1AcUAN
8GYPAOAN0C8YgA0svUBhDfBvQX9R8QZgqjANHB0MbWCh8A0NHPBPQWANBEwWAEMMjQwNFgDzBlFB
QC1MLQDaEC0cLQxdAA0ADQCxDRoAIA1g3RWhAKpAHA0MjWCR8DYC8AgEDfBPMQ1QDQxtAKpALQyN
YIHwEQ08DUkAMI2qEIYB8AVdIA0wofARDUwd8E9BQB0sHRwNig0B8BQMHSwNIAEgsfARDWzwUjEg
-QcMrWCRAAEALfANDWzwUw0hHcgCIfwAWgKRcAEQgQANIBwNHQCyVEEwzQxNDF2QcWA0AfQFbPBW
QXAtDC0MbSABUMEwDWwN8AoVAIENHF0MDZDBMCQB0GzwV5EQ7RDxBA0QHXw8APAVCC1MHfBXcUAB
wPECQLwN8AtsDfBWgSAxAAEAASABIPECEA0QFwDGDVwN8FnxFQABIB3sDwA1UPwADQBgFH3sLfAJ
DABQW-EFEAH-AQADBvEA8AhsDfBjAQ0QDQABEBFgFQACJwDlVjwNEP0BAD0gDRwN-A0UAFPwCw38
EA4AkEz9C-wRLfADLZYAdvwzDfADDYwKAGLwV-w28AESAAAJAABZA2TwVvwnTZwWADAmDUAMAAAn
AwIOAMANjPABDVwdDPBX-CSkA1ENnOANfA8A8hMiLRDs4JwNDPBXbC38GEDsLbANbD3wV2wNEPwY
QPwBDbB8DgBxHA2sHfwHDRMAQEwNDE0VACAAPasEEfy4B1EDDbBMbRUALg3cFQAhEC0qAAKAAyCA
LZkYaPBZbA0wDRcAMg1MbRUAPQwNjBcAJC0QFwAAggPQDB38BS1ADUyN8FlMLdUENBwdbBwAY-wJ
HUBMnRkAJF1cFwD0BAwN-AY9MA0sffBZDQRMPQwNQC0cAPAALfwFXSANHI3wWQ1cXTBNqxkEGQDW
A11ADQyd8FkNbH0AjRcAIAJthABwDH3wWw1sTVQHERxEHwZrAAAhABE8HwAwfRB9GQAR3MEAQPwB
fRBpABBcAQSFDQxdEA3cDTAYABGdMAAhMF0wAADCCAAWAJMMnfBcDXxdYD0WAO0NDB3cnUBt8F4N
fF1wLRUAR4xNcE0TAAAbAmFiDWxN8AEUAIL8AK1ADQzwYxIApBwNrA0wLdytQB0SAMDcDWANAA2M
zfBqDYw7AAASAPAbgA0EbN3wag18PeAt3A2ALUzN8GbsPSANkA38AQ1wDSA8vQwN8GYNzE3QEQDw
AmAdICzd8GQd7E2wDbwNLA0ciFKi3fBjDfwBLQwNsNIFQGwNDN2GAPEFDC0cLXxNgC0sDSw9XD0A
Lay98GVHAQAEAFNcLbANPAwAETxzCS_s3R8ABAD4BlcMDUCc7SAAOCwdDCIAAPEBAKkBYzzN8GgN
DBYARQRMHQwkADBdDA0vAWYQPL0M8Ig5ACEtcBUAU43wjSwdEwDgHXANHA0QPB0MTfCOPSAUAFAt
kA0MIKsBG-8BAB_p1wsm8w7xCB8V8Z7whg4B8CAB8LYR8BoB8AMR8HYR8BkBDgoA9AVNEfBXEfA6
EfACEfBWEfA6DxMPEAwAARUARAVh8DoMAPABBAEvExENAfA6EZAOAvAuEYoSYASRMCHwMREAoQHw
LRHwAiHwAbESACDwTSsA8BMBwTAB8DIR8DcRMAFwITAx8FUR8DYBLVFQITAxMCGwgVARKwDxADQB
DZFQITAhQAENAdABoD8A0TYRYAFQDREwMfAGMXBEAPAuNoFgIUAh8AYNIfA7EfA3AR0BDRFgQTAx
IBHwADFgEaAB8AEOAfATEfA3UWABDRENEQBRIBHwCxGgEfAAEhgAQERhEEEtAHAhgAHwDQEOEwDQ
OQENAfAAQTARYAFwMVcA8QglHvACIUCREAEwARARUAEPEgFQISAxIIEA8QokARLwCTEdAR0hMDEA
EVAOEVAhIAEOAhEQxQBQJQHwCqHdF3FQAXBBAFEAMwDCQRFgkYAhUEEwAQ4BEgBAOEEwEVwAUwAB
gAFAGgAi8DQYAKEgIQAxAJEwIeAhEgCgMTAhECEQQQCBMOgA0CFAAfAgEbAR8DMRQAEqAQAcAMHQ
EUCRABFQEfAfAQ0bACMwITUAYBHwAdFQEZQBIjhBlgagEEEQAZAhQDEQAekA8AsQDQHwESEQMTAB
DYEAIbAOAg4CDjAxAGFQITQA8AIQAfASESAxQIEQIRABIBEQLtIAcGFQIcAR8B5nAPABICEQAVAR
QDEAIQAhEBEAQXEAgiARYBHADQ8QIgAQUBoAIIEw5xhyUSBBAKEgETwAgTQBMEHwIjEgmwDzCDMh
EDFgEQABDQENEV0BAAFdIT0RDZFwHAAwAEFAKhnxEQG9Af0FAQ1B8DYR8C4RcCFQMQABbUF9QU2h
IHEAIfAnFgDwFxFAMSBNAQ0PEg0FLBEtEQ0FHAUNAQ1BBR0xDQEgoSAB8CQR8C4BYwHwICAhQB0B
HQEMBg8WNgwRDREPDQ8WNg8NEQ0BDD8WBg8NIQ0BMGEwMfAjEfAyMRAxAQHwARAxDQEMDxY-DR8W
DCEPDQYLAFAPFg8NEUUAMC8NDzcAUDEQgRBRNQBULhEQIQACAPEPMQ0BDQYLIQsPFgYMAQwGCgwh
DAoGDAEKBgwhBRoxqQEGNQAgYQAGAGIBLRENBgooAPAIDAYKEQ0BDRoMAQsKDDEFDDEQERARACE9
GuLwIxGwAfAXAYARUEEAAToAEB1JAWAaDQENAQs9ALoaDTELCg0BCwpBEDkAAG8AAAwBAzcAGD01
AO4GCgwBHQEaDQEaBRErBTgAAAwAAtwACjgAIxYMfQBwCwYMEQUWChkANSABQDsAEDJvADQhIAFx
AAGbAGAMBgoFIQvfANAGCw4hCgsxECEgESAR1AEwOREgSAkALADwBXoNEQsaCwEMGgsRCwYLGgEN
GhENRgLwGC0R8C8BDUEN4Q0BLQEMBhomCwwdEQwKBgoWCg0RDUoGCgVBkAEgIR4B8AfwHxHwLyHt
EX0BDSsMGxE9AQwLDBsNMQHwDksMIQ3xCvAdEfAvYQ1RDQENgQ2hDcENsRXxBQ0BFwDAKxEQsQ3x
AQ2RDfEgEADwASkxEFEsGxEdDAssIQwLPA0GB4ARDQwLDREsCwQBEAzNAvACLAENEQscEQ0RBTwR
DVwx8ACJBPAR8CkdASBBC0YLEQxGDBELNhoNAQoGDRENFgwBDCYPDwr4AQBCAOAKBgshCiYMIQtG
CgENVkcFAz8AcBEwMQUaCwwxAfABDAobDAsKEQwKCxwLBgsBC-IAAH0B4gobDBoRCxohCwYLERoc
0gGwCxwLCgYLARocFTHBACAqAUcAUA0RCwoLHQDxBRENGgEMBgwRDAYMARoxGg0MBgwhNwIBbwEC
rAJwCgYBDQYMEYkCIBpxRADBED7wBCEwMQwaDRENRwBxDCEaAQsGDUYAMAsKO0cAQAUhDAaSAGEL
CgUBDArDAiAhGkgAYVENGgsMUUcAAHYEUPAEAQ0BTAAgDCFLAFAKCxEMGjEAIBEFNQCiGgYaCwoN
DAYLJZUAMQYKG0wAQQsMBQG5ACAhBYMA0goGCkFAEfAWEfAOAU6cADAKDDFQAEEaJgsNBgDwBBEL
CjwLCg8QDAo2GgwBCgsNDBrgADELGiaWAKIBDRYLERosQVABRgBwIg7wBCFAMWIAEg2YACAcChIB
EBvrAcALBg0hCgYNCQYLHBskAQC0AAGHATELLBpVATULCgYsAZAe8ARxADEMFgy-AgJsARAKQgBR
UQsKDSHdADEMIQ1GABEh6wMBgQEARgBSIRoRGnHWAJEhDTBxAEELWgxAABANbQERDEAAQBodBgp3
AVANAQYLMecBEQuwAYURCxobGhFaMT4AUBFgUQw6egABZgFQDQoNUQV_ACIGAX4A8AANAQoLQRsB
CwoxCgshDBaXA0MKGwoLQADzBidREGEt8QANUQ1BDRENIR3xBRDxAxsAAIgGofEKDTEN8RINEcDy
APEEJhFg8Q0NMR0hHfEAkAEQgSCBQFUBECYUBmAhADEwAZCQBvAIIRAxACHwAaEdCW0FARAhQBEQ
IfAJAaBAAPAQADGQAbABDvACARDBDQkNGR0ZHQmNIaABIAHwCgIBkIwHAIgE8ApwUQBBIAEMAYAR
QAFtCf0DES0BDVHAAfAYcwQBogbwEKEwAQ6AAS0BEAH9AAEPFA4FGAENDhgkCBQYBAgxoCEqAPAO
ITEQgTAhYE0RIAENQU0RbQ4YBRgVCBUECCQI1A6yBFIRAGHwFigAUCARAAEdkwXwAQktGTEdCX11
GPQNCAQFISDRH-AaYfAVEfAhIVARQCEAAQ0JPRk9FQ0VHQEFHgUBDREF9A4IlAUNESBBIHF6CPEM
AAHwDyEAIXBBAF0BTQH0FhiELx8KVCEwURBhHwBQDxEN8A0UBvAocRBN9BYvH0RXBAgEJwo3NAUh
QEEgMfAUEfAADQHwDCEAYRAREDEQHQEO9AUIZBoECERHBAgECi8A8AkHGggEJwQIFA4hMCEAMfAZ
EfAdIRBhACGeCPESDQVkCAQoNAikRxQIFCcKFwoIFAcKBAcKBwQIBBcEGAQXOAAwEEEAbQBAERHw
HPMF8AYxACEgQQAdBQ8ZNAgEBzQINAoHZHcxAOQkBw8PByQXRAgEBwpEBzsAADMAcUHwEBHwG7Ej
CPADLQVERwo0J1QnNBcKFBcECGQXZQFQBAcKBAiuAAE3ABCAJAKAMfAPEfAaoSC5BnEBLRQIBEcK
lACgVCcIFAgECgcUJzIAUTQXZAoHQAByGAQOIRABYDsA0A4R8A8RcCFgAUAhcBE9ABAnLwCAFAcK
CFQHCiTeALAIN2QKJ0QXRBckDjMAEAHPCfAGAEHwDRHwDwGAAfAKER0BJCcEGCcUXABwVCdEFyQ3
VFABcAoXNDcECCEUB0AwIUAxMQAgIAEfCLAQEQAxEAEdASQXRJoAMBdkF2gA4TQaJzQnGgckChc0
JxQIQAEgwDHJBREeDAABOQBBAR0BFPsAc2QIBBdUChcPARFEsgAACAAQNPkAEA6GB1Ex4AHwDD0A
MBEQYcMBgB0BNAeUCBc0EgGhCgQIJBcECAQYFCoBATsAoAQYBAoHNAgRQCGVAxAeqQmQ8QAdATQX
lBdkbQEBCwHxASQYBBc0BwQYNAoXJAoHRAhqACDwHDAAgEBxABEgIQ0OKQAwlCdUEgIB3gAABABS
NAd0V1QtAGEQETAR8BJhAIABEHEwASABDdQAAQMB8AEkJwQoFAoHNCcUNxQXCiRH6gE0V1QFOAAQ
IVoCkh8BECHAARAhHVwAICQqCgFxCARXRAcKF20AMWcYZLADQBFAIRAGCxASzwdBACHQAXMBICck
lQBRZwQIFEfUAOJHBAikWBQINAURMDEQIWMAERaPCiAADnYAIUEAUgJwZzRXVCcECD0BoAQHRAgU
KKQIFBgeA_ERQCGgEfAEEfATEV0BEDcAMgEQMXABsBQIBFcECIQIZAiUOgBgCHQoJThBUgMwEEGQ
yAtkBBHwERF9MwkgIRA1APEBDiQIVAg0aDQY5AgUYRjhID8CIBAh5QNQEAEJLTHHDBAgZwABLwDw
Ag0RRDj0Ag4hFRgEDkENAQURWQUSATUAAK0Ekg8BDQsdET1REM4A8A8AQRABLfQADxkEBREOMQV9
Aa0BDZFwASBRABEAIUCOAIDwDgEJBQ3BDccEATIA8AQxIAEtAWQVDkUIDi0BPRGtofAFqyAFMACQ
DQENCw0xUEENfAsB8wOxEFENARUOFQENES0EAPIAPUEAcfABAVAhMBFAERARNwBwDAENBQ1hDe4L
ADUA8AYBIBEAIQ0RTfEF8AYhIBEQARBhAIGSBQIsAJAJHTENOS0BAEEtACBwAZELYD2xoGEgcQEK
RRCRAIFXAKA9ARANCU0JDxENLwPgIQAxgAEQcfAFkSBRADFeDEAwASCBrwIwCwEdSQxACZ0REJsD
oAoREDFAwSBBADG_DTEwEQDJCyHwGSkAsQEAAQkDPQkDCV0BqQEAVABwIaAREDEwYScNEAA2ADER
AGGlAhQhGAHRCwENAQABAyk9AS0BLYoAErA0AGBBAAEQ8QKDITAAYQBKBBkxMwByfQEAAQ0hHWwL
YDFwASAhkIUBIkEQXgEAAgAACwdBkRBRAI8G0AsBCREJDQkRAw0RPQNUCwKIASAhINgNADwAIBFA
zAABTgABaQEhAQLfIhAe2wIGeQAASAyDCS0JPQkNABFBABBxZAcANAEhQCFLAQJBAJARIA4CHgFO
AjGOByVQAT8AsQkdEQMdAxENER0gbABQEDFAMUBvAQApABBBvwMArgIA7QBRIA4CDhGBAAHFAgDx
BQDFALAZDQENAxENAAEDHQYcAC0AAAEBAKABSAFQARBHAAA4AYABAC4RDgIOAAQAAkIDEGFKAOEM
DQEALQABLQENCU0BAPgAIDARqwBSMAFQIQBFABJBXAGQAFEQAQ4BTgAe1AVAACFgAUAAIA8t7gEi
fQEzAUogIQBBOwAwMDFgAwJwXgIOAB4xIC4EEEA0AwAkAjBdCQH1AxFAcwACOAAmQDFzAAHSAADH
AaQRIBEOAS4QDhARQAAC7wAAuQggDRkMABEJYAMTAEcAMaAhAM4C8AkgIQARMAECEQ2BAEFgEXAR
ACFgEXBR8AEdCKCwMU0RHRE9ECFQOBFwAfAAMRBRMIoDEBEMAUAQQWAh0gRhYBFgcfAAMAABKAKg
HQkRDQEgHQEQIXsNMEABUPUAAHMIUPEDAB0BfAAwACFQrQgBCAAwQKHgjANQLQEgEV2qDcDhLTEd
wQAxEGGuEQBmDyAhUHMCAAwAQSEwwdAXAhAJyAIhIFHOACDxFSwAEL7bABCBHAExACEguAGyUBFA
0cAR8AoBXQHvASDwFuwFcAEeAQABfjEsAABuBwAsAPAB8AExAIHAEfAJAX0RECFQEaIQIABBRgNB
EFEgAYUDIBEA8y8AagEggRBqABEBHAAgEUCDEfAJcdAR8AgBrRGAERBRAOEA8QQwEQAhPhFOmgEx
oVABTAAxUQAxLAAAsQAQATAAIN0xngnwARDxAwDxBhAhDQEAPhIuAgEgEUENgRBBCQUQMYACECA9
ARFRCgAAQhLxAQcB-QEBQCEwQTCRAFEQ0SCZEBSeAwMANQQACAIAPgAApAYxIQAeQQShAbAR8AAd
QAG9IUcCQREAMaCzBXJAgSABMAHOPQACDxIREcACAKkJAIkR8QQBAHEAEaAR4AEdMAF9AT0RHQFQ
PwAhAHF8AhBBbRAx3jEAsgMEsgAAEAXwAgAOCB4hEIHQEdABHQEwAQkNiAUAhh8QEUAAAL0PAEcM
YAAxIIEQUUoxAoIAAD8AIgEQIwMARwBSARAIHgiQBtLQEcABLUAtMRABPSEA8xEgAQAmBQCJAVAh
IJEQUVYwEE4oAwVJAABgBJARADFQXhAREGFBAACLAFA9CQ0JDfsPACECMCBRIJMBIRFAkwBAEGEg
UQkOggEeAA4CLjEQlQAApgESYdgAcEABDgguAg6SAABPACAJDe4LEAEJAwA7EhBQAwtQMQBBDXGG
AlAwETAhEO4nUR4AAT4B5AQRIaIBAMUHAk4AMA4YPk0AMiAh4E0AMp0BAEoAEEDCARExlAQQoQIC
ER1kAEAQIeAeCwAgIVDID6CQDgheCA5QEfAA2QA0QAGNPQAiUEFpBUAgARCheQIRDaMTUwDBAA4R
ZQEwIQDBYQGAQC4IDgAOCF4vCGrAPTABjRFBACJAUaYIIA0xfAAiAPEPARBxPQD2AgAxMA4IHhA_
AC7wBRHQLQEguwASUT0AIRCBPQAhgXDwBgCDBxCQtgD1AYAOCA4QDggu8AkR0AEtEQC3ADARMEHD
CkAAIRDRjBIwMBHQ5AQRIQgBIwEQNgIRMPQAECAWCWLQET0AAX0YAQEcBUGAISBxcwABsgBBDaEA
UVUCMRENAdMIAOUBAOsBQDEwPggQMxAeJAkiAAG1ACAdEeARAEgAcBBxUBEgQUBaBQBUA1EBAPEI
EFICApMCA4gAIVAeOgESDkYAgQERHQABHVEQ9xKAACEgsVBhEAFhEmJgARDxCBD6ASEBYMoVAD4A
RhARMB4_ABADiBLwBEEAER0BQPESADEQ8RMgESCBIGGPAwAiDRBAMgEBKgBhCBEdACEN3AQgwQD6
DvECCxDhAMEAcRBxIGEQARAeAQAnABAJ1wSgMSDxFwDxCSDxByEFkAYQAQChEAEALm4XoQRBcPEb
AKEA8Rh7B-EG8QYAoSA_cA4BcBHwA1EA8VdQ8RkQlxfwFgLxGzDxJgCxQPEPAHHwBRHwAfENEKEA
AQDxKECxANEgcRBBEHFyAPACAPEaAPEqAPEOAD4QYRDR8ATGFlDxGQDxDSkF8AoQ8QUA8Q4eCCQI
DhBRAPEA8AIRUBFgIQDhGwBgAhDxCwARMQfwCBDxHRAUSAQIEPEH8AER4BEAoUARQPEa8AOgHTEQ
8RsADggEiB0AAFIWkJEQMU0RIPEWEAMP8AkxDXEA8RIQUQAUGARoDgDxCOAR8ACRAG3PB-AS8RQQ
AT3hAPEYAAgUCACIDgDREGHgEdChAAE9wRDxERABsxPxCGBhEPEXAAgEKBAIBB44ALFAYdAR0JEA
OQBwEAAhLREQUboA8BAYSB4UDgA4ALEQPhAx0BHAkRANCQ0BDfEAAPEPAC0FZxRhXfEhCAQYRg7w
AQ4ABCgA0QAOGA4AQcARsJHqDtANEQ3xAQDxEA0FDTGdWwOADPEVDhQIHghYABEQLQAALADQgQAB
DRUN8QQA8Q0AEU4KIAmtBwOA8RYACAQIEA4tACBgkS0AwBAB0BGggRAdBQ3xBgMBEd0nAPARFAAO
OB4YAAEoDgAOGC4wYQAOCPACEaCBAD2BAMEQ8QoaAyD9ANIDURMOFHgOowBAaA4gUZQC8AkAMbAR
kKFNYQAdAJEADfELAA0hEAH9AjFeAOMOBBgEWBAYEIgeAEEOGCsAED1nAxAD6QGAYQMBDmEA8QBm
CvADAAH9BAARAPERABEOmA4wDpgO2AXwCxgCDgBBoBGQMRAxPVEAHQkDES0xIB1xEPEAGQXwHz0R
LQABA43xFgA4LlgOEA64DiAuCA4QMcABgLEtQQABAwkdAQ0DCS0gAQ0JDfGPCRAdBggAyQXwDn3x
FgAeEBguGA74ARAIEggOAGGgEYChDQkdUQ0T_SVgAx0ZIQ0DzwMQCw8JwB0hPQkNEQAtAT3xGEUp
Aa8GIPgAwDaRgZARgJEAAR0xcQCgIQ0JPQktIQDxCWwG9wPdAAE9sQDxCw5hDqgOGA44QJEtAFEN
ARABrTIEUQ8QAQndYgZAkSDxEYQBsCg_CB4oIMGAEXChnQRAAAEdCb4AMJ3xEmQGMU0RXYkEAVsD
8AYRAA4oHhgeAE4oDuGAEXDBDTEADQOGC_O9AQDxDAAhEB0BEE0hPTEAAW8AAL0AEAiZAkABIA44
NQBwIQCBHTH9BDAAYTEtEAFdILgKEACDAuABAIEQ8QQADgguCAAOKDEAQA4A0YD0CfAIgQBR-QXx
DQAhLQEADQlNEAEtEB0RIGH_BBBxwwMQCLIEMDgREDIAQ4EQMXA0AHANCa0BPQEdOQAgvREkDTAR
AKEzAPABAPEGDhgOMA4oIRAYDhgAkYIJEHCEAGBRDQldGQ3CABANNQBgCU0RrQEA5Q0RMaUAEvGQ
AqMhACgxEA4oDgCBOQDwB6EAMQANCS0JLQkNERktEQ3xEU0gAU1yABAhiwoQBeMn8ALxDBAoEDEo
UQA4DpEAIXARkDUA4AEJ-QAJDfERED0xTREN8gQgAS2XBNBN8QwQDigQIQAoAEEQcwAQgTMAIIDB
IQBgCZ0RXfEQoA4hfVExAHABACFdAPELgAOFDhAxACgAYQAyACDREDEBEZ09B-AWAPEBANEQAS1R
PXEAAU0BEG3xDBAYEEE4YQ4oEMFwEYDhACFdCecGMQE9ADkEUQIAAS0xQgJwIQABXQEQTQIBoSBB
DgQoYQ4IDgg1ABDRHAAAQQ1AAQ0RPfMC4MEA8QQQAU0RHWEQAW0BaQAB9QOABBgOUQAoENH5APEB
EB0xfQld8RgQQQ2BABF9EY8CsfEUEAgOEEEQHhDhHQEgAQmqA8ANA20JHQkNIB0A8RO8BzAgcb0e
AWAWIIEg8QASAbANCR0AERCdGQ0BEHACsSEAAc0RTfE0gBGAmgkgCT1tCRC9aQcg8RfjIwD8AgAf
AECwDXFdZhkgXTHYARAWewswTQFdVxqwAAEt8SwgUYARoB2vBxAJJwAjEU1xBxAXMg7B3QFdET3x
DRDxCyBhJwBAUQ0JbSQCcBFN8RwA-QOnEYABAC3xNJARgBAEMFEADVwNEKGLBjAB-QHwEGARHQEA
8TIgADAJHUG9G1AQMSDxHfsEQgEATREfAGExoBGAAS0mAiC9MREAEB5BChC9VwEAiRsAlAYx8QKg
QwBgAEH9BPEgWABhPQFdAAGdUiph8R8Q8QCwIAAgUb2MAXHxFgCBHQEQJgDQAAFtAR0hEPEgEGEQ
USUAAOoBYC0RDRE9Eb4QAW0AAL4IAo4KkQFdER0hAPErACsAYAktERAdMSsAMS0RDYcGAB8NoAEA
TQEAvQEA8SxUBkGQAT0QshAQDdAAAMkIENFABEQBLSEgJwAwECHQJwAwEW0QBh8wAAEdwgAAzgIj
AAGgAFABEPEOEIkDMmARQCsAaAEATSEQLSkAQBABXTFaAKLxD_ARoAEtAAF9PwAiAAEnABJBJQAR
bb8BEBF3BAAqGkGwLRGNRAARAQYA8ADxHz1RPREwET3xBwBhAFH1BWFx8AMRsEElABMNJQBwGgAB
XUEATcgGER3sCgBSAxBRLwBQCvACEcAxCgDhAAD2BSDxGTACEE3QEDBNII1_DACmB3BxAHEQkRDB
wAgQANIKISEAuxCBEPEZHQENER0vDSFNAN4BED1eC_TBAIEAkRDR8AMB8AJ9AbAAEQ0ZAVAbDRAd
MQ8eAhYF4PEw8AXxAn0hLUFN8SYZgBgAWgBPAB3xSPIsJ7ESDxXwCwEOIfBrDqAJAWshwKsO8F4O
8EcOBQ7wXAUAIEYeJEGA--Qe8Hwe8CcSAEB8HvA4CAAQtQUAsBoOHxQe8IYeAfAax0OQsA49Hg0O
8EoeqjzwG07wKB7wDw4d8FMODU4NDvAoBQ7wDg0EDxkEHfBSHh0u8Cke8A0ODBkcBC4A8A0O8EgN
LAkcBA7wUy7wSQ1MFA7wrw4NPA6QLvBlagDwCBxOwDQOkB4FDvBkAR7wHA0JLA7wC06QwzzwGgVv
EwHwTQQMCSwU8AoeAC5wHvAeDgslKwULAfBNDBkMFBzwCg4wBQ5AqmrwGxAODw0VOyUr8EsMCQwE
HRTwDwEeIC7ABQ8SDvAOJQEOASABDgElAfBKLB0AYBABBSAe0EA7wA8NFQFwFQsFAfBJLHQs8BJQ
ARtR8AQe8CEOBQEgDRQNDiAlAfBJDgQMFAwOUAUKVQsdAMASDtAOBQEQDjwNIA47APAZSg0cBFAr
ChUPEAUbFQHwAA4FHvARDgQOwA4FAQANDEQMDhABCgHwSyAy8gIBFQE7EQsVCwGwbvARDg0esCQA
8AkADhQNDg0OAAEFAfBSCwoFC3AbBQuwHgVuRbATDQywDgUOABQADqYj8AwEAAEFDvBSCwUADgRN
BA4AK9ABEB7wEh0OsAEvAPIEDTQNFAABBfBTFRAsJAwNACvwAY4A8QTQHiAEDCQcDQAOBfACDvBC
BA0AzimADAQNAAEFHuAYQwANADEOABQkAAAkJ4DwNx1AEQAEDMBDNwAEHCkAQAQNDhAsAPEEHvAA
DgQMBA7wNhxABQEABCwUPCYAMBAtkHcA8AwFDuAuASAOHQ6gDgQOQA5MDvA1BAwNDiALAQC3aQAq
ACQADisA8AbwAAEeIB0eAC5gDgwNUETwNg0EDAQrAFAMBCANNC0AJBBNKwDAA00gDRQOYAQN8EIO
jAAgARBqOREkJQCRPQ6QHnCOMC6AKQAQTmg1EDCyAPAScA7wKgUO0B0MDgABEBQMDSAkDgABCxA9
oB5wjQ4gLQ5wMABwCQ4EPQQOIAoBIGAOPwKwKAEe4A4MDQ4AER4xARAEMA1wDh0EDqAeUFUAkQAO
HR4QPg0_UG0A8AEOHQ49AA4tEA0OFB5gLvA6KQBQAAEgDSRDEzAOBB02AAA8AaEADgQtEB1OHQ5A
NwBADQQdFBUA8A0tAA4kDfBIDRQQEWARIC0OQAQOUB5ADRQADg0kbHwgTgADOBEIMgDwDS0EDgAd
Dh0QHaAu8DwODQQOEIFAHlAMDVAeQC1fAJAOAA4NPhBOMC4tAAGIACBN4G0A5D4tEHHABA1QHvAn
HQAtFgBQDA4F8CEDAUEEgA4NdgBBHgB_IPdAkVCOAA4FDoAdAPUBIg4tMAAAJAOhFA1AHgAOBIAE
DDIAMH0CHXUAAAQAAAcARDAOdQ46APEGFA4gLfAABQ7wQA4NdA0EDQQNYA0UqwAoHl00AKYgDmUO
VR5AHg0OmwBGQh00TTAAUhAEHR4NMwASHjIAcCXOQD0ADh0vAPARHvBDDmRNBA0gDiRwHkAdIA0O
8DYe8EQOhB0UDSANBB0VAOAeHQ5QXhBOEP4E8AAeoB4AUQQNdA0UywHwSQ2QHkANJBwOAFU4BQ4F
ClUoVRgVCEUeAN4VDpAe8EUODQyEHQQNEA6QHkBdEBUuBU4VbgX_AxD_AnAe8EcNpA0EDvAELQQN
IB7xBx6hHhBuAa5QDgXwRBTYMfARNA0EDbAuATA9BA0QHkEOYQ5xDgEOYQ4RThAuAQ5QXiDrRlAC
XvArDiwBAD9_0CQNBA6gDhURMB0ODQQkRPAHUQ41DQ4RLhUNDiFVDhFeEC4BEB4gESlBowQuEQ7w
Kw0ELWA3APEUARURMD0UEB4BDjEMSSENSQQhDCkfCgwBbhAuEA0ULQ4RHkCSD-IeMQ4tBA0OQA4d
FC0OoB4RMD4dED4xHB0EDB0BBAkEHRwEEQkMDSQNAR4FPhAedQFwHQ4AAR7wCPEQ8BIuBD1gDRQd
FA7wCi5BHBENGQQBDAkhBBkOAQkEQS4FDgGZRQAyA-EkDg0gHvAHDhQMBE3wLB4QHXAONC1ADgH_
ABBOIQwPHxEeCQQBBAkOEQQZHgkMAQUcBBFeOgBBDA8KBNsBAT4A4A0OTfAwHYA0DRQOMA71oBCU
LhEMBAEOAQ4MPwCCAQ4JDAEEGQxAAJMPGAkPCgkADhRBAOEeTfAxHqAOFA0wfgUeBZ0CsAUOEF4R
HBEOGQQAuwDABwwBDgkEEQ0JDA4BQwBQBA4EBwnnAzAQHpDjASAOkD4AYRUuBRAVDkEA8AouED4B
DhEMDx8FDgQJDA0BDAklHA4RDAYFigAChgBgAA0HDD0QjgTwE-BFDh0OkA4kIA4VDgAOVR41HhBe
EQxJMQQZBwkEAQ4ABFl2ALAuAA4tDh0gLoAewO048wkxDg0ekA4tEE4A3iBOIQ1EMQQMJA0hDVQr
AHANTiAu8Ag9_jjwBEEd8AoOAR4RDvELDgEu8B0dDh0_A-AP8AoO8RMeAfAdDh0u8EkOoR5hDmEO
MQ4hDrEOER5RiQLxEk4ADg0e8ABdDvAdaw7wE04BDhYMCQQRBQwWHA4BBQwmDGMB0BENBA4RBCYE
DQEMBBEmAREOGQCgBAw2HhwmCQUBPqoB8QfwMhFbBQ7wEz4BDgU5BhEESQ0BDUkNDQHwDAQJDQEF
SQQBGQ4BDhkRDTkNAQ5ZAQ5ZDgE_ECkIkC8LFRtlAfAFrpcB8AcRBBkOEQQJAQ0JBBEECR4JDREE
CQUBlABACQ0BGX4AcQEMGQUBCQz4AfEQDAkBDgkNQQ0JBEFOEA0eDR7ATQ7wGgEFC4EFC-ADzlEA
GgxRAIAEEQQHBAEJBLcBUQQBCQwhUgAlBA5SAGAeCQ4BFQ65ADAOBSEhAfkIEC3AFA8YLQ7wGAEV
AYAVCw7wAA4IAbCtAPAFDA0MGR4JBA4EBgkEAQZJBAEcDg1gADEEKQziAhEhqgDgHgcZHhkHCRFe
8DQFCwHVPmAAAQULDiCjBiYe0FEAcA4NCQwECQSDASEpDEQBERRHABBJZwMwBQwZqwARJFIAAKAB
ANUA8AAFDiFOYB7wKg4FCxAOFB0PB6IVCyAEDARwBQ7QBgESBaoAA00BQQwNDiHLAUEJDQEMpQAg
DAZAA1EBBFkBDnYBAAcAMDFeEHMFUB0egA4tIzyAFw4FCyAUHUQ-BxEwmAWQ0A4FHgEOBQkWrwAA
8gBxDgQJFQkEIUEBMREFCfYBMAUJDLwBIBkBzAHQDhkOAQQZBhkBDhkGHD4CwBAtPh0OYA4DDU7w
GBUJcA49BB0UDA1jABMOYwBALgEOOb8BAAQAEA0EAhUuXwBCDAYRBckBcAwJAQQMDhFfAFE5BgEO
WVsAALwEoAQNUA4NAw0_8BlfAMMEDBAUDgANFA0ACwHEAPAJTgFeES4R3hFeER4RHiEuMT4B3gEu
ERA9mQdAQA4jDQULMg0BoD4AkD4QJA0AETAODEsH8A6QDiA_AQ5RHiEeUV4RHmEOIQ4hHhEOIR4h
DlEOcUMAED78CWA9PvAaCwFICVQQDgwkDj4A8BQBDoANEw4ADhU_FR4VTgEeBR4F-hEBPgFeAQ4B
rhANDg0eDSEDgBAOHQ4t8B0BtAAgDhD1CDAAEUBJB-ALHmAOHRMNHgAuEP4IAB4wLvALLlAOED4g
HU6RA5AQLg0u8B8NDBTULfARDgARUA0EkAEOQA0PCAMNEwTwR04dAA4tMA4N8CARPgQmCPAHIVAe
oAEOIB0TDQMULRAODR4dbhBhnolCIBBOygXwHC5AHgD_AxAtPgA_IA7wIBEgDhQdECEQDQ7gDgEQ
DhMtFA0DBA0QzQ4AsS4bLMENAy0QXQ4QDQMdDhAISmBtLh0uHQ7tNwHTAMDwJwFAIRBd8AA9IAMY
CBEgcVIgDhAIIFNOAA4tAyg-EC0dLwL0BwCuBJAdHrBdEA4t8CZ_GuEODQQdBA0OwB4ELRAOE18J
Ac5OAbYeEE6DAEAOAF0OtRMiBA5FAPARHgAeLR7ADk0uLQ7wJkEgDm0EDrANBB0DDgATDQMEDhAY
AmEOBE0Q4R7-AVA9ExADPbs6ADkAEB2NASBhULI9wC3wJB4QES6dHoAOXVwCQB4QDRS9QACMDnEO
PS49Aw0efQABAgACeQCwTR4AcVBuED7wIw6NAGAEXQRNDnAHACAtILUJMV0w0TUBoA0THgNNEA0D
PSDdNgA6AABhUwAAIIAyDQRNFG0eLZZ3ME0ePTcEAPwIIC7xMwMDLQEQTfcBFB43APEIACEQPQ4x
AB4wPtAOUQ7wDw0UTTRNAA5CAFADPRADLUQAAKAA8ABNDgDxAQ4ADgMtEA4PAj0yAUEtHhBtRwAA
dglAIRAOHIoIgTEuIE6wDgUrOQ0AmAdAQBQtBH88ci0OsA7wLz7pAUANLhARdALwBQ0MDgANID4A
bpAOFUsVGwUB8AoOcQMAiAgwAA4gPwhUMg5gDpAzACAUALUwMA4gLjIAwAWbBQHwCQ4MBAwNYAYJ
ITANKAX1B9AOPS4AER5RHgFuEY4F-gEFDiEAbgB1AHEMDQQsBA0UuQAAJQTggAsFCwGABRvwCA4N
LlAxATAwHR6aCAF1APgAHg0eMAFwXgEwEUAeAI7QSAAwBA0E_gwAJA3xBR4ATgGAARsBEF4QEQsB
8BENDARQlwPwAxQOgB4ADQMQDfARDhAOAV7gBZFSEU5AABIkYg0BiQDxBEEOYA4FCwEgDUQgDgvw
EA4kDnDAChEEQACRBC0QBQ4ADSRcBwAwbAkcCAAQbgsDaB0OHV4VHpUAEB0CAAAcUTEBDpCKDiEN
FCANQAsO8A9TBACeRREwVwARTU4AMBxZDAgAIASZBgBhXhAezRA1kgASPU8AEB5oDRANgQoB3QRi
EA4MLSQMZw4Afk4A3QACnQAQLAUCAAoAYAQpBB0eHQoAIE4QdUERgAwA4R4wDh0_ABEADQwtThAu
BRcQBPQAIQEAwArwAAQMBAAOBBAFDvAuHgAdLpYHABkAIA1wCAAwGQyAQgCTAR4QHR4gXgAeUABQ
DU4QAQBiALFATgAeAQAODA5gAX8FIAQNdw6iEA0ADgHwMg4NME0AUA4QDhwUOwBiBBkEAB00oQAR
Dc8NQTQNQE5EAYhOIAFgARANPlAAoA0EDVQQBA3wLEGoAxAu_wAQALFSUA0cFA4ATwBVCQQdRA1P
ACAADq8NMi0OIFIAYV4gAVABbvAAAPBVANwOIAAUcAaRDgAEDfArAQVBmgMBVABCAA4sJFMAAwsA
Ew5FAQGNDwAiASQNBFgAk04NDhBhAD4NHqsAcXALEAQNAB2zDwBZAEAOFQ4xtwMCfQFiAB4NDB4E
XAAwCRAE5g4kDRBdAHQOBA4ADAQtWwBAHX5QjqlNYAwdDmANDNUNED5PABFRYwIRBRpOQwQeBBBL
ADQQBB5KAAAlUiAAJAQNAXVVUB1eDQ5QNAADowAQFE8AECDDAILwLhURDkEATpsARA4sBB2aAEM0
HA4QOwshHSC6BQByEDAQBT44GVAt-gYALt9UMA4EAMoCsSA9DvArQQ4BDgEQSwAA2wUlHDTlAAAH
AiMNDpwAER5CCLAAXjAODd4NjgA_ECR6AEg1ASIFQfA2Pg2WBABpATIQDgREAFAMEBwNIOkAQCAu
ED3LAHAwPvARPlBErwJAHPAyHrJOAUkFUwUOAI0ExAFBFC0eDR0BID4FdgAArgvQAB4QPhCeEA6g
DkBeEK0P9QEUDQAEHS4wLvAoAQsRFQ4hAgIRBBIEAPEAAFEDAPAPAcAA8QouFRAtDhANJB0OAB0Q
TgCFDgD_AgAuAQ4NGQLyBRQNNCAELAQQJAwN8AYe8A4RG1EAGAZiBQ7ABQ7QZQHwCAUQHS4NLjAO
HRBOUBUuMA7gXhANJA1UFRJhHg1kDvAEOgAjQQ47ADAeQA61ECPADj4AIQ4AHA8AoEHwBlBe8ANO
IA2UDlA0DRQMDvAkARsOAOELUD0OIPUOrAgA1gMAWAJBbR4dEGgIMCBOEDkFYD6ADUQNJM8S8wgA
DQQwDiwO8B8uEBELEAUuEB4tDjD_EzgANg0OTToAIQB_vwKBLlAODTQADiT6AeAOHTAOLfAfDiUO
ABELEGwRZQ4d8BEFPkAAQAB_EAXRAVAtDhBOAJ4OIB4AZglgDQwUHAQQMxFwDBQMDfAoPn4AIAEO
JlGxDU4Nfp0OIB4AbgEUAzANfg08AADJAzIuEH5zA3EgHQwULiAexAFwDvAmHjARCy4S4g49EB79
AAIdAhMdAw0QfgABQwARTh4CEF5FABNwQwCREA4UDBSgDSQMQAAgASugCNAuEA4dHi3gPQINAg0e
PAAjfk17AKAQTgB_EI4gBA0uJxPAUAQcDvAWcXABDjBL8wLzAU4dDhCBMA4tEw0eEH4Q-gA0ADA_
EH4fVSEEDU0SsFANFA7wFntwHjA7TAoRDjIPIA6VzVPQDQMNDvAPXgA9DnBOgNoEATwP8AQEDQ7w
IAEFGwVLBQtQHjABGyEQ_FThDR4BHgEFAQ4BBREeAD5GABB_dFdhQA4wHhBehwVAIB4gTpcAEABE
AADsQzTwIJtEAAA4AAADChAtzwxgHgURBV4ANlVwTgEVIc4APiQBAa0DIBUu2AkAjAQAWwMCkQAQ
LdsVoHABBRsBQD4QKxHhIhEQLgBwAA41EA4FTpdUAKICgBAOBQEFAe4AggABEgcxBT4AKgAhHR4W
CtAALlAu8B0OERBeAAEr0EYgMS5LACAuDSEEMG4ALvcCVA4F-gYQQQCAXgA_EC4dAB09ADDwKgv8
BoBEEAELBQ7wAowG8AYeHQ6AXgAeIB4A-gLwAD4ALg0OEC5uBEQAPi0ONAAxABQAuAOwAQWgDgEO
QBEuEJ7QVUEA-goQngAQIKYPsR4gPiAuIC4dHhAuNAAgDAQaFgA0ABBRyAuwLhB9ID4gLRAV-gHo
AGEVHgVeIE7WBmCwTvAvCwFokBEUVgMAMgBQECEeEC45kNAtID4gHd6gDgWuwB4w5EqkLvAqAQ4Q
DgwUHisAcA4RHhANHlArACEQDiwAcL7wAk5ALgDyBVEEAA48JDkIUbARoA0eSQgQAK0RoBANbqAB
KwULMXA-DbB_DV4QTiAeIH7wCDUXABUJER1wCDDADkBxDxAQGk3wAz49PgBOMA4BOwELIQ4QrhB_
HfcCAKQQEo43ANAMBBwOACQMDYAeoE4Q_QggXQ58SACTAYEtHhAOCwFbMW0LAH4CEn6VCVJOAN7w
J7cCgA0eAXANDKBOvlbxAk0OAF49Lh0eDS4AHgELAWAxjAHwBAAOBSEOEF4tXoD_APAqDiQNEBHd
BvIKgF5gTQ4QDk0ODV4tPgABBRsOMA4QAQsBFScD8AQFIQ4gTi1ODQ5wbh1u8CcNRA4gaQBhBA0w
LoAtZw2REA6NDiF_AA4LvwUgHTShLMANLmB_HU4N3j1u8CduC0ABEA5Q0DtADg0eYAEDYS4gDi0O
TTcAMhEOAJ8JEBGmANA_UO4N-gnwLxEQBA5AGgowIA2O7AAAWwNgPQ5dDiE_1QDwBSANDB1UAB4Q
Df4YAQARbqAu8BthxxLwADAODRwOIM4NPgAuPR493vMEALgUMA0kALcLkQ3_DwBuDQ4xfvkWMRke
YXsKsDA0DSD_Ax2ODS49oQQxDQwQ6xQB9xcxDgD_5lUwDT4NowYQEXoZ8AkaDA1QDiQdPgANBEAN
vg1egA4dHh2eABF_AhAQyADxCR4Q-gEQAX4QHhF_IRBu8CUEDRA_DQwUPUEVADMAkk5AATAOTb4R
AKMJAVsV4BEQTgCuMW4gMQBOAQ4RNwAAdQohLFSFDOEtDg3eEAV7AQA9zhENHJ0AADsJMBEgLnEO
0F4gMX4QERBuEQ4QXvABgmAEDEQeDAQTAhAwfAdgzgGrAf4AxQIA0AFAHRAEDqQLEI6EHTBeDQ46
ACABnm4NAXkHERCGCjAMBD0zSaAtzg0QCw8QqxDeeRlwcA4MMB0_EAwEUD4AMRCeIhYQIvoYUhAe
HQwN_QfwAQQOMB4d7gFLUAELARBeHW5CL0AtBA0Q5AyQXhAdAF4AMRCuZVdAIyQOMBcXAG0BEBR3
DvABDh3eAAsFOwFQARsBAF4dTvcCAFsZUQQMDRAEPgDABA0AXmH_D-AiDgQNPUTwBFAOFA0UHTAO
Db4NDgArASAUPA6GAfEDDa4NLgARUBwwPg0QHQBOER4R_gEg8CJPDnEMBA5gTRRAVAIANQAABAki
FA04ABDOCAAwIB4tildgHRD_HPAoWRoQFJgPQw0_MA4yAABdQgGoCgDICVDeMFwOEH4YAJFBERB3
D4A9-hDwKA4NYP8FIQ0UPAAAlglAPg0OAGUNIAANPhYBvlIgDc53DwAAArEeEB0EDb4d-hDwMTRf
dxQNEE4QDA01ADAMBCwFAQB8AWCuECwOgCSVCpAkEB3_ChHe8DJjDjAgDhQWTQFlAgWqACAdFKkJ
ABMAEJ5aCREEDQMwBF0kXk8AAQ_c-gchAM7wMg49PgAjEQvpAEIUDQ4MQAAhBBw-AJAEDEQNNAwO
MC0_AFABABHO8LkXIpA_PAAhThCuADIkDmAzAABMQBGkQQAQ-o4uAi0AEYBpANBuECEdJA4ALhDO
AC0eOgZSDSQdNAyBALD_CjG_8DUNFHBeEAMMoC0OMAsQdBANziCqAAABAxJEUwBiMa7wNg4dJgBy
ThAdABH_EroD8QsORA0Q-g4hvvBBbgAkDnAMBAARcF4Brg1OHUAJECRJEfEJ-g0RnvBFbgAOJBAU
LRQNEEEgXgH_AQ0OyQMAaw6CDQ4A-hnwRl5zCcA0DRQQQSD_CgANJDAcEAEcAPEAfjANhA1w-gAt
ThAkDTAeOAsQ7kABQA4B-gIKHsANfiANRB00XhD_CBBxD0AOEB4gPADwDAEBACH_AvAEDvASLvAQ
XhBkDTQMFAwEDA5QrjIfEC7dFyAOABkPAC8AMK4dHsgqMA4AzisGIDZOuArhHhQNHgwUHQRNIJ4A
IY6xChAAywKw3gEwEc7wCR7wNz4nAABhAzAQJBC4BRB_ByMhXkAqAEAtEAGe6z4Q3tNCQA0UECT5
AxAw9gDwBxB_Ma4QLlDOAAEwHgEeDX7wWA4NFC2QEhAUggcy-gINbwgAdgOAAQARLgGu8FjyAYCA
DgQsDXD_GptVgQABEE4NnvBWOgAQHuwO8AhdEC4A-hoATgEeAP4A8FYNDBRAHQBOMKACsP4FDf4H
AP4I8FgOqkGRFA0QrhD_NfBZABLAFA0QfjD_FgD_D-BZSl-RDQRg7hAB-gsBEBH_C0ZR8AUwDg1g
7gD_DBH_D-BKHvAS-hAQbhwA8AlOHvAYDg3_JTBO8HkN-iTwhP4c8Bke8Cj8BRUmDADyAQHwMP4C
UG7wmf4BYF7w0C79WYDQHvC2LvC2AR4gf9YR8FYB8AJyIBYPtVgoDzsAqw9QTgDxFIUh8LUh8E5x
8E8R8E9-EwHwhwHwFREuAx4TDjHwgiHwFN4BBwDwFE5BThHwpz4BQAFe8KYBPlABXhHwoz4BoAEu
AfCiAR4DDrARCgDwBj4BwBEOEfCgAT4B0AEeERDh8I8eARYf8AYRAPEB8I0BHgHgUQDxAxAB8IYB
XqCbLIDxBfCFAV6AUQsAsAvwfw8VBg8NPnBhDwCgDPB_BQ8PBj5AkQ4A8g4P8HsPFR8NPkChAPEZ
8HcBXkCxEEEQ8RDweAEeIQwAYBHwdkEw4QoAoBPwdTEg8QAQEQ5dLGDxDvB78QENAPADsPEK8HnR
UAEuARChUPEF8HbhDADCABF_AXDxBfBz8QAQoS6AAY7xD-By4RAPDAEQAID_AQEw8QPwcMwp8TY_
IS4h-gERMPEC8G_xMBH_ESEw8QHwbXFwAf4UAUDxAPBsgTAh-hcxMMHwbIEQIf4ZQSDB8GtxEBH_
HIEQsfBogRAB-h0KAPAAYRAB-gwfEf4DcTCB8GdxNwOQPa4NbnEgkfBlJgDwMQwdri1uoQCB8GSB
EAE_Df4VDY6REHHwURHwAWEQET4tPhGeIf4MkRBh8FEh8ABhEG4NThCOEQAB-gyhEFHwUgEnAGCu
ARABjhGNA-QLsQBh8GJhEJ4BIAGOETD_BBFecR4BEFHwYZETAHEDARBeES5RqEo2ABGuFgDwCgFO
ET5hEDHwCiHwQ2EQAZ4REAGuIRAR-gExAEZOIR4BHABxjgEgAd4BMBsAMCEuQaE38CXwYGEQAU5B
EBHOMRAxrg0OQU4hTgEeIQAh8GBRIAFOAUAR3jFQAY4tDhEQAU4hXgEeARARGwCAUUAh-gEhMGHc
CQCDAPMEXkEQEfBeUTAhcCF_Da4RkAFeEZoAAxcAaxF_La5RQBcAkAEekY4N-gFRXkQA8AYhDlEe
MfBfUTAB-iQREAFecU4B8GApNDIBvgEEANH_BwEQAW5BbgHwYDEgGAAWEBcAUTF_EfBfFwASrhsA
wBH_BUFuAU4RDkHwXsMzEAFLAfAIvgEwAf4EIRABvgEeIQ4R8F2BAAGOATAYACAR-tktMK4BPicD
EF3yNPYCAX4BQAG_AVAB7lEQXg0_AU4aAPECHlEwEc4RQLEuYRABPi0eIS5NABARTDYwkAHuziUQ
HlkB8AoNXgEeUfBfYRAxUBH_ASGwIS5REM5h8GFRuwKQUAH_AxGgEU4xygLwHb5R8GJBEBE_YY4N
nkFQEW6BrjEOAfBiMRAR-gQtjkFAMV5hEE4BTjEeAfBhFQDwDQUNnlEgYS5xEAGOMQ4h8GFBABH_
EAEQgQ4xHnElARAeqAHkQQABTg8cflHOEQBRzkEXAPANYiEAAT4sTgGwAX4RMBG_URABfiEeAfBm
QU4MXhUAsCEgEb5hAAG_EfBodwFhoSARfjHeKAFwEBHwQhHwEl4BzZEwAX4RXgy_ER4BEBoAxO4s
rgEuASARXgEAMRgAsAChMAH_AAyuER4hWQJgEDHwZgG_pAPwOQbRELHwZwHeAbABTh3OIR7RcDHw
aAFeDW4RgCE_Pc4BLsFgUfBoAU4tbhFwAW4d-gOhYGHwaBFODY4hEDH_BwE_oWBx8GoB-uUHQP4J
MQ4fABFsDwDyDxH_AA1O8QJQcfBsEe4BEBHuLS5xEGFggfBtEY4BPiAAUC6BEFFANSxwEfBtAW4h
LhYAYASBEDFQoRIA8AzhEFHukRAxQKEQIfADIfBfER4BkAHeoYChEDEQAPRKWk8VQZABzqGAoSBB
8G0LBV8WAgsACzWQAY6BcMEAgfBpKwUKRg8OBA8UGzUBgBE_EQ6RYNEAYQ4B8GgLCjYKNAoGCgUL
ILEAAS6hUNEQofBkASsFBhcPDwYbAPRmMS5BACEekUDhELHwYwU2BwYPHyQKJgoPDQUAcS4hDlEu
EQ4hMPEAEKEOIfBeKwUKBy8PBgkPHwQIGiYFGxDRHgEQkSDxARChLhHwXQomFwgkCAkXBgofDQUL
8ABBoPEBMOEOEfBZEQALBjcJCA8IFAgGFwY1HADwC9EuAfBYAQo2Bw8XOA8OCUoPDTtg0SDxBWDx
AyjwCwIR8EMFBkcILxgKJgo1kLFQ8QRwAQ5BPnEOLEiQ8EEBBQoHCW8ONgCgoLEw8QUgoV5hDrw2
8AvwPwUnCQQfGAQJJgo18AHxD1BxfgEeES4BDl8y8QTwPgUnCQ8OKAoPDRoFO-AB8RAwGwAQbjgd
8ShR8AIBDgHwPgVnBgULFQvwCfEAoFHuAT4BHhE_AfABAQ7wPwsKBhc2BRsFC-AJ4aARLjH_AFFO
GwDwBAHwPxsKBioFC-ALIdDxBM4hLjGMSQB2AGBARQvwDB4XB6IhHgEuMX4NfhE_HQDwAS4B8EEL
8A8u4Q5xDkFuLf5AM-ADAR4B8GIusR6RLhGODQHOIS4hFAChEfBhPvEG-grh4CAA0gE_MQ7xAP4K
cR4RHgETALARXuH_BRFeAS4RfhIAsCHwYgF_sf4EIX4xEAAQPjUAQG4M-hAQACAhwBAA8ARLEfAF
AV4sfg3_BiGOEX4BHgGw5wBASiHwBfMA5gx_Lf4EUR4RLhFuIQ4BMgAAFAfwAK4N-gWRDjEuIR4x
wAEOEUoEAiwHhRDxDpARDgEeEQCzCQ1eoXCBDgGQAR4WANAx7gFuLU7xDA4BgBFOEgAQTn8F8AIx
bg1OkQAhXgEgYXARXgHwIUZGMD4RAOQEwjHOUQBRbqFwES4NHhoAED5jBPICLV4BAAHeQSAB-gBB
cBEeLQ4cAFFOUS4NbhoAcQAR-gJRQCE2ADBiAU4pFBAhlQCxHg2_MQABrgzOMEGBAAA1BnA_YQAB
Di2_xwVULL4wMV4YABBejQW2Dc4BAAHODG4hHgEbALcRTkEAAZ5hAAH_BRgAgTEQAR5hAAGePwhA
fg3_ANMGIIEuHABwbiEQkQABzk0GIC3_Q0MAFAAAWDkhEd4sALB_IX7h8GMBDg1OQUouEK5GCcAB
-gFBXrEOAfBkAS2eBzAAAY46CDIAgS4VADEODT4WALB_cRAB7iEeQR6xHhcAEH7YQdEBfmEAEf4A
ES4hDtEuFgAQUT82EH4QBqAh3hE_ER5BEFE_GQAgbmEMPgIZACD_AgcI8ABBPgHwZQFecWABTg0e
URCNB4EeYRAxPgHwZhYA0D4tDhEOIRAhjg1uIS44ACRBLhsA404NHhEOATAhfi1eAV4hGwBRZQFu
YWBkAhYwNADwAjEeIfBkPg0_UWABzgEwIa7xkhAQIUkAUS4tLlFgNwYwMCFOoFhiECEOIfBmLACw
Dg1eIR4BQBEeAR5RNgDuBFCeQWABLekGolAxHgEOgQ6xEEEVADAODU6JQ-ADIQ6BDtEAYfBoAW4R
HjFgAV5x8TNgDBAx8GmOaQBAYQBRMEwAYPBpAa4xYCkBAxAAMGMB-hMEMBAB3soA8AARMAGuEQ6x
8GcRbgGuQc7iCGBRrhEOQQ5MBzBojiENCAEQAAC9DRDBFABAfjFOQVoB8BAeYTAB3uHwaB4hHhEA
EU5BEEE_MR5RIDE_IT7xAPBphTsA7gEQXtpJACAJEBHSHQKAClAu8QDwaiEAEC46AgIXABgRIQCD
HhEOwfBrAQ4jACQOYSMAJk4RIwBALoHwbiU_InFAHQBhAU4RQAEgHQBDboHwhXYAMA4xkLEL8AmB
8I0RIDEgQaAxIGHw--8tIRABkAHwnBEfNxARqTp68JkBQEEAQVMMLI4BnAxEMi4zN5wMTjAuODf5
LQ_bDADQWxHwVyHwTCHwTxE-E1sE8QtMIfBOAZ4h8Ekh8E0B3gHwphEukS4B8KUBLoQMUKMBLgGw
CQAyoREepwQgoBFtBTAuAfAgAAEdBUGgAS4REgBwmwEAET4R4AsAwJkhDxVeAfAALgHwmjMF0BEO
ISDxAvCDAY4RsBGSDECCAY4RFT4gDhFwL1B8AY4RkCc88BjxC-B6AX4hgLEg8Q3weAFeIYCBACEg
8Q7weAFOIWDxACDxD-B3cVDNNwHKAPBDGfECIPER8FYh8BmRMDEg8RTwUyHwEzEAoSBBYDEw8Qnw
UwHwFNEwUeDxCfB4wTBh4PEK8HXBICGOAT4hHjFA8QbwcsEgAf4JETDxB-BwoUAB-pQHcALwcJFA
Af4vAvAnAPED8G9xQBH_EVEwEQCx8G6BEDH_FIEgsfBscTAB-heBMLHwa2EgEf4bYTCh8GlxMBH_
HGEghAyQIBH_HpEQkfBoFQvwAiCBIJHwZ1EQEf4hoSCB8GRxFQUg-hgMAPAjY3EAAT4RUAHuMSAB
7sEggfBiYSABLhFgAc4RYAHe0RCB8GJREBEuEQBxvhEQob7BEHH4CyARPgEGQAQBIE4YDNCxIHHw
X1EgAR5B-gUBvwIwIBGuOgAQXhQAECBlCwA-DPMZvtEAgfBdUSARHhAR-hIxvuEAcfBcUTABLhD_
GBGuEQ6hEGHwCRHwQRMAQBABrsESAHAh8EBRMD4REQAlvrERACD_Hq4LIvEFMgDAIAH_HyGuAQ7x
A-BcNQbxAy3xAABh8FpBIAGeEf4h8QAQUQ0AAIYAMf4fwR8N8AdYYSB_EUAh-gJR3hFOwQ6B8Fhx
AAFugTsAAAoQUHYKgAFO8QfwWHEQcwqhAQ4RQAHOIXARnhgAAIQKARoAAIQDYEDOAcABjuQRJfEA
GABCTgEw3hYAQW5hHrFeAPAAXhBeMN5AEWCOARCOUT5BoFhAMRAhbhYAIDAB2wp2jgEQrkFeERkA
4SAB3hARPhEgAY5BriFuc2QAvj0gAW5JGoD_ABBuASABrrQHCR0AMRFeERwAYTCuARD_BRkAglEQ
Af4REF4RLwACFQB2WWH_EhBuQREAEFqUBkkTEf4HEgAQ7sNBUBF_Af4IFwDRA1HwWxEQAd4BoCH_
DxEAAKgLAhMAUCBxIBH_4DIwnlEexQARXDQOQRCBMAEWADDOMQ4WAHFgAb4RAJFQEwAi7kERACAB
EPECUA1B3iEQEAASzjUAADcTEN4cR7FAAfAQAd6BMCHOUa4HAOJAkEAh8A8B7hGQ7qwBICHOkQEB
EwBA-gABcBoHUEABrhGO4AMQMekFAJY80P4DAUAB-gVBEDHwZBE3ACD_BZYC0hEOER5hEEHwZgHu
ATAUADCu4SAQAED_ABEg5AIgAb4lRTBB8GgwENEg-gMBMM5RgFHwaQHuEQ-wKEABvmFQcfBrAY5R
MAHeEUARrnFAgfBsAW4BkFFOMWB_sVBx8G1BLgGQsZA_8QBAgfBuUR4h8A39BfAEIIHwcGEuIfAK
IQ7xADCB8HQxPmFBUA7xAjChDQDxGgGgDY8UDRABHvEAMLHwAwGwEfBTUQ4RkAx0Ag0AAR7RUNHw
ATGAIfBV0BDwAHAMdAwNAAEukSABEMEQIRsAoEHwVy4BYA10HACJZyBhILU3UDHwACGQjw4QV7wC
AzQAAIQ-4fEFAEHwDGHwVQEuESANGADxCT4xEBEg8QzwC2HwVREuASANZAwQAT4BkMgAYApBDgHw
VfgMMA1UHUYEkRDxByDB8AkxHhcAUBEADUQNmAlwEPEFQNHwCP4H8ghXAT4hFS0xLvEKIPEA8AkR
PiHwVRF_ASYA8AcHIPEB8AghTgHwVgF_IU4REPEDIPEHJgAAOQBQ7hEQ8QIoBRAKCAbwAVgBzvEi
8AkBTgHwWQGuERC8PSDwCA8A8ABaEY4REHGg8QBeIQ4x8AcTABBXAhJzACFA8QZucRIAkTHwCPEH
foHwBg4AUQEO8RzODQDwDiHwVR7xGf4AIR4x8AYBbgHwOAHwDB7xF-4BgfAHEACoNyHwCy7xEf4F
kRAAYQ7_BuHwBBAAshHwDC7xDP4HsS4BEgCUVc4hPmH_CrE_EABy-iPBThHwBAsAVNFOAfADFwAQ
buVAAQwAICLRtwbwAH4B8FU_Mf4Y8QJuAdABjg4AAAgScRmhIDFeEcARAABiC5X_GWEwIRARbgET
AEAR-hdxi0cUThMAECEwBGAx-gJRAKEaCAJNACBeEYMDpf4BYQDBABEeEcAVACDeMS8AEHHJDwB5
CCGgERkA8QYhAAG_QQAB7pHeIS4BoAF_IfBVXkESAAAqCzAGAZC7AOFXXnF_UQAB7oH_BgGAIREA
UTEQIV5h7QMARQQDFQAwkT5xyAsQEBMAo3BBXgHwV26hDoETAEEGIWBREwA2QQBBFQAgQUBtC4FX
bvEFAAHOURIA0TDR8Fd_UQCxEAHOQSARADDB8FgRABAAnRCgEf4FUTCx8Fl_URVAIK5x8BGFUSDB
8Fl_8QIQAIYQwfBaboEAgREAtLHwW26BEHEQAZ6BEQBRRAHwBm6sQCWOkRQAwRHwBW6BMFEQAY5h
MBQAMaHwRSgAUjBREI5xEwCgkfBdboFQMRCOgZ8AFWEQAEB_kSABLRBAgfBdAREAJAABEgBgcfBd
EW6Bf0HwAG6RQBH_AYEgYfBdAX6RUBURUHGAAf4ABhRRXgF_kZAQACDusYsTDA8AoW6BsAFukWAB
rtEPABEAEQBQXqFgMX4RAPEMXzFugbBugcABbtEQIfBcMR4BboGAMU6hkEFeEQDwEAHOcZARXrGA
AT4RPtHwYRFuET5xcBFusXAhPvEE8F_eA5BxYAF_sXABfgHpQBFgDkmQXmFwEU7RYDFO9kxh8GEe
EB4QGwwBvAohsUCRChEuMAAQYxwAMH5RYMsg0BEAsVABHjEeEQDh8GQYADCOMXChMUABELFgnwsA
MgAxAfBkEgAwfjGAEwB1DgEQoXABDk8AEGVuQlmhoBEAARoAY5EAIfCJEREAAG0SGnHVCiD-SGkY
H0raChUP6xcoDzsA-yJUyMgEDxVAdAMBAIGbEfC2IfBoMY8H8AEsEfAdAfA7kQBh8Fkh8DPBi1Ag
AGGCCyEu4ZlFYDEQYfCS4dU8UAAR8I1xHkWA8AoB8IqREHGGWQA4RwAXBvAI8IjxDBDxAgAh8INh
EMHwAKEAQfB_gTBoFiEEcSEAgHtRkBFwkaBRnU-wM-B5oQAhoAGfEwEwEWDB8GER8APBkP0HAWDB
8HWREBFQIf0IIUDB8HOxcAH9DQFQcSAR8HGBEBFQ-REhMHEAMfBvYaQJkEAB-RQRINHwbSJMkAH9
FwEg0fBscYUOIP0aDAAganGvSPAC-RsRMJEAAfBpgWAB-RsxMIEMABBhdEeg-RxBIFEAUfBmcawK
sP0gASDB8GaRUP0f2VWQsfBmoTD9HxEdCwAQZKRHARgAYg0BMMHwYlkAMCExIAwA4BABMP0kMTCx
8GDBIP0kFAAQYOsIMf0jQQsAoiAREP0iYTBRAEENAOCdAf0XYVABQDHwX4FQDg4A8AFxQDEAUfBd
gXD9InEwMRBR0XIACwBAsfBdkZ5JAAwAAHFZbF3BEAH9IwwAYDEAAfBdgTxMgP0MEf0EgTBBBEgg
8FwhAPAaCgEw-QOBMEEgEQAR8FyhIAH9ClH9ApEwQQBx8FqhMP0KAQAB-QaREGHBRgESAIAJEAH9
BqEgsQ8AgZEw-QoR-QaxDgCPDAHwPZEg-SMOAAHQWpEgTTH9B2GtwRDxAA4AED0fAfARBQFgAY3R
ENHwXJEgDQFwAf0C0AEt4TCh8F6RIAGQAe32PSAN4YdH8AfwXbHAAc0B8AIBDeEgYQBR8FzBwAGt
0wfwBw3hEPEB8DwB8A3BUBFQrQFAEbABLcEUACA7ERQAwAENUK0BMAEdsAE9oQ0JRFyxUBESAKAt
oTDh8F2xUAFgOABgoBEtoTBxOgEwsdCtkRQRTTEAAg4AYAABXZEg4UkBkMGwAb0B0AF9gUcJgF3B
oO0BwI2BcAAgX7H_RYBA-QIBcBGdcR4AIGChuT-xAQARPQFNEW0BEEGtcTCREEEXAHCtED0Q-Qpx
-BoyYJEgDwAwCXEgFWqQgSC9ET0R-Qlhow5gYoEg-R1RCgBgY4Eg-RxRAnXQZGEw-RthMOEAIfBl
UQsAADcAEGYKABBRZxswZmEgxwIAKgAAlg4w-RoxFgDwCGhRQP0ZMUDxA-BpQUABfcFdEa0hUPEC
1w5gbQHAAU0QDwDwCQHwbVEgXQHgAT0QnSEQAUDh8HAxIBE9UDg-QhEgAS0WAJDR8HIxMD0gAa2Y
QAITABCxMxxAPRABzX9AkBCdERARUJHwdsRRIBHt8D4wEZ0BAFvwFRBx8HhBEAH9EgEwESARIGHw
Rw70Fg8UkDEgAf0QASAhICEgUTwE8AEtBf8fFgSwISAB-Q4BICEwiAQQCxcAwBy-FgxLDKsMOwwF
sKADEQweAPAFMCHwSwULDAscBG4LDAsPFA4KCwxGPZAMKwUOBAxLBdBJADAKASBFUOBTBRwLHAUQ
LhAEDAsOAMZ6AS4AQBwFAARWABHwTwP0AwchEAEdQCHwUwVLBRAFCwwKAC4AYgQOCksFDisAUAEB
MP0GSgJxATAxIB7wTi0AJxwFLABCBSsMC4MAQPAG-QTtSXBhIB4QPvBIKwA2DjULVQADKQAAVwCA
BhH9ACGQUUDngHZHBUsFQAUbKAAkCzwnAKEIEc0BsGEwDgoOKAAAQQBUEA4UBQpVAPEDCw4FTAUO
BBwrDAXwCgF9AbChLAA8fvBEqAAwCx4UAAEgBRQrAPAEC3GwcWAOGg4AnvBDBUsKEAUbHskkAlIA
8AcgBQsMBSAOBBsMBfAFDgoO8AKxYA4quCFgQAVLCiAeVQESECoAQgocBTAoAIEaDgBOIDFQoSoA
oN7wPwULDBsMBF6pACAFDrcBYQUuBBwEPi0A8BkEDgoeAA4qDhBRUJFQDjoOAA6KHhoO8D4FHEsM
_w0MBfADDhoQHioOUk5RIJEwDkoiAKAqDvA9BRwr3BvMwgBxAg4qEA4qHnVOIIEwRQDwCB56HkoO
8DwFCww7RAssCwRLBAscC0RLwwFgDjoADjoetk_TQHEwDkoQDnouKwARK3kBIQQOfgEA_AAhEC66
AAA1ACIqDjYAURAhQGFANgAiHlo2AAB5AiEQDjUCAK4BkBwEHgsMBQAFJG0AEAC5AACzAPADMRAx
YEEwDloQDmouOj7wOwVMMQASCmQBUAUsCw4KjwGAJAsMKwwE8ADMACAOSkI_0kFQMUBqEA5qHkpO
8DrIAlEFHAoOBKEA0RwLDgUcBUAFKxwF8ACiAPgCSh4gASBBUBEwARBqDgAOWi43ABUFbQAACwJA
CiUEG48BBDoAYA5AESARQL9VEh47AEE6bvA5FQFQEAUMCx40AiEEHKgAMQ4EPMkBA94AMDoOUDpN
1SEADmoOEA5KLlo_Cg46AARHAgPMAgCDAmFbBRABPZDIAfAAOg4gQYBxEA5aDhAOWh56_AFgOQUc
GwwK5y2QBAsMCwQOAC4ArgCHPgQLBRABXYA3AAC0AGAAPkouek41AFMLHAROBAYAIAROeACBAW0B
cA5KXho5VUBxEDoetAHzBYpe8DgF2xz7AAUQAY0BYA46LiAOIgABCAHwAR4KDmouem7wOAVbTGtM
KywmA5ABrVAeKi4KDiBNAwCIV-MNYQAeKk56Hop_8DcFHBv8CCsMBQBdET0BQA4qPicAICEgJwBg
Dlo__gNuJgAAygIC8kRwTQEwDhouACUA8AEOGhAxIDEgYQAOeg4ADvoCKgCSLAv_CwsFAE0gKABR
EAoQDiomAMBBAB6KDhAO_gNO8DehAnP_CwsEDjEgUAAASzESOigAJRCaJwBh_xIOQAFdIQAiAB4h
APAUARABIEEQih4ADloeui4KDvA3BTvMCzwLHAscOwwLBAUUDgDtUhEeLy0AlwMgIRBAUzAeem6b
A_GqLhoO8DYFK-wDOzx7BSoAAN0tAVwAAAYREDHLAPACEA4KHkoOALouKvA2BQsM_xP7ABAti0Uh
DgprNRA6oTYwQTAh2AKQEA4KLjoOAMoeLQBALAv_Ak8DQ14FSwVqVgCVAQAuASAuKjUAIBFgNQCW
DhBeOg4A_gEOMwAQbjIAIWEQLgBAEBoOAM8EUCEQAXAhWQJDAF5KEC4AIPsTWQB3MSAOKk4ADigA
MBEQev0BgB5qENoeGvA2hQKiC2wLfDscKxxLBexFQxAeGl40ABIQMwCBSi4AHqo_qi4xAFP7Awzr
DCsANgAOOisAIFAOdmRDSk6qLkABFTUVAWwNMQAOKm4qAAFoARAKBgCDPhoO8DQF_xYrACIaftsA
MBARcCkAQTo_mj4nACROCicAIUEQJQC4LhoQAcARHjoQDqoiADMc_xQjABAABQVQCg5AAaDLBACW
AEYADro_JQBGMRAOKiUAbQARcA4qTiYAYxAREB4ajiYAgHABcA4aHgAeawAwAA666jyRDPsVBVAO
Ko4QIQAg8AHnADQeql4gAKUOGv4OCl5ADiqeIQBUCg4AHrohALRh3hA6LvACHgAe2lQAUFkOQP4A
_ANxYAGgHgAO6hgAkcpO8FkuAP4BEBgAU7Au_gA_FwAyWv4EFQCBMA4BYA76AV4WADBb-gNyBFBQ
AUABQHUDARUAa13_ACAOahQAg_4wDmpADgGgEgBwPvBhDgpuYCcABhMA0WIuAB6ADmrwAg76AX43
ABxwDgABLwAHDwCkHgARYA76Al4AHiAAkw4RcA76Ak4Q6hAAkAABgA76Az4Q2m0BMXAOaqkBABEA
I_ouEQAxUAGQMgAQDtgC8gY8AfAkDmogAYABMA76AW5ADroO8D0UAMERYBEwDvoAflDO8HKYAIDq
fhAR8IIOam8BopoOOn4QHfEA8HIQACDajvlKFAEPACDKjqRKMB0hHQoUIfAIPwBz2m4AEd0RLU0A
UdpeEAHtDgAQWt_DMFoOahEAMyENASAAg8puEAENIZ1RDwBAGk46jjELVQABTREtFQAwXiqO40sh
TRA5SUENAfBzfgBRSh5qfjAWABYQFQAlWg4VABMhQABQKj5KrhApTQA-ADIR8HOLAHEaXiq_ED0B
FldxEfB1DjoOChcAkQ4KPhreABEdIDdLJPB2GAAh-gb6DtJ5Kj7wAg4K-gnwhA4aCwB5CvCDbvAC
-i4PTe0B8La4G-MANjcuNTEwNzE0Mjg1NzE0hw_DMzEuMTE3ODUYAA-MGxBQnRHwtEE_W1E18Qbw
LgoAYDPxC-AsIfJb8BYw8Q-wl-EU8JHxGfCO8Rvwi-Ef8IfxI-CD8Sjwf-Eq8HzxB-AF1hGAEfAE
8QZAsXAUEvAYEfAD8QRgAc8TAZDR8HXxAnAR-gERDgFQ0fBy8QFQMf4HEUDh8G-xuRdhDSEw0fBt
CwAQEdYO8Att4VAR-hIRMMHwa_EwEf4WETDR8GnRIAH_Gx4A8BNn0TABHiP_FxEwsfBnwTABDlP_
FjEgsfBlwTABLhMOE-4WAw-wHmPRIAE_Ew4D-hoRIMHwYdEwPjP_GyEgsfBg4SABLkP_GkEgofBg
0SARHkP_GwwAgF-hIAEeQ-4eJADAXuEQAR5T-gITvgPOWwDxBF3RIAEuEx4D-g8TDhMeA24RDgEW
AJAQAT4T-hMDHgNFIPEDMKHwXcEgAR4z-hMDzkEgsfBbNgBw-iFhELHwWl4AdCP_ERNOA34QAPIF
PgP_ERMeAx4TflEQ0fBY4SD_FiMPAPACIMHwWNEgAQ4D-gQT3iM_I37KEBBYbwBgERABHgP_SVjw
Ax4jDlMeA05xELHwV9EgHgMOUDAA8AMAkAEOcx4TTnEAwfBWAR6xED5WAfAAAlEOASAeEx4jHhM_
gQDRExgQoVQTQEARHgM0JxARGgD0Cm6BAOHwVAE_kQABHiFeI74THlNOAAEeIw4aAPACLqEQHgEe
o95THhNuUz6RAOHTVBBCFwCXLpMeA95jPhM_FwDEHrEQHqP_BwMuQy5DFgDzE0EhDrEAAQ6zrhPO
Qx4TDjMuoQDh8FMBLrEAAcOuE85TDmMSAEAewQABygEooz4QAAD2GaICgAEeE04TPpEgGABgEA4D
DgFwExpSkAF_A04XAMAusRABHgGADgPOwAEnKyA_oXUUABgAADplEM5zHjIzTpEUAFAewfABrl0e
YRNeoRDxABIAcIARUAGeAUALIyMDbhYA9AEuwXAeAUABjgFAAQ4RgAGOLQCQ4WAuATABfgFQcgAE
FwAwER7RpxQAGABzYCGAAX6hIBYAUOABThMOUBBgDgNOgQ4Bvg9QORHwCQEaADEuAw4cAGZ_oSDh
8DsWAAHRJBCe1lABFgCBER7B0AGeAeATAOAB8FYRDtEQAZAOIw4TXrkkMgN_cRcAATQBIAFgwgE3
I27AGQAAbwEQA8JFMI4TfgJK8BbOYRDxAvBXEQ7BAA4TXiMOAS4DjhEeYd5hEPED8FgBDsEAAaMB
PRqAXgP_BWEQ8QQVAEChIB5TrwAAJVowIP4EFAMQMUcAgFrBED5zXgMeECMQE5MAEC75GfAD8FrB
AAEeAx7jDiH_ARMeA54BTBAgWiEOGLAOEx5zXhMeAf4PEVwAIVyhEwC0Aw5DfgP_DwEOESAVAGAD
HmNuA-4OUfADBPBdoQABHjMOE-4MA84hIPEFyxGgDmP_ByABThN_ISIAYGCBIAETDiMAcAMBQD4T
fhGeEAAwE8NjniNOMVABLhN_AUATACAuI8kAEN7wATETfhH8EHBxIAEeAy4B5U7wCSNuEXDh8GZh
MD4DHvAIARAOM14RgOHwZjkAEBMAJ-AGIQ4RDgN_EaDR8GdxIAEOEw4DLvABcBwQYMkTgGlhMA4T
LgMOdgJAA14DbvZuEKEQEfADAX7RfgMeE14RQEEQkfAFIfBV3R8wFzEw4mbwGgYh8CkBHxXwDA1A
HQBNECFA-hcBABEwMUBB8EMNHxY1PCUsxTwFHBUsGTVQITAB-hRqXfADMWAx8EMFHw8-Hy8PHx9P
Dy8fDACRDw8vHw8PHx8PBQAxHx8vEAAQBawUIP4SDxGwMfBODQwrHx8bCgy1aPACSgsaKxoLShsq
CxoMCgsFEDG-IAAoAPAHQVAN8EcNDAqMCixKLBosChwKzAUQQeggEAE8EfAMIA0QLfBFDVxlLAoM
JSwVBDwKDBWcBcAR-goRHwDwEjAdAE3wQw1MBA1ADQwqBRANHA0QBTwLDA0ABHwKBWAxMKweAdxc
tC0AXfBCDQwKHAoMLABwDAoNEAUcGi4A8wYFDAo8KgWAITAR-gMBoHEwHRBt8EEuAFEQBQRFDC8A
AEIOFCpdAACPATABAcAsADSN8D8sACAMG4UAAy0AEBoTADAADAocABAsMQAwHgPOMgChDQ8UDRCd
8D4NPF8AEBxdAARhACAsGo8AQEwKDAozEPIAAa4BoLEwHQkNEF05HfA8MQBEPQUEHOsAAGEA8wQF
bAoLBdABkAHgwUANGX1pDfA7jwAzQAU6KQACVwD0BGwLCgXQAS2QUUDhQA0pbXkd8Dm5ADQtBTwT
ASEKCxQBIARcJ2zzCdAdCQ0AXRBBDgFA4TANKV2pHfA4DQwaDLoAMx0FDGIAIBsq7ADzDAsqHCoF
0A0ZDQANOQ0QYVDBMB0pDQAd2R3wNzYAQgANDBvxABAFNwAQSjYAgRobKgsKBcBNNQDxA1EgATBB
DlEwDTkNAB3pHfA2DXUBMRANBa82Am8AIA01BDXwBzUMOgXAPQAdOQ0AUSAhIKFADSld6Q0yAHMK
DAoLDA1wLwDDYAUMDVAFDCoFsD0QLQD8BUCBMB0pTbkdGR3wNQ0MOgwNYAUcLABAAB1JDWxpMEBh
QDYA8RkBDWkNiS3wNA0MKixlDAocJRx1HGUsCgsFsC0BHVkNADEwMUBhMB1JKgBQHVkdGQ0sADAL
KgsBAqA6Czosimw6GwWgsWHwBC1JDTFAMVBBQA1ZDQAdaQ1ZHSktAPAACgsKDBocagw6LIocigsK
LACRXTkdEVAxcBFgKgAjSS0qAPEKDApcSjwajBocCpwKDAWQHRldKQ1gQcABMCcAgDk9WQ05HfAz
fgDxFgxlPBU8FSwFLARlTAWQHSldCR0wcUCBIA1ZDRANOT1pDUkd8DICATBADQzyEQA9AWEFEAwK
BQAOAXA8BYAtSW0AVRjWkSANSR0AHSk9eQ1ZDTUAFQo1APEFGgUADRoNID0FLAoFgC05HRA9AGHD
XXEdOU1JHfkANQAgCyo7AjALGiw2AFAaBSAKDGkAQAANBXw1AHAZPRANGRBhfmW1IA05DSAN_Qgd
8DFyAiALGjiCCzkAIAwEHwDAHAVwPQk9AC0ZEFEgvGURHT4AJwkNPgASKj0AAHoAIBAEqwChQAUa
HAQNIAFAXagCkEEgMRCREA05HTkAMR3wMOIAMBAtADcAoRAMGgwABRAFAAVZA0AMCwwNKHTwASA9
GQ0gHTkQQSBBAIEQDUk7AFEKDfAwDXIDKR0gOwAAugLBHQUsBUEeASAtKQ0QYAIQEDpikA1JLRAN
WS35ATsAQDwKDB2IBQM5ADEMIA2_ALYMGgwFAAFeASAdOTsAYHEQHVktAPYBYA35Ag3wL4kBgBoM
HQQMGhwLwwEWPEAAkywKBQB_ARANST4AegBREGEgDWk_ABE6ogMzOgsK1AEABgAiEA3zAEAFAI4Q
eVoGfgBQUSAdaR32AAtAAAD6BCAFHYkAkgwKBA0FCgwdMD8AEU09AAHHVmdRIA15DSA8AGBaDAVs
ChzMARAVegBADAocRblTsA4xLgEAPRkNAB1ZD2EAFAZGWS0ALTgA4cocKjwKLBoLOgw6CwwN2TMA
rwMgDWkvAJUQURAdSR0gHVkvAGAM_gAcOhyWA2E6CyoMBQ13HqFNCQ0ADRkNOQBB4V5mLTktEB1p
MwDhmhxqGyorChwaHBo8NQ2vHvEJXQANGR0pAEEAYRBRAB1JHRAdeS0ADfkBMADxBQsqHAUEDAQl
7AocBBUUBQw6GwUAmABAEC0AHUIBgQBBAHEAUQANOABFDQkdEDkAUAwNAP0CpAIwDQA9bwYSCjoA
gC0QHQBdCQ0QdmIgUR3DARB5IQViDfkAHfAuxQWg9QENNTxVBAwKPDMAEBCsWvIBHQB9ECEQYSAx
LSkdIB3JDaEAATAA4RoMKkxKDAosSgwqDCpsMgBhKQ0wHRk9MQAQET8DoBAt2Q0A_QMN8C2cFxFK
nQTgCgsKHBosKix6HAocCgV8HwI2AAB4ZrYgEQAtKR0AHckNGTgAUCocKgxqOQAgHAp1ASAsGgwH
ABktUwANOS0AOgCCEDEdKQ0gDdk5AAChADALmhtxAHAqG0oLakwFdwoBZwL1AR0JPQkAISBhEDEN
KR0QHdlqALANDDocFBwEHBQMFZs8cQRMBBU8Cnw5ADAADUl2ARNNOABlGS0AHfkCNwAB0Qe5nRBt
AB0QDQANfBozANQQERBxECEdGQ0QHfkDMwCACgsqDPUNLDrJCAAtADANWQ0_AiApPXZnQBARAA3y
BjT5BB0uAPAHOhwKCxocOgsKXBoMWhw6HBoFACENSVgHASoAADYAQSABAA1lAFEEDQD5AqIBwXob
OgsaGwosOhsaK3kBECyJfiZJLWsAMEAtIKACFRkzAGAaDEpcGmy-B_EKHCoMKgwaLAUgDTk9CY0H
iDARAIFQHRAdMgDyBgoLCkwaTBoMGjxKHBo8CmwFEA05TS8AICAhLwAiAC0vAPACDfkC8BgB8AUN
CgtqCwocCivyc0CaC2os8gUpOV0zADcN_QcxACD8HSIAEE1EAD1JMBEhAGAGAf0eKX1AADBJDSAf
ADQ9_QSgAENVHTAtHAABJQFQUC35BB0cAHABHfBUfVltGgAhWQ0aAAB0BQEYADFVTXkYABFpFwAg
_QtKAGod8FUtiY0UAHAN8FcdSQ0pSgEgDWnbNCRADRkAdVhNCQ1ZLTAXADAHPRDKAWBarVANaUAR
AJkIHSD5A-BcjWAQAHZdTZANaQ0wEQAUbA8AMQVdEHcDCBEAgD3ZDfA3AfAkEwDQoSAN_QY9YO3w
NiHwIxEAILEQEQBBEAHwSiIA8AdQEaAN_QYtEAEu4fBuDWnwAw35BS0gnC4o8G0PAAUdABAdyS8g
8Fh-AQIRABANOSSg8Fch8AQNaQ3wAhIAAIo0AyMABBIAANsoBVIAmA0QLjE_ES4hLhMAAIAOA6Qj
JhEeGQAhLWAVACcQAS0ANC1QARUABJgAUAIdCT0wOwUAFgAkDhEXAGEBHUkdABEXAADqNWFwDWnw
BPlRCQAtaAFGAEEOAfBxLQBi6W0pHUEQKTgTcroAgAFNSQ1gEfB3OAD3AQ3JnSkN8IFt8AX9AQAN
AF2QEh9f6BIpD_4iKA87AP----------eVBtPTh9fQ==
:: gfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE2OjQ3OjIyIixtb2RpZmllZD0iMjAyNS0w
Ni0wNCAxODo1ODoxMiJdXQ==
:: map/
:: map/0.map
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE0OjA1OjM1Iixtb2RpZmllZD0iMjAyNS0w
Ni0wNCAxODo1ODoxMiIscmV2aXNpb249MTc4MF1dbHo0AKgAAABYEAAA8Ah7e2JtcD11c2VyZGF0
YSgiaTE2IiwzMgMALyIwAQD------yM9NDgwAQAvNDABAF8iNDEEAA8BANEfNBUABS80MAEAZ181
MDAwNoQAZFMzMDAwMQgALzcwAQBfFzIEAB44iAEPAQD---------nvEIIiksaGlkZGVuPWZhbHNl
LHBhbl94PTAIANJ5PTAsdGlsZV9oPTE2CgAQdwoAgHpvb209MX19
:: map/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE2OjQ3OjIyIixtb2RpZmllZD0iMjAyNS0w
Ni0wNCAxODo1ODoxMiJdXQ==
:: sfx/
:: sfx/0.sfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE0OjA1OjM2Iixtb2RpZmllZD0iMjAyNS0w
Ni0wNCAxODo1ODoxMiIscmV2aXNpb249MTgyMF1dbHo0ACcGAADJGwAA8idweHUAAygAAAQABA9A
EAIOAAGgASACoA4ADxAADfDJDg9ID0IPQwQFBgcAA5APQQ9IYAOQD0IHABJDBwASRAcAj0UPSFAC
A-D-AQDr8QOCARAGDyAQASABIAHwAA8SEAIOAPkuDyEPqhABD-8gDzEgAVABCSAPPiAPVPAGAQgg
D3FQAvCMDygP--DGD-gKD-8PgA-3Dw0BcA9iD0EPTg9HwFMAQAIQAgxRALElDxYP8BEwD1fwwzwA
WgYPIfCvQAAQZT4AcA9BD0cPRaBEABwdRAD6FSEgAQ-_EAQPVg8xgA8RAhAEDg8oQAIgAQQQBAzw
owsPngLwxVMAAJUA-QsyD24Pbw9kD2UPLQ9mD20PYg9hH3MgARAGDGAAEQr0AB0N8wDBQSAPShAC
DxfwiwsN9gAVDWIANGQPSfUAAUQAUQUHDzYRUwAhDx9UAFADEAFADK8A_SYgDFABAhABMA-U8KML
DdABUA8VDyUPKg8vDzUPPw9KD1oPag96D38Pjw_fD7kPzw-p8J8BAGwAoGwPQQ9TD0UPUrAfAREe
bwBHD_EAEcIA0w-3DwUAESAPoiAPqFB1ADAgAeDFAPkSHSAPDxACDz7wAwkgDyogDzMgDy3wag8S
Cw0JsAGgCfCsbAACjQEA3AAvRaAsAQJrIAEwDvDDEAEv8AksAP----88H-8BACZfQwEQBgJmAABi
IAQPLw9aPAaADxMADjACARAVAJEh8KIGDwwP6gpABh8NPwYIhWwPdQ90D2UwYQB1DwUPFQ_w0GUA
-xoQAQ8FDzoP8QEED4gP6QFwAQgQBA84D8IBQA__8KsED_UL8AUJ8K0BAGkACnJhD2MPaQ9krAYQ
AO4FFiHPAGEGDyUPEhHRAJIP-RAED0QAAXDTAJAQUAIPKhABBhDTAO_jD0EADwvwBQ8UAAnwrW8A
Ct9zD3QfZQ9sD3APYQ9uEwluEHDOCfMwATAPMP0vAP0vDP0v8HAOAAQPDTAPKQ8vDA8rDzcPKg8b
DyQPKgsPJA8sDyH9I8D9Iw8RDw8PDQ8RDwsPEA8OCgBADxz9Iz4A8QQPFAIwDzAPIv0uAQL9Lg8N
Bv0uVQAfBVQACBLDVAAUBVMAGgVSAMK2ATAPKf0vBP0vDxCjADAHESC0ACUPBbUATwdA-bAIAHYf
-wEACh8GJgAJ0QUOAA8MDjAfMx81PzcGAFE6HzUfMwQAoTcdPzofMB8zPy4ZABQ8GQDlPy4-K-89
Ch34FA9aD0gEAD85Dy4QAAoDBAAfHS0AEgwQAAwYACE5D_cBAbwAD6MABAIKADAPNw8GACAwDw4A
oDcfNQ8zDQ8wDy7vAE4-NfgwXQAPEAAIDBgACyAAEy8EABUPBABgDSkPSAkKKAAoCQqzAAB8AACj
APAAPykfNx0fNR0fOh88HzofFgABpwCIPzo-PH8w_DA8AA8GAAERHQMABAIACBoADBAAAAYAhQ8k
Dx0PFw8SOQEPIQEPDyMACxAwxAAi_DBuADEpCikIAEoJDSkKfAAPHgAJD4wAEwFpAA-oAQEPgQAX
DwoAAQYOAAiLADF-On_JAZF-MH83fzV-M39iAAhBAQ8OAAEIBgAOKAAPDgAbBIoA-wL-GAYd8g4d
cvEGHfEOHXEJCgIAAQcBAg8fAAoEVQCR-QwS-Q4S-Q4RAwAgCQoEABAdHQC-Bg4wDysNCw0LLQsG
ABaPDz4NAw0DLQMGABZfDA0MDQwGABgDmQAf8gkBOA9TAEcPWwEGDLYFD38AZA93ADwPygBoD0kB
bw8kAANG----AycABHcHHwMLAAAPAQD-CBFrYAGjX1QdVR01PTU9VQgAdVEdUR0xPTEIAAm7AQEH
ABU9BQAPGAABA7gBD_oIHGA78Qod8RRBAAThBQoKAANlAA4bAAwlAAIOAARoBg_4AlxPBg4wVU8B
Rw9ECC2AO-EDDfEPDbFYAA-HBw0OHgAPVQHBD4sCAw9sARAk8SNHAQYzAQYKAAYOAA9RAQIPpgLl
AIMCD-4DBUADDfEcSgAPKQEHARQADwoAAgYOAA9RAb4CwQwfO8AMC0HxBh0RPQUGBQEPxQw7D08B
tgxzDC978XIMXR--AQAyUP----_K
:: sfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE2OjQ3OjIyIixtb2RpZmllZD0iMjAyNS0w
Ni0wNCAxODo1ODoxMiJdXQ==
:: asteroid.lua
--[[pod_format="raw",created="2025-05-20 13:51:18",modified="2025-06-03 13:32:01",revision=865]]
function new_asteroid(position)
	return{
		_position=position,
		_speed=new_point(0,2),		
		_sprites,
		_sprite=0,
		_flipx,
		_flipy,
		
		health=0,
		threat=0,
		name="dummy",
		init=function(self)
			self._sprites=game.sprites1
			self.flipx=rnd() < 0.5
			self.flipy=rnd() < 0.5
		end,
		update=function(self)
			self._position+=self._speed 
			if(is_point_on_screen(self._position)==false) then
				self:kill(3)
			end
		end,
		draw=function(self)
			spr(self._sprites[self._sprite].bmp,self._position.x,self._position.y,self.flipx,self.flipy)
		end,
		damage=function(self,d)
			self.health-=d
			if(self.health<1) then
				self:kill(2)
			end
			return self.health
		end,
		kill=function(self,mode)--0 hit, 1 deflected, 2 destroyed, 3 passed
			if(mode!=3) then			
				local particle_system= new_particle_system()
	 			particle_system.spawn_rate=1
				particle_system.lifetime=10
				particle_system.position=self._position:round(tileSize)
				particle_system.particle_position_r=new_point(-8,-8)
				particle_system.particle_speed_r=new_point(-.5,-.5)
				particle_system.particle_halflife=0.99
				particle_system.particle_animation={127}
				particle_system.particle_flipx_r=true
				particle_system.particle_flipy_r=true
				add(game.particle_systems,particle_system)
			end
			del(game.asteroids,self)
		end
	}
end

function new_small_asteroid(position)
	local ret = new_asteroid(position)
	ret.threat=1
	ret._sprite=65
	ret.name="swarm"
	ret.basekill=ret.kill
	ret.health=1
	ret.kill=function(self,mode)
		if(mode==0 or mode==2) then
			play_sfx(1,channels.enemy)
		elseif(mode==1) then
			play_sfx(3,channels.enemy)
		end
		self:basekill(mode)
	end
	return ret
end
function new_large_asteroid(position)
	local ret = new_asteroid(position)
	ret.threat=2
	ret._sprite=64
	ret.name="large"
	ret.basekill=ret.kill
	ret.health=30
	ret.kill=function(self,mode)
		if(mode==0) then
			play_sfx(0,channels.enemy)
		end
		self:basekill(mode)
	end
	return ret
end
:: camera.lua
--[[pod_format="raw",created="2025-05-19 23:50:11",modified="2025-05-26 01:15:35",revision=73]]
camera_helper={
camera_point =new_point(0,0),
camera_desired_point =new_point(0,0),
camera_shake =new_point(0,0),
shake_intensity=0,
shake_timer=0,
shake_time=0,
camera_shake =new_point(0,0),
-- Function to set the camera position and update the variables
set_camera=function(self,point,instant)
		self.camera_desired_point=point
	if(instant) then
		self.camera_point=point
	end

end,
get_camera=function(self)
    return self.camera_point
end,	
update_camera=function(self)
	self.camera_point=self.camera_point:lerp(self.camera_desired_point,0.5)
	 self:calculate_shake()
	local c=self.camera_point+self.camera_shake
	 camera(c.x, c.y)
end,

shake_camera= function(self,intensity, t )
	self.shake_intensity=intensity
	self.shake_timer=t
	self.shake_time=t
end,
calculate_shake = function(self)
	if(self.shake_timer>0) then		
		local strength=self.shake_intensity*self.shake_timer/self.shake_time
		local point=new_point(random(-1)*strength,random(-1)*strength)
		self.camera_shake=self.camera_shake:lerp(point,0.5)
		self.shake_timer-=1
	else
		self.camera_shake =new_point(0,0)
	end
end
}
:: director.lua
--[[pod_format="raw",created="2025-05-26 03:25:48",modified="2025-06-04 18:58:12",revision=702]]
new_director=function()
	return{
	scenes={},
	current_scene=1,
	total=0,
	timer=0,
	goal=10,
	init=function(self)					
		for i=1,#self.scenes do
			self.total+=self.scenes[i]._duration
		end
		
	end,
	update=function(self)
		local scene=self.scenes[self.current_scene]
		self.timer+=1
		if(scene:update()) then
			if(#self.scenes>self.current_scene) then
				self.current_scene+=1
			else
				self:kill()
			end			
		end
	end,
	draw=function(self)
		local scene=self.scenes[self.current_scene]
		scene:draw()
		--print_right(scene._timer.."/"..scene._duration,0)
		local fill=self.timer/self.total
		rect(screenWidth-101,0,screenWidth-1,10,31)
		rectfill(screenWidth-101*fill ,0,screenWidth-1,10,31)
	end,
	kill=function(self)
		game:finish_level()
	end
}
end
new_scene=function(duration,rate,action)
	return{
		_duration=duration,
		_timer=0,	
		left=0,
		right=480-16,
		message="Smooth flying",
		spawn_timer=new_timer(rate,0,action), 
		update=function(self)
			self.spawn_timer:update(self)
			self._timer+=1
			return self._timer>=self._duration
		end,
		draw=function(self)
			if(self._timer<=60*3)then
				local c=8
				if(self._timer%60>30) then
					c=24
				end
				print_centered(self.message,0,c)
			end
		end	
	}
end
new_pirate_scene=function(duration,rate)
	local ret=new_scene(duration,rate,function(self)
		--local pos= new_point(self.left+random(self.right-self.left),-16)
		local pirate =new_pirate()
		pirate:init()
		add(game.pirates,pirate)	
	end)
	ret.message="Beware of pirates"	
	return ret
end
new_asteroid_scene=function(duration,rate)
	local ret=new_scene(duration,rate,function(self)
		local pos= new_point(self.left+random(self.right-self.left),-16)
		local asteroid =pick_random(self.asteroids)(pos)
		asteroid:init()
		add(game.asteroids,asteroid)	
	end)
	ret.message="Avoid the asteroids"	
	ret.asteroids={new_small_asteroid,new_large_asteroid}
	return ret
end

new_parts_scene=function(duration,rate)
	local ret=new_scene(duration,rate,function(self)
		local pos= new_point(self.left+random(self.right-self.left),-16)
		local part =new_free_part(pos,pick_random(self.parts)())
		part:init()
		add(game.free_parts,part)	
	end)
	ret.message="Get the parts"	
	ret.parts={
				new_part_engine,new_part_engine,
				new_part_bulkhead,
				new_part_scaffold,new_part_scaffold,
				new_part_gun,
				new_part_shield
				}
	return ret
end

new_cargo_scene=function(duration,rate)
	local ret=new_scene(duration,rate,function(self)
		local pos= new_point(self.left+random(self.right-self.left),-16)
		local part =new_free_part(pos,pick_random(self.parts)())
		part:init()
		add(game.free_parts,part)	
	end)
	ret.message="Get the cargo"	
	ret.parts={
				new_part_cargo1,
				new_part_cargo2,
				new_part_cargo3
				}
	return ret
end
:: error_explorer.lua
b64$LS1bW3BvZF9mb3JtYXQ9InJhdyIsY3JlYXRlZD0iMjAyNS0wNS0xOSAxNTowMjoyNiIsbW9k
aWZpZWQ9IjIwMjUtMDUtMjAgMTk6MTI6NDAiLHJldmlzaW9uPTQxMl1dCi0tICMgcGljb3Ryb24g
ZXJyb3IgZXhwbG9yZXIKLS0KLS0gYnkga2lyYQotLQotLSB2ZXJzaW9uIDAuMC42Ci0tCi0tIGFu
IGludGVyYWN0aXZlIGVycm9yIHNjcmVlbiBmb3IgcGljb3Ryb24uCi0tIG9uIGVycm9yLCBzaG93
cyB0aGUgc3RhY2ssIGxvY2FsIHZhcmlhYmxlcywKLS0gYW5kIHRoZSBzb3VyY2UgY29kZSB3aGVu
IGF2YWlsYWJsZS4KLS0KLS0gIyMgdXNhZ2UKLS0KLS0gYGluY2x1ZGVgIG9yIGByZXF1aXJlYCBg
ZXJyb3JfZXhwbG9yZXIubHVhYAotLSBpbiB5b3VyIHByb2dyYW0gX2FmdGVyXyBkZWZpbmluZyB5
b3VyIGBfaW5pdGAsCi0tIGBfdXBkYXRlYCwgYW5kIGBfZHJhd2AgZnVuY3Rpb25zLgotLQotLSBw
cmVzcyBgdXBgIGFuZCBgZG93bmAgdG8gbW92ZSB1cCBhbmQgZG93biBvbgotLSB0aGUgc3RhY2ss
IHByZXNzIGB4YCBvciBgc3BhY2VgIHRvIHRvZ2dsZSBmb250Ci0tIHNpemUuIGNsaWNrIG9uIHRh
YmxlcyBpbiB0aGUgdmFyaWFibGUgdmlldyB0bwotLSBleHBhbmQgdGhlbS4KLS0KLS0gIyMgaG93
IGl0IHdvcmtzCi0tCi0tIGluIG9yZGVyIHRvIGNhdGNoIGVycm9ycyBhbmQgaW5zcGVjdCBydW50
aW1lCi0tIHN0YXRlLCB0aGlzIHNjcmlwdCByZXBsYWNlcyBgX2luaXRgLCBgX3VwZGF0ZWAKLS0g
YW5kIGBfZHJhd2AgZnVuY3Rpb25zIHdpdGggb25lcyB0aGF0IGNhbGwgdGhlCi0tIG9yaWdpbmFs
IG9uZXMgaW5zaWRlIGEgY29yb3V0aW5lLgotLQotLSB3aGVuIHRoZXJlJ3MgYW4gZXJyb3IsIGl0
IHVzZXMgbHVhJ3MgZGVidWcKLS0gbGlicmFyeSB0byBpbnNwZWN0IHRoZSBjb3JvdXRpbmUuIGEg
Y29weQotLSBvZiB0aGUgZXJyb3IgaXMgYWxzbyBwcmludGVkIHRvIHRoZSBjb25zb2xlCi0tIHdp
dGggcHJpbnRoIGlmIHlvdSdyZSBydW5uaW5nIHBpY290cm9uIGZyb20KLS0gdGhlIGNvbW1hbmQg
bGluZS4KLS0KLS0gdGhlIGZvbGxvd2luZyBkZWJ1ZyBhcGlzIGFyZSB1c2VkOgotLQotLSAtIGBk
ZWJ1Zy5nZXRpbmZvYAotLSAtIGBkZWJ1Zy5nZXRsb2NhbGAKLS0gLSBgZGVidWcuZ2V0dXB2YWx1
ZWAKLS0gLSBgZGVidWcudHJhY2ViYWNrYAotLQotLSAjIyB2ZXJzaW9uIGhpc3RvcnkgCi0tCi0t
IHZlcnNpb24gMC4wLjYKLS0gLSBvbiBlcnJvcjoKLS0gICAtIHNob3cgY3Vyc29yCi0tICAgLSBt
YWtlIHdpbmRvdyByZXNpemFibGUKLS0gLSBhdXRvbWF0aWNhbGx5IGFkanVzdCBsYXlvdXQgdG8g
d2luZG93IHNpemUKLS0gLSBzdXBwb3J0IHlpZWxkaW5nIChzaW5jZSBmZXRjaCBzb21ldGltZXMg
eWllbGRzKQotLQotLSB2ZXJzaW9uIDAuMC41Ci0tCi0tIC0gZnV0dXJlIHByb29maW5nOiBncmFj
ZWZ1bGx5IGhhbmRsZSB3aGVuCi0tICAgdmFyaW91cyBwYXJ0cyBvZiB0aGUgYGRlYnVnYCBtb2R1
bGUgYXJlbid0Ci0tICAgYXZhaWxhYmxlCi0tCi0tIHZlcnNpb24gMC4wLjQKLS0KLS0gLSBhbHNv
IGNhdGNoIGVycm9ycyBpbiBgX2luaXRgCi0tCi0tIHZlcnNpb24gMC4wLjMKLS0KLS0gLSBhdXRv
bWF0aWNhbGx5IGNob29zZSB0aGUgcmlnaHQgc3RhY2sgZnJhbWUKLS0gICBiYXNlZCBvbiB0aGUg
ZXJyb3IgbWVzc2FnZQotLSAtIG1vcmUgdGhvcm91Z2hseSBwcm90ZWN0IGZyb20gZXJyb3JzIGlu
IGVycm9yCi0tICAgZXhwbG9yZXIgaXRzZWxmCi0tCi0tIHZlcnNpb24gMC4wLjIKLS0KLS0gLSBk
b24ndCByZWdlbmVyYXRlIHN0YWNrIGluZm8gZXZlcnkgZHJhdwotLSAtIHNjcm9sbCBzdGFjayBh
bmQgdmFyaWFibGVzIGxpc3Qgd2l0aCBtb3VzZXdoZWVsCi0tIC0gY2xpY2sgb24gc3RhY2sgdG8g
c3dpdGNoIHN0YWNrIGZyYW1lcwotLSAtIGNsaWNrIG9uIHRhYmxlcyBpbiB2YXJpYWJsZXMgdmll
dyB0byBleHBhbmQgdGhlbQotLSAtIGVzY2FwZSBzdHJpbmdzIHdoZW4gcHJpbnRpbmcgdGhlbQot
LQotLSB2ZXJzaW9uIDAuMC4xCi0tCi0tIC0gYWRqdXN0IGNvbG9ycwotLSAtIGNvZGUgY2xlYW51
cAotLSAtIHVzZSBgYnRucGAgaW5zdGVhZCBvZiBga2V5cGAKLS0gLSBzbGlnaHRseSBtb3JlIHRo
b3JvdWdoIGByZXNldGAKLS0gLSBkb24ndCBzaG93IHRlbXBvcmFyaWVzCi0tCi0tIHZlcnNpb24g
MC4wLjAgKHByZXJlbGVhc2UpCi0tCi0tIC0gaW5pdGlhbCBkaXNjb3JkIGJldGEKCi0tICMjIGxp
Y2Vuc2UKLS0KLS0gQ29weXJpZ2h0IDIwMjQgS2lyYSBCb29tCi0tIAotLSBQZXJtaXNzaW9uIGlz
IGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcg
YSBjb3B5Ci0tIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBm
aWxlcyAodGhlIOKAnFNvZnR3YXJl4oCdKSwgdG8KLS0gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0
aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUKLS0gcmln
aHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3Vi
bGljZW5zZSwgYW5kL29yCi0tIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBl
cm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzCi0tIGZ1cm5pc2hlZCB0byBkbyBz
bywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6Ci0tCi0tIFRoZSBhYm92ZSBj
b3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1
ZGVkIGluCi0tIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3
YXJlLgotLSAKLS0gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIOKAnEFTIElT4oCdLCBXSVRIT1VU
IFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTCi0tIE9SIElNUExJRUQsIElOQ0xVRElORyBC
VVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAotLSBG
SVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBO
TyBFVkVOVCBTSEFMTAotLSBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFC
TEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUgotLSBMSUFCSUxJVFksIFdIRVRIRVIg
SU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORwotLSBG
Uk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNF
IE9SIE9USEVSCi0tIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4KCi0tLS0gdXRpbCAtLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpsb2NhbCBmdW5jdGlvbiBmaWxlbmFt
ZV9vZiAocGF0aCkKICByZXR1cm4gcGF0aDptYXRjaCAoJ1teL10qJCcpCmVuZAoKbG9jYWwgZnVu
Y3Rpb24gc2FmZV90b3N0cmluZyAodmFsdWUpCiAgaWYgdHlwZSAodmFsdWUpID09ICdzdHJpbmcn
IHRoZW4KICAgIHJldHVybiBzdHJpbmcuZm9ybWF0ICgnJXEnLCB2YWx1ZSkKICBlbHNlCiAgICBs
b2NhbCBzdWNjZXNzLCB2YWx1ZV9zdHJpbmcgPSBwY2FsbCAodG9zdHJpbmcsIHZhbHVlKQogICAg
cmV0dXJuIHN1Y2Nlc3MgYW5kIHZhbHVlX3N0cmluZwogICAgICAgICAgICAgICAgICAgb3IgKCdl
cnJvciBkdXJpbmcgdG9zdHJpbmc6ICcgLi4gdG9zdHJpbmcgKHZhbHVlX3N0cmluZykpCiAgZW5k
CmVuZAoKbG9jYWwgZnVuY3Rpb24gZ2V0X2xpbmVzICh0ZXh0KQogIGxvY2FsIGxpbmVzID0ge30K
ICBmb3IgbGluZSBpbiB0ZXh0OmdtYXRjaCAoIiguLSlccj9cbiIpIGRvCiAgICB0YWJsZS5pbnNl
cnQgKGxpbmVzLCBsaW5lKQogIGVuZAogIGxvY2FsIGxhc3RfbGluZSA9IHRleHQ6bWF0Y2ggKCco
W15cbl0qKSQnKQogIGlmIGxhc3RfbGluZSBhbmQgbGFzdF9saW5lIH49ICcnIHRoZW4KICAgIHRh
YmxlLmluc2VydCAobGluZXMsIGxhc3RfbGluZSkKICBlbmQKICByZXR1cm4gbGluZXMKZW5kCgps
b2NhbCBmdW5jdGlvbiBjb21wYXJlX2tleXMgKGEsIGIpCiAgbG9jYWwgdGEgPSB0eXBlIChhLmtl
eSkKICBsb2NhbCB0YiA9IHR5cGUgKGIua2V5KQogIGlmIHRhIH49IHRiIHRoZW4KICAgIHJldHVy
biB0YSA8IHRiCiAgZW5kCiAgaWYgdGEgPT0gJ251bWJlcicgb3IgdGEgPT0gJ3N0cmluZycgdGhl
bgogICAgcmV0dXJuIGEua2V5IDwgYi5rZXkKICBlbHNlCiAgICByZXR1cm4gc2FmZV90b3N0cmlu
ZyAoYS5rZXkpIDwgc2FmZV90b3N0cmluZyAoYi5rZXkpCiAgZW5kCmVuZAoKbG9jYWwgZnVuY3Rp
b24gc29ydCAodCwgZikKICAtLSBpbnNlcnRpb24gc29ydAogIGYgPSBmIG9yIGZ1bmN0aW9uIChh
LCBiKSByZXR1cm4gYSA8IGIgZW5kCiAgZm9yIGkgPSAxLCAjdC0xIGRvCiAgICBsb2NhbCB2YWwg
PSB0W2krMV0KICAgIGxvY2FsIGogPSBpCiAgICB3aGlsZSBqID49IDEgYW5kIG5vdCBmKHRbal0s
IHZhbCkgZG8KICAgICAgdFtqKzFdID0gdFtqXQogICAgICBqID0gaiAtIDEKICAgIGVuZAogICAg
dFtqKzFdID0gdmFsCiAgZW5kCmVuZAoKbG9jYWwgZnVuY3Rpb24gYXBwcm9hY2ggKGZyb20sIHRv
KQogIHJldHVybiBmcm9tICsgKHRvIC0gZnJvbSkgKiAwLjI1CmVuZAoKbG9jYWwgZnVuY3Rpb24g
cm91bmQgKHZhbHVlKQogIHJldHVybiBtYXRoLmZsb29yICh2YWx1ZSArIDAuNSkKZW5kCgpsb2Nh
bCBmdW5jdGlvbiBwYXJzZV9tZXNzYWdlX2Zvcl9sb2NhdGlvbiAobXNnKQogIGxvY2FsIHBhdGgs
IGxpbmUsIGVyciA9IG1zZzptYXRjaCAoJ14oW146XSspOiglZCspOiguKikkJykKICByZXR1cm4g
cGF0aCwgdG9udW1iZXIgKGxpbmUpLCBlcnIKZW5kCgotLS0tIHN0YXRlIC0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKbG9jYWwgX0cgPSBfRwpsb2NhbCBlcnJvcl9tZXNz
YWdlCmxvY2FsIGVycm9yX3RocmVhZApsb2NhbCBlcnJvcl90cmFjZWJhY2sKbG9jYWwgaW5pdF9k
b25lID0gZmFsc2UKbG9jYWwgdXNlX3NtYWxsX2ZvbnQgPSBmYWxzZQpsb2NhbCBtb3VzZV93YXNf
Y2xpY2tlZCA9IGZhbHNlCgotLSBzdGFjayB2aWV3CmxvY2FsIHN0YWNrX2ZyYW1lcyA9IHt9Cmxv
Y2FsIGN1cnJlbnRfc3RhY2tfaW5kZXggPSAxCmxvY2FsIGhvdmVyZWRfc3RhY2tfaW5kZXggPSBm
YWxzZQpsb2NhbCBtb3VzZV9vdmVyX3N0YWNrID0gZmFsc2UKbG9jYWwgc3RhY2tfbWF4X3Njcm9s
bCA9IDAKbG9jYWwgc3RhY2tfc2Nyb2xsID0gMApsb2NhbCBzdGFja19zY3JvbGxfc21vb3RoID0g
MAoKLS0gdmFyaWFibGVzIHZpZXcKbG9jYWwgdmFyaWFibGVzID0ge30KbG9jYWwgaG92ZXJlZF92
YXJpYWJsZSA9IGZhbHNlCmxvY2FsIHZhcmlhYmxlc19tYXhfc2Nyb2xsID0gMApsb2NhbCB2YXJp
YWJsZXNfc2Nyb2xsID0gMApsb2NhbCB2YXJpYWJsZXNfc2Nyb2xsX3Ntb290aCA9IDAKbG9jYWwg
bW91c2Vfb3Zlcl92YXJpYWJsZXMgPSBmYWxzZQoKLS0gc291cmNlIHZpZXcKbG9jYWwgc291cmNl
X2xpbmVzID0ge30KCgotLS0tIG1haW4gZXZlbnRzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLQoKbG9jYWwgZnVuY3Rpb24gcmVidWlsZCAoKQogIC0tIHJlYnVpbGQgc3RhY2sgZnJh
bWUgaW5mbwogIHN0YWNrX2ZyYW1lcyA9IHt9CiAgdmFyaWFibGVzID0ge30KICBzb3VyY2VfbGlu
ZXMgPSB7fQogIHZhcmlhYmxlc19zY3JvbGwgPSAwCiAgdmFyaWFibGVzX3Njcm9sbF9zbW9vdGgg
PSAwCgogIGZvciBpID0gMCwgMjAgZG8KICAgIGxvY2FsIGluZm8gPSBkZWJ1Zy5nZXRpbmZvIChl
cnJvcl90aHJlYWQsIGkpCiAgICBpZiBub3QgaW5mbyB0aGVuCiAgICAgIGJyZWFrCiAgICBlbmQK
CiAgICBpZiBpbmZvLnNob3J0X3NyYyB0aGVuCiAgICAgIHRhYmxlLmluc2VydCAoc3RhY2tfZnJh
bWVzLCB7CiAgICAgICAgZmlsZW5hbWUgPSBmaWxlbmFtZV9vZiAoaW5mby5zaG9ydF9zcmMpLAog
ICAgICAgIHBhdGggPSBpbmZvLnNob3J0X3NyYywKICAgICAgICBsaW5lID0gaW5mby5jdXJyZW50
bGluZSwKICAgICAgICBkZXB0aCA9IGksCiAgICAgICAgZm5fbmFtZSA9IChpbmZvLm5hbWUgb3Ig
KGZpbGVuYW1lX29mIChpbmZvLnNob3J0X3NyYykgLi4gJzonIC4uIHRvc3RyaW5nIChpbmZvLmxp
bmVkZWZpbmVkKSkpLAogICAgICAgIHNvdXJjZSA9IGluZm8uc291cmNlLAogICAgICB9KQogICAg
ZW5kCiAgZW5kCgogIGxvY2FsIGZyYW1lID0gc3RhY2tfZnJhbWVzIFtjdXJyZW50X3N0YWNrX2lu
ZGV4XQoKICBpZiBub3QgZnJhbWUgdGhlbgogICAgcmV0dXJuCiAgZW5kCgogIC0tIHJlYnVpbGQg
dmFyaWFibGVzCiAgZG8KICAgIGlmIGRlYnVnLmdldGxvY2FsIHRoZW4KICAgICAgbG9jYWwgbG9j
YWxfaW5kZXggPSAxCiAgICAgIHJlcGVhdAogICAgICAgIGxvY2FsIG5hbWUsIHZhbHVlID0gZGVi
dWcuZ2V0bG9jYWwgKGVycm9yX3RocmVhZCwgZnJhbWUuZGVwdGgsIGxvY2FsX2luZGV4KQogICAg
ICAgIGlmIG5hbWUgdGhlbgogICAgICAgICAgaWYgbmFtZSB_PSAnKHRlbXBvcmFyeSknIHRoZW4K
ICAgICAgICAgICAgdGFibGUuaW5zZXJ0ICh2YXJpYWJsZXMsIHsKICAgICAgICAgICAgICBrZXkg
PSBuYW1lLAogICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUsCiAgICAgICAgICAgIH0pCiAgICAg
ICAgICBlbmQKICAgICAgICAgIGxvY2FsX2luZGV4ID0gbG9jYWxfaW5kZXggKyAxCiAgICAgICAg
ZW5kCiAgICAgIHVudGlsIG5vdCBuYW1lCiAgICBlbHNlCiAgICAgIHRhYmxlLmluc2VydCAodmFy
aWFibGVzLCB7CiAgICAgICAgZXJyb3IgPSAnbm8gZGVidWcuZ2V0bG9jYWwsIGNhblwndCBzaG93
IGxvY2FscycKICAgICAgfSkKICAgIGVuZAoKICAgIGlmIGRlYnVnLmdldHVwdmFsdWUgdGhlbgog
ICAgICBsb2NhbCBpbmZvID0gZGVidWcuZ2V0aW5mbyAoZXJyb3JfdGhyZWFkLCBmcmFtZS5kZXB0
aCkKICAgICAgaWYgaW5mbyBhbmQgaW5mby5mdW5jIHRoZW4KICAgICAgICBsb2NhbCB1cHZhbHVl
X2luZGV4ID0gMQogICAgICAgIHJlcGVhdAogICAgICAgICAgbG9jYWwgbmFtZSwgdmFsdWUgPSBk
ZWJ1Zy5nZXR1cHZhbHVlIChpbmZvLmZ1bmMsIHVwdmFsdWVfaW5kZXgpCiAgICAgICAgICBpZiBu
YW1lIHRoZW4KICAgICAgICAgICAgdGFibGUuaW5zZXJ0ICh2YXJpYWJsZXMsIHsKICAgICAgICAg
ICAgICBrZXkgPSBuYW1lLAogICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUsCiAgICAgICAgICAg
IH0pCiAgICAgICAgICAgIHVwdmFsdWVfaW5kZXggPSB1cHZhbHVlX2luZGV4ICsgMQogICAgICAg
ICAgZW5kCiAgICAgICAgdW50aWwgbm90IG5hbWUKICAgICAgZW5kCiAgICBlbHNlCiAgICAgIHRh
YmxlLmluc2VydCAodmFyaWFibGVzLCB7CiAgICAgICAgZXJyb3IgPSAnbm8gZGVidWcuZ2V0dXB2
YWx1ZSwgY2FuXCd0IHNob3cgdXB2YWx1ZXMnCiAgICAgIH0pCiAgICBlbmQKICBlbmQKCiAgLS0g
cmVidWlsZCBzb3VyY2UgbGluZXMKICBsb2NhbCBzb3VyY2UgPSBmcmFtZS5zb3VyY2UKICBpZiBz
b3VyY2UgdGhlbgogICAgaWYgc3RyaW5nLnN1YiAoc291cmNlLCAxLCAxKSA9PSAnQCcgdGhlbgog
ICAgICBsb2NhbCBmaWxlbmFtZSA9IHN0cmluZy5zdWIgKHNvdXJjZSwgMiwgI3NvdXJjZSkKICAg
ICAgc291cmNlID0gZmV0Y2ggKGZpbGVuYW1lKQogICAgZW5kCiAgICBpZiBzb3VyY2UgYW5kIHR5
cGUgKHNvdXJjZSkgPT0gJ3N0cmluZycgdGhlbgogICAgICBzb3VyY2VfbGluZXMgPSBnZXRfbGlu
ZXMgKHNvdXJjZSkKICAgIGVuZAogIGVuZAplbmQKCmxvY2FsIGZ1bmN0aW9uIGVycm9yX3VwZGF0
ZSAoKQogIGxvY2FsIGxhc3RfaW5kZXggPSBjdXJyZW50X3N0YWNrX2luZGV4CiAgaWYgYnRucCAo
NSkgb3Iga2V5cCAnc3BhY2UnIHRoZW4KICAgIHVzZV9zbWFsbF9mb250ID0gbm90IHVzZV9zbWFs
bF9mb250CiAgZW5kCiAgaWYgYnRucCAoMikgdGhlbgogICAgY3VycmVudF9zdGFja19pbmRleCA9
IG1hdGgubWF4ICgxLCBjdXJyZW50X3N0YWNrX2luZGV4IC0gMSkKICAgIHN0YWNrX3Njcm9sbCA9
IG1hdGgubWluIChjdXJyZW50X3N0YWNrX2luZGV4LTEsIHN0YWNrX3Njcm9sbCkKICBlbmQKICBp
ZiBidG5wICgzKSB0aGVuCiAgICBjdXJyZW50X3N0YWNrX2luZGV4ID0gbWF0aC5taW4gKCNzdGFj
a19mcmFtZXMsIGN1cnJlbnRfc3RhY2tfaW5kZXggKyAxKQogICAgc3RhY2tfc2Nyb2xsID0gbWF0
aC5tYXggKChjdXJyZW50X3N0YWNrX2luZGV4KSAtICgjc3RhY2tfZnJhbWVzIC0gc3RhY2tfbWF4
X3Njcm9sbCksIHN0YWNrX3Njcm9sbCkKICBlbmQKCiAgbG9jYWwgXywgXywgY2xpY2ssIF8sIHdo
ZWVsID0gbW91c2UgKCkKICBpZiBtb3VzZV9vdmVyX3N0YWNrIHRoZW4KICAgIHN0YWNrX3Njcm9s
bCA9IG1hdGgubWF4ICgwLCBtYXRoLm1pbiAoc3RhY2tfc2Nyb2xsIC0gd2hlZWwgKiAyLCBzdGFj
a19tYXhfc2Nyb2xsKSkKICBlbmQKICBzdGFja19zY3JvbGxfc21vb3RoID0gYXBwcm9hY2ggKHN0
YWNrX3Njcm9sbF9zbW9vdGgsIHN0YWNrX3Njcm9sbCkKICBpZiBtb3VzZV9vdmVyX3ZhcmlhYmxl
cyB0aGVuCiAgICB2YXJpYWJsZXNfc2Nyb2xsID0gbWF0aC5tYXggKDAsIG1hdGgubWluICh2YXJp
YWJsZXNfc2Nyb2xsIC0gd2hlZWwgKiAyLCB2YXJpYWJsZXNfbWF4X3Njcm9sbCkpCiAgZW5kCiAg
dmFyaWFibGVzX3Njcm9sbF9zbW9vdGggPSBhcHByb2FjaCAodmFyaWFibGVzX3Njcm9sbF9zbW9v
dGgsIHZhcmlhYmxlc19zY3JvbGwpCgogIGNsaWNrID0gY2xpY2sgfj0gMAogIGlmIGNsaWNrIGFu
ZCBub3QgbW91c2Vfd2FzX2NsaWNrZWQgdGhlbgogICAgaWYgaG92ZXJlZF9zdGFja19pbmRleCB0
aGVuCiAgICAgIGN1cnJlbnRfc3RhY2tfaW5kZXggPSBob3ZlcmVkX3N0YWNrX2luZGV4CiAgICBl
bmQKICAgIGlmIGhvdmVyZWRfdmFyaWFibGUgYW5kIHR5cGUgKGhvdmVyZWRfdmFyaWFibGUudmFs
dWUpID09ICd0YWJsZScgdGhlbgogICAgICBpZiBob3ZlcmVkX3ZhcmlhYmxlLmNvbnRlbnRzIHRo
ZW4KICAgICAgICBob3ZlcmVkX3ZhcmlhYmxlLmNvbnRlbnRzID0gbmlsCiAgICAgIGVsc2UKICAg
ICAgICBsb2NhbCBjb250ZW50cyA9IHt9CiAgICAgICAgaG92ZXJlZF92YXJpYWJsZS5jb250ZW50
cyA9IGNvbnRlbnRzCiAgICAgICAgZm9yIGssdiBpbiBwYWlycyAoaG92ZXJlZF92YXJpYWJsZS52
YWx1ZSkgZG8KICAgICAgICAgIHRhYmxlLmluc2VydCAoY29udGVudHMsIHsKICAgICAgICAgICAg
a2V5ID0gaywKICAgICAgICAgICAgdmFsdWUgPSB2LAogICAgICAgICAgfSkKICAgICAgICBlbmQK
ICAgICAgICBzb3J0IChjb250ZW50cywgY29tcGFyZV9rZXlzKQogICAgICBlbmQKICAgIGVuZAog
IGVuZAogIG1vdXNlX3dhc19jbGlja2VkID0gY2xpY2sKCiAgaWYgY3VycmVudF9zdGFja19pbmRl
eCB_PSBsYXN0X2luZGV4IHRoZW4KICAgIHJlYnVpbGQoKQogIGVuZAplbmQKCmxvY2FsIGZ1bmN0
aW9uIGVycm9yX2RyYXcgKCkKICBsb2NhbCBXID0gZ2V0X2Rpc3BsYXkoKTp3aWR0aCgpCiAgbG9j
YWwgSCA9IGdldF9kaXNwbGF5KCk6aGVpZ2h0KCkKCiAgbG9jYWwgcHJlZml4ID0gdXNlX3NtYWxs
X2ZvbnQgYW5kICdcMDE0JyBvciAnJwogIGxvY2FsIGZvbnRfaGVpZ2h0ID0gKHVzZV9zbWFsbF9m
b250IGFuZCA2IG9yIDExKQogIGxvY2FsIG14LCBteSA9IG1vdXNlKCkKICBsb2NhbCBvdmVyX3Nl
Y3Rpb24gPSBmYWxzZQogIGxvY2FsIHgwLCB5MCwgeCwgeQoKICBsb2NhbCBmdW5jdGlvbiBnb190
byAobmV3X3gsIG5ld195KQogICAgeDAsIHkwID0gbmV3X3gsIG5ld195CiAgICB4LCB5ID0geDAs
IHkwCiAgZW5kCgogIGxvY2FsIGZ1bmN0aW9uIHNlY3Rpb24gKHN4LCBzeSwgc3csIHNoKQogICAg
b3Zlcl9zZWN0aW9uID0KICAgICAgbXggPj0gc3ggYW5kIG14IDwgc3ggKyBzdyBhbmQKICAgICAg
bXkgPj0gc3kgYW5kIG15IDwgc3kgKyBzaAogICAgY2xpcCAoc3gsIHN5LCBzdywgc2gpCiAgICBn
b190byhzeCsyLCBzeSsyKQogIGVuZAoKICBsb2NhbCBmdW5jdGlvbiBwcmludF9ob3Jpem9udGFs
ICh0ZXh0LCBjb2xvcikKICAgIGxvY2FsIG5ld194LCBfbmV3X3kgPSBwcmludCAocHJlZml4IC4u
IHRleHQsIHgsIHksIGNvbG9yKQogICAgeCA9IG5ld194CiAgZW5kCgogIGxvY2FsIGZ1bmN0aW9u
IHByaW50X2xpbmUgKHRleHQsIGNvbG9yKQogICAgbG9jYWwgX25ld194LCBuZXdfeSA9IHByaW50
IChwcmVmaXggLi4gdGV4dCwgeCwgeSwgY29sb3IpCiAgICB4ID0geDAKICAgIHkgPSBuZXdfeQog
IGVuZAoKICAtLSBkcmF3IHNldHVwCiAgY2xzICgwKQogIC0tIGxpZ2h0ZXIgZGFyayBncmF5IGZv
ciByZWFkYWJpbGl0eQogIHBhbCAoNSwgMHhmZjcwNzA3MCwgMikKICBjb2xvciAoNSkKCiAgLS0g
ZXJyb3IgbWVzc2FnZQogIHNlY3Rpb24gKDAsIDAsIFcsIEgvMikKICBtb3VzZV9vdmVyX3N0YWNr
ID0gb3Zlcl9zZWN0aW9uCgogIGxvY2FsIGxvY19wYXRoLCBsb2NfbGluZSwgZXJyID0gcGFyc2Vf
bWVzc2FnZV9mb3JfbG9jYXRpb24gKGVycm9yX21lc3NhZ2UpCiAgaWYgbG9jX3BhdGggdGhlbgog
ICAgcHJpbnRfbGluZSAoJ2Vycm9yIGF0ICcgLi4gbG9jX3BhdGggLi4gJzonIC4uIGxvY19saW5l
IC4uICc6JywgNikKICAgIHByaW50X2xpbmUgKCcgICcgLi4gZXJyLCA4KQogIGVsc2UKICAgIHBy
aW50X2xpbmUgKCdlcnJvcjonLCA2KQogICAgcHJpbnRfbGluZSAoJyAgJyAuLiBlcnJvcl9tZXNz
YWdlLCA4KQogIGVuZAoKICAtLSBzdGFjayBmcmFtZXMKICBwcmludF9saW5lICgnc3RhY2s6Jywg
NikKICBzZWN0aW9uICgwLCB5LCBXLCBILzIteSkKICBsb2NhbCBzdGFja190b3BfeSA9IHkKICB5
ID0geSAtIHJvdW5kIChzdGFja19zY3JvbGxfc21vb3RoICogZm9udF9oZWlnaHQpCiAgbG9jYWwg
bGFzdF9ob3ZlcmVkX3N0YWNrX2luZGV4ID0gaG92ZXJlZF9zdGFja19pbmRleAogIGhvdmVyZWRf
c3RhY2tfaW5kZXggPSBmYWxzZQogIGZvciBpLCBmcmFtZSBpbiBpcGFpcnMgKHN0YWNrX2ZyYW1l
cykgZG8KICAgIGNvbG9yIChsYXN0X2hvdmVyZWRfc3RhY2tfaW5kZXggPT0gaSBhbmQgNyBvcgog
ICAgICAgICAgIGN1cnJlbnRfc3RhY2tfaW5kZXggPT0gaSBhbmQgNiBvciA1KQoKICAgbG9jYWwg
eV9iZWZvcmUgPSB5CiAgICBwcmludF9saW5lIChzdHJpbmcuZm9ybWF0ICgnICAlczolZCBpbiBm
dW5jdGlvbiAlcycsCiAgICAgIGZyYW1lLmZpbGVuYW1lLCBmcmFtZS5saW5lLCBmcmFtZS5mbl9u
YW1lICkpCiAgICBpZiBvdmVyX3NlY3Rpb24gdGhlbgogICAgICBpZiBteSA_PSB5X2JlZm9yZSBh
bmQgbXkgPCB5IHRoZW4KICAgICAgICBob3ZlcmVkX3N0YWNrX2luZGV4ID0gaQogICAgICBlbmQK
ICAgIGVuZAogIGVuZAogIHN0YWNrX21heF9zY3JvbGwgPSAjc3RhY2tfZnJhbWVzIC0gKEgvMiAt
IHN0YWNrX3RvcF95KSAvIGZvbnRfaGVpZ2h0CgogIGxvY2FsIGZyYW1lID0gc3RhY2tfZnJhbWVz
IFtjdXJyZW50X3N0YWNrX2luZGV4XQogIGlmIG5vdCBmcmFtZSB0aGVuCiAgICByZXR1cm4KICBl
bmQKCiAgLS0gdmFyaWFibGVzCiAgc2VjdGlvbiAoMCwgSC8yLCBXLzIsIEgvMikKICBtb3VzZV9v
dmVyX3ZhcmlhYmxlcyA9IG92ZXJfc2VjdGlvbgogIHByaW50X2xpbmUgKCd2YXJpYWJsZXM6Jywg
NikKICBzZWN0aW9uICgwLCB5LCBXLzIsIEgteSkKICBsb2NhbCB2YXJpYWJsZXNfdG9wX3kgPSB5
CiAgeSA9IHkgLSByb3VuZCAodmFyaWFibGVzX3Njcm9sbF9zbW9vdGggKiBmb250X2hlaWdodCkK
ICBsb2NhbCBsYXN0X2hvdmVyZWRfdmFyaWFibGUgPSBob3ZlcmVkX3ZhcmlhYmxlCiAgaG92ZXJl
ZF92YXJpYWJsZSA9IGZhbHNlCiAgbG9jYWwgdmFyaWFibGVfY291bnQgPSAwCiAgbG9jYWwgZnVu
Y3Rpb24gZHJhd192YXJpYWJsZSAodmFyaWFibGUsIGluZGVudCkKICAgIHZhcmlhYmxlX2NvdW50
ID0gdmFyaWFibGVfY291bnQgKyAxCiAgICBsb2NhbCBob3ZlcmVkID0gdmFyaWFibGUgPT0gbGFz
dF9ob3ZlcmVkX3ZhcmlhYmxlCiAgICBsb2NhbCB5X2JlZm9yZSA9IHkKICAgIGlmIHZhcmlhYmxl
LmVycm9yIHRoZW4KICAgICAgcHJpbnRfbGluZSAoJyAgJyAuLiB2YXJpYWJsZS5lcnJvciwgOCkK
ICAgIGVsc2UKICAgICAgcHJpbnRfaG9yaXpvbnRhbCAoaW5kZW50IC4uIHZhcmlhYmxlLmtleSwg
aG92ZXJlZCBhbmQgNyBvciA2KQogICAgICBwcmludF9ob3Jpem9udGFsICgnOiAnLCB2YXJpYWJs
ZSA9PSBsYXN0X2hvdmVyZWRfdmFyaWFibGUgYW5kIDcgb3IgNSkKICAgICAgcHJpbnRfbGluZSAo
c2FmZV90b3N0cmluZyh2YXJpYWJsZS52YWx1ZSkpCiAgICBlbmQKCiAgICBpZiBvdmVyX3NlY3Rp
b24gYW5kIHR5cGUgKHZhcmlhYmxlLnZhbHVlKSA9PSAndGFibGUnIHRoZW4KICAgICAgaWYgbXgg
Pj0gMCBhbmQgbXggPCBXLzIgYW5kIG15ID49IHlfYmVmb3JlIGFuZCBteSA8IHkgdGhlbgogICAg
ICAgIGhvdmVyZWRfdmFyaWFibGUgPSB2YXJpYWJsZQogICAgICBlbmQKICAgIGVuZAoKICAgIGlm
IHZhcmlhYmxlLmNvbnRlbnRzIHRoZW4KICAgICAgZm9yIF8sIHYgaW4gaXBhaXJzICh2YXJpYWJs
ZS5jb250ZW50cykgZG8KICAgICAgICBkcmF3X3ZhcmlhYmxlICh2LCBpbmRlbnQgLi4gJyAgJykK
ICAgICAgZW5kCiAgICBlbmQKICBlbmQKICBmb3IgXywgdmFyaWFibGUgaW4gaXBhaXJzICh2YXJp
YWJsZXMpIGRvCiAgICBkcmF3X3ZhcmlhYmxlICh2YXJpYWJsZSwgJyAgJykKICBlbmQKICB2YXJp
YWJsZXNfbWF4X3Njcm9sbCA9IHZhcmlhYmxlX2NvdW50IC0gKEggLSB2YXJpYWJsZXNfdG9wX3kp
IC8gZm9udF9oZWlnaHQKCiAgLS0gc291cmNlCiAgc2VjdGlvbiAoVy8yLCBILzIsIFcvMiwgSC8y
KQogIHByaW50X2xpbmUgKCdzb3VyY2Ugb2YgJyAuLiBmcmFtZS5wYXRoIC4uICc6JywgNikKICBs
b2NhbCBjb250ZXh0ID0gdXNlX3NtYWxsX2ZvbnQgYW5kIDEwIG9yIDUKICBsb2NhbCBpX21pbiA9
IG1hdGgubWF4ICgxLCBmcmFtZS5saW5lIC0gY29udGV4dCkKICBsb2NhbCBpX21heCA9IG1hdGgu
bWluICgjc291cmNlX2xpbmVzLCBmcmFtZS5saW5lICsgY29udGV4dCkKICBmb3IgaSA9IGlfbWlu
LCBpX21heCBkbwogICAgY29sb3IgKGkgPT0gZnJhbWUubGluZSBhbmQgNiBvciA1KQogICAgcHJp
bnRfaG9yaXpvbnRhbCAoc3RyaW5nLmZvcm1hdCAoJyU0ZCAnLCBpKSkKICAgIHByaW50X2xpbmUg
KHNvdXJjZV9saW5lcyBbaV0pCiAgZW5kCgogIGNsaXAgKCkKZW5kCgotLS0tIHRha2luZyBvdmVy
IGR1cmluZyBlcnJvcnMgLS0tLS0tLS0tLS0tLS0tLS0tLQoKbG9jYWwgZnVuY3Rpb24gcmVzZXQg
KCkKICAtLSBiYXNlZCBvbiByZXNldCgpIGZyb20gL3N5c3RlbS9saWIvaGVhZC5sdWEKICAtLSBz
ZWUgdGhhdCBmbiBmb3IgaW5mbwogIHdpbmRvdyB7CiAgICBjdXJzb3IgPSAxLAogICAgcmVzaXph
YmxlID0gdHJ1ZSwKICB9CiAgbm90ZSAoKQogIC0tIHBpY290cm9uIHNlZ2ZhdWx0cyBpZiB3ZSBj
YWxsIGNsaXAoKSBkdXJpbmcgaW5pdAogIGlmIGluaXRfZG9uZSB0aGVuCiAgICBjbGlwICgpCiAg
ZW5kCiAgY2FtZXJhICgpCiAgcGFsICgpCiAgcGFsdCAoKQogIG1lbXNldCAoMHg1NTFmLCAwLCA5
KQogIHBva2UgKDB4NTUwOCwgMHgzZikKICBwb2tlICgweDU1MDksIDB4M2YpCiAgcG9rZSAoMHg1
NTBhLCAweDNmKQogIHBva2UgKDB4NTUwYiwgMHgwMCkKICBjb2xvciAoNikKICBmaWxscCAoKQog
IHBva2UgKDB4NWY1NiwgMHg0MCkKICBwb2tlICgweDVmNTcsIDB4NTYpCiAgcG9rZSAoMHg0MDAw
LCBnZXQgKGZldGNoIi9zeXN0ZW0vZm9udHMvbGlsLmZvbnQiKSkKICBwb2tlICgweDU2MDAsIGdl
dCAoZmV0Y2giL3N5c3RlbS9mb250cy9wOC5mb250IikpCiAgcG9rZSAoMHg1NjA2LCBwZWVrICgw
eDU2MDApICogNCkKICBwb2tlICgweDU2MDUsIDB4MikKICBwb2tlICgweDVmMjgsIDY0KQogIHBv
a2UgKDB4NWYyOSwgNjQpCmVuZAoKbG9jYWwgZnVuY3Rpb24gb25fZXJyb3IgKHRocmVhZCwgbWVz
c2FnZSkKICAtLSBkbyB0aGlzIGZpcnN0IGluIGNhc2Ugd2UgaGl0IGFub3RoZXIgZXJyb3IKICBl
cnJvcl90cmFjZWJhY2sgPSBkZWJ1Zy50cmFjZWJhY2sgKHRocmVhZCwgbWVzc2FnZSkKICBwcmlu
dGggKGVycm9yX3RyYWNlYmFjaykKCiAgZXJyb3JfdGhyZWFkID0gdGhyZWFkCiAgZXJyb3JfbWVz
c2FnZSA9IHRvc3RyaW5nIChtZXNzYWdlKQogIHJlc2V0ICgpCiAgcmVidWlsZCAoKQogIC0tIGp1
bXAgdG8gdGhlIHByb3BlciBzdGFjayBmcmFtZSBpZiB3ZSBjYW4KICBsb2NhbCBsb2NfcGF0aCwg
bG9jX2xpbmUgPSBwYXJzZV9tZXNzYWdlX2Zvcl9sb2NhdGlvbiAoZXJyb3JfbWVzc2FnZSkKICBm
b3IgaSwgZnJhbWUgaW4gaXBhaXJzIChzdGFja19mcmFtZXMpIGRvCiAgICBpZiBmcmFtZS5wYXRo
ID09IGxvY19wYXRoIGFuZCBmcmFtZS5saW5lID09IGxvY19saW5lIHRoZW4KICAgICAgY3VycmVu
dF9zdGFja19pbmRleCA9IGkKICAgICAgcmVidWlsZCAoKQogICAgICBicmVhawogICAgZW5kCiAg
ZW5kCmVuZAoKLS0tLSBpbnN0YWxsIG1haW4gZXZlbnRzIHRoYXQgY2F0Y2ggZXJyb3JzIC0tLS0t
LS0KCmxvY2FsIHVzZXJfaW5pdCA9IHJhd2dldCAoX0csICdfaW5pdCcpCmxvY2FsIHVzZXJfdXBk
YXRlID0gcmF3Z2V0IChfRywgJ191cGRhdGUnKQpsb2NhbCB1c2VyX2RyYXcgPSByYXdnZXQgKF9H
LCAnX2RyYXcnKQoKYXNzZXJ0ICh1c2VyX2RyYXcgYW5kIHVzZXJfdXBkYXRlLAogICdwbGVhc2Ug
aW5jbHVkZSBlcnJvcl9leHBsb3JlciBhZnRlciBkZWZpbmluZyBib3RoIF91cGRhdGUgYW5kIF9k
cmF3JykKCmlmIG5vdCByYXdnZXQgKF9HLCAnZGVidWcnKSBvciBub3QgZGVidWcudHJhY2ViYWNr
IG9yIG5vdCBkZWJ1Zy5nZXRpbmZvIHRoZW4KICBwcmludGggJ2Vycm9yIGV4cGxvcmVyOiBkZWJ1
ZyBtb2R1bGUgbm90IGF2YWlsYWJsZSwgZXJyb3IgZXhwbG9yZXIgd2lsbCBiZSBkaXNhYmxlZCcK
ICByZXR1cm4KZW5kCgpsb2NhbCBmdW5jdGlvbiBjYWxsX2Vycm9yX2V2ZW50IChmbiwgLi4uKQog
IC0tIGlmIHRoZXJlJ3MgYW4gZXJyb3IgaW4gb3VyIHVwZGF0ZSBvciBkcmF3LCB0aHJvdyB0aGUK
ICAtLSBvcmlnaW5hbCBlcnJvciBhcyB3ZWxsIGFzIHRoZSBuZXcgZXJyb3IKICBsb2NhbCBzdWNj
ZXNzLCBlcnIgPSBwY2FsbCAoZm4sIC4uLikKICBpZiBub3Qgc3VjY2VzcyB0aGVuCiAgICBlcnJv
ciAoZXJyb3JfdHJhY2ViYWNrIC4uICdcblxuZXJyb3IgZHVyaW5nIGVycm9yIGhhbmRsaW5nOiAn
IC4uIHRvc3RyaW5nIChlcnIpKQogIGVuZAplbmQKCmxvY2FsIGZ1bmN0aW9uIGNhbGxfcHJvdGVj
dGVkIChmbikKICAtLSBuZWVkIHRvIHVzZSBjb3Jlc3VtZSBldGMuIGFuZCBub3QgY29yb3V0aW5l
LnJlc3VtZSBldGMuCiAgLS0gZm9yIHBpY290cm9uIGNvbXBhdGliaWxpdHkKICBsb2NhbCB0aHJl
YWQgPSBjb2NyZWF0ZSAoZm4pCiAgbG9jYWwgc3VjY2VzcywgbWVzc2FnZSA9IGNvcmVzdW1lKHRo
cmVhZCkKICB3aGlsZSBjb3N0YXR1cyAodGhyZWFkKSB_PSAnZGVhZCcgZG8KICAgIHlpZWxkICgp
CiAgICBzdWNjZXNzLCBtZXNzYWdlID0gY29yZXN1bWUgKHRocmVhZCkKICBlbmQKICBpZiBub3Qg
c3VjY2VzcyB0aGVuCiAgICBjYWxsX2Vycm9yX2V2ZW50IChvbl9lcnJvciwgdGhyZWFkLCBtZXNz
YWdlKQogIGVuZAplbmQKCmlmIHVzZXJfaW5pdCB0aGVuCiAgZnVuY3Rpb24gX2luaXQgKCkKICAg
IGNhbGxfcHJvdGVjdGVkICh1c2VyX2luaXQpCiAgICBpbml0X2RvbmUgPSB0cnVlCiAgZW5kCmVs
c2UKICBpbml0X2RvbmUgPSB0cnVlCmVuZAoKZnVuY3Rpb24gX3VwZGF0ZSAoKQogIGlmIGVycm9y
X3RocmVhZCB0aGVuCiAgICBjYWxsX2Vycm9yX2V2ZW50IChlcnJvcl91cGRhdGUpCiAgZWxzZQog
ICAgY2FsbF9wcm90ZWN0ZWQgKHVzZXJfdXBkYXRlKQogIGVuZAplbmQKCmZ1bmN0aW9uIF9kcmF3
ICgpCiAgaWYgZXJyb3JfdGhyZWFkIHRoZW4KICAgIGNhbGxfZXJyb3JfZXZlbnQgKGVycm9yX2Ry
YXcpCiAgZWxzZQogICAgY2FsbF9wcm90ZWN0ZWQgKHVzZXJfZHJhdykKICBlbmQKZW5k
:: free_part.lua
--[[pod_format="raw",created="2025-05-19 18:14:49",modified="2025-05-20 17:53:00",revision=433]]
function new_free_part(position,part)
	return{
		_position=position,
		_speed=new_point(0,0),
		part=part,
		init=function(self)
			self.part._position=self._position
			self.part:init()
			self._speed=	self._speed:randomize(new_point(-0.1,1))
		end,
		update=function(self)  			
			self._position+=self._speed --apply velocity
			self.part._position=self._position
			if(is_point_on_screen(self._position)==false) then
				self:kill()
			end	
		
		end,
		draw=function(self)	 	 	
	    	self.part:draw()
		end,
		kill=function(self)
			del(game.free_parts,self) --fix
		end
	}
end

:: game.lua
--[[pod_format="raw",created="2025-05-19 15:03:03",modified="2025-06-04 18:58:12",revision=2170]]
function new_game()
	return{
		_actions = {},
		_ship,
		free_parts={},
		asteroids={},
		pirates={},
		bullets={},
		particle_systems={},
		_director=nil,
		_light_road,
		bank=0,
		init=function(self)
			self._ship=new_ship(new_point(480/2,270/2+30))
			self._light_road= new_lightroad()
						
			self._director:init()	
			
			self.sprites1=fetch("./gfx/0.gfx")	
			self._ship:init()	
			music(0,0,0x1|0x2|0x4|0x8)
		end,
		update=function(self)
			camera_helper:update_camera()
			self._light_road:update()
			self._ship:update()
			
			foreach(self.particle_systems, function(particle_system)
    			particle_system:update()
 	 		end)	
		
			foreach(self.free_parts, function(part)
	    		part:update()
	 	 	end)
	 	 	foreach(self.asteroids, function(asteroid)
	    		asteroid:update()
	 	 	end)
	 	 	foreach(self.pirates, function(pirate)
	    		pirate:update()
	 	 	end)
	 	 	foreach(self.bullets, function(bullet)
	    		bullet:update()
	 	 	end)
			self._director:update()
		 	foreach(self._actions, function(action)
			   if costatus(action) then
			      coresume(action)
			   else
			      del(self.actions,action)
				end
			end)
	 		
		end,
		draw=function(self)
			cls()
			self._light_road:draw()
			foreach(self.particle_systems, function(particle_system)
   	 		particle_system:draw()
	 	 	end)
			foreach(self.free_parts, function(part)
	    		part:draw()
	 	 	end)
	 	 	foreach(self.asteroids, function(asteroid)
	    		asteroid:draw()
	 	 	end)
	 	 	foreach(self.pirates, function(pirate)
	    		pirate:draw()
	 	 	end)
	 	 	foreach(self.bullets, function(bullet)
	    		bullet:draw()
	 	 	end)
			self._ship:draw()
			self._director:draw()
			print_right("$"..format_money(self._ship.worth+self.bank).."/".. format_money(self._director.goal) ,12,10)
		
		end,
		addAction=function(self,action)
			add(self._actions,cocreate(action)) 
		end,
		death=function(self)
			self:addAction(function()
				for i=1,60*2 do
					yield()
				end
				gameover()
			end)
		end,
		finish_level=function(self)
			if(self._ship.worth+self.bank>=self._director.goal) then
				self.bank+=self._ship.worth-self._director.goal
				next_screen()
			else
				gameover()
			end
			
		end		
				
	}
end
:: help.lua
--[[pod_format="raw",created="2025-05-24 18:42:03",modified="2025-06-04 18:58:12",revision=524]]
function new_help()
	return{
	sprites,
	init=function(self)
		camera_helper:set_camera(new_point(0,0),true)
		self.sprites=	fetch("./gfx/0.gfx")	
	end,
	update=function(self)
		camera_helper:update_camera()
		if(btnp()>0) then
		  next_screen()
		end

	end,
	draw=function(self)
		cls()
		print_centered("Use \131 \139 \145 \148 to control"
		,10,7)
		spr(self.sprites[1].bmp,310,5)

		spr(self.sprites[2].bmp,10,25)
		print("Move Faster",30,30)
		
		spr(self.sprites[3].bmp,10,45)
		print("Shoot stuff down",30,50)	
	
		spr(self.sprites[4].bmp,10,65)
		print("Immune to small damage",30,70)
		
		spr(self.sprites[5].bmp,10,85)
		print("Shield your ship",30,90)
		
		spr(self.sprites[12].bmp,10,105)
		print("Easy connections",30,110)

		spr(self.sprites[65].bmp,240,25)
		print("Only hurts open connectots",260,30)
		
		spr(self.sprites[64].bmp,240,45)
		print("Can be shot down",260,50)
		
		spr(self.sprites[9].bmp,240,65)
		print("Common cargo !fragile!",260,70)
		
		spr(self.sprites[10].bmp,240,85)
		print("Rare cargo !heavy!",260,90)
		
		spr(self.sprites[11].bmp,240,105)
		print("Volatile cargo !danger!",260,110)
				
	end}
	
end
:: helpers.lua
b64$LS1bW3BvZF9mb3JtYXQ9InJhdyIsY3JlYXRlZD0iMjAyNS0wNS0xOSAxNToxMzo1MyIsbW9k
aWZpZWQ9IjIwMjUtMDYtMDQgMTg6NTg6MTIiLHJldmlzaW9uPTEzMzBdXQpmdW5jdGlvbiBzbShh
KQoJcmV0dXJuIHNldG1ldGF0YWJsZShhLGEpCmVuZApmdW5jdGlvbiByYW5kb20obikKCWlmKG4_
MCkgdGhlbiAKCQlyZXR1cm4gcm5kKCkqbgoJZWxzZQoJCXJldHVybiAtbitybmQoKSpuKjIgCgll
bmQKZW5kCmZ1bmN0aW9uIHBpY2tfcmFuZG9tKGFycikKCWlmIGFycj09bmlsbCB0aGVuIHJldHVy
biBuaWwgZW5kCglpZiAjYXJyID09IDAgdGhlbiByZXR1cm4gbmlsIGVuZAoJcmV0dXJuIGFycltm
bHIocm5kKCNhcnIpKSArIDFdCmVuZApmdW5jdGlvbiBibG9ja19jb2xsaXNpb24ocG9pbnRBLCBz
aXplQSwgcG9pbnRCLCBzaXplQikKCWxvY2FsIGF4MSwgYXkxID0gcG9pbnRBLngsIHBvaW50QS55
Cglsb2NhbCBheDIsIGF5MiA9IGF4MSArIHNpemVBLngsIGF5MSArIHNpemVBLnkKCglsb2NhbCBi
eDEsIGJ5MSA9IHBvaW50Qi54LCBwb2ludEIueQoJbG9jYWwgYngyLCBieTIgPSBieDEgKyBzaXpl
Qi54LCBieTEgKyBzaXplQi55CgoJaWYgYXgxIDwgYngyIGFuZCBheDIgPiBieDEgYW5kIGF5MSA8
IGJ5MiBhbmQgYXkyID4gYnkxIHRoZW4KCQlyZXR1cm4gcG9pbnRBLXBvaW50QgoJZW5kCgoJcmV0
dXJuIG5pbAplbmQKZnVuY3Rpb24gY2FyZGluYWxfZGlyZWN0aW9uKHYsIHRocmVzaG9sZCkKCXRo
cmVzaG9sZCA9IHRocmVzaG9sZCBvciAxICAtLSBtaW5pbXVtIGRpZmZlcmVuY2UgYmV0d2VlbiBh
eGVzCgoJbG9jYWwgYWJzX3ggPSBhYnModi54KQoJbG9jYWwgYWJzX3kgPSBhYnModi55KQoJaWYg
YWJzX3ggPiBhYnNfeSArIHRocmVzaG9sZCB0aGVuCgkJcmV0dXJuIG5ld19wb2ludChzaWduKHYu
eCksIDApCgllbHNlaWYgYWJzX3kgPiBhYnNfeCArIHRocmVzaG9sZCB0aGVuCgkJcmV0dXJuIG5l
d19wb2ludCgwLCBzaWduKHYueSkpCgllbHNlCgkJcmV0dXJuIG5pbCAgLS0gdG9vIGRpYWdvbmFs
LCBkb24ndCBhdHRhY2gKCWVuZAplbmQKZnVuY3Rpb24gc2lnbihuKQoJaWYgbiA_IDAgdGhlbiBy
ZXR1cm4gMQoJZWxzZWlmIG4gPCAwIHRoZW4gcmV0dXJuIC0xCgllbHNlIHJldHVybiAwCgllbmQK
ZW5kCmZ1bmN0aW9uIGdldF9zdHJpbmdfd2lkdGgocykKCWxvY2FsIHdpZHRoPXByaW50KHMsLTEw
MDAsMCkKCXByaW50KCIiLDAsMCkKCXJldHVybiB3aWR0aCsxMDAwCmVuZApmdW5jdGlvbiBwcmlu
dF9jZW50ZXJlZCh0ZXh0LCB5LCBjb2wpCgljb2wgPSBjb2wgb3IgY29sb3JzLndoaXRlCglsb2Nh
bCB0ZXh0X3dpZHRoID1nZXRfc3RyaW5nX3dpZHRoKHRleHQpCglsb2NhbCB4ID0gKHNjcmVlbldp
ZHRoIC0gdGV4dF93aWR0aCkgXCAyCglwcmludCh0ZXh0LHgrY2FtZXJhX2hlbHBlcjpnZXRfY2Ft
ZXJhKCkueCwgeStjYW1lcmFfaGVscGVyOmdldF9jYW1lcmEoKS55LCBjb2wpCmVuZApmdW5jdGlv
biBwcmludF9yaWdodCh0ZXh0LCB5LCBjb2wpCgljb2wgPSBjb2wgb3IgIGNvbG9ycy53aGl0ZQoJ
bG9jYWwgdGV4dF93aWR0aCA9Z2V0X3N0cmluZ193aWR0aCh0ZXh0KQoJbG9jYWwgeCA9IHNjcmVl
bldpZHRoIC0gdGV4dF93aWR0aAoJcHJpbnQodGV4dCwgeCtjYW1lcmFfaGVscGVyOmdldF9jYW1l
cmEoKS54LCB5LCBjb2wpCmVuZApmdW5jdGlvbiBpc19wb2ludF9vbl9zY3JlZW4ocG9pbnQpCgkK
CWxvY2FsIGNhbWVyYV9wb3M9Y2FtZXJhX2hlbHBlcjpnZXRfY2FtZXJhKCkKCQoJcmV0dXJuICgK
CQlwb2ludC54ID49IGNhbWVyYV9wb3MueCAtIHRpbGVTaXplIGFuZCBwb2ludC54IDwgY2FtZXJh
X3Bvcy54ICsgc2NyZWVuV2lkdGggYW5kCgkJcG9pbnQueSA_PSBjYW1lcmFfcG9zLnkgLSB0aWxl
U2l6ZSBhbmQgcG9pbnQueSA8IGNhbWVyYV9wb3MueSArIHNjcmVlbkhlaWdodAoJKQplbmQKY29s
b3JzID0gewoJYmxhY2sgICAgICAgID0gMCwKCWRhcmtfYmx1ZSAgICA9IDEsCglkYXJrX3B1cnBs
ZSAgPSAyLAoJZGFya19ncmVlbiAgID0gMywKCWJyb3duICAgICAgICA9IDQsCglkYXJrX2dyYXkg
ICAgPSA1LAoJbGlnaHRfZ3JheSAgID0gNiwKCXdoaXRlICAgICAgICA9IDcsCglyZWQgICAgICAg
ICAgPSA4LAoJb3JhbmdlICAgICAgID0gOSwKCXllbGxvdyAgICAgICA9IDEwLAoJZ3JlZW4gICAg
ICAgID0gMTEsCglibHVlICAgICAgICAgPSAxMiwKCWluZGlnbyAgICAgICA9IDEzLAoJcGluayAg
ICAgICAgID0gMTQsCglwZWFjaCAgICAgICAgPSAxNSwKCgktLSBFeHRlbmRlZCBjb2xvcnMgKDE2
4oCTNjMpIG1heSB2YXJ5IGJ5IHBhbGV0dGUgc2V0dXAsIGJ1dCBoZXJlJ3MgYSB1c2VmdWwgZGVm
YXVsdCBzZXQ6Cglyb3NlICAgICAgICAgPSAxNiwKCXNhbG1vbiAgICAgICA9IDE3LAoJYmVpZ2Ug
ICAgICAgID0gMTgsCglsaWdodF95ZWxsb3cgPSAxOSwKCWxpZ2h0X2dyZWVuICA9IDIwLAoJc2Vh
Zm9hbSAgICAgID0gMjEsCglza3lfYmx1ZSAgICAgPSAyMiwKCXBlcml3aW5rbGUgICA9IDIzLAoJ
bGF2ZW5kZXIgICAgID0gMjQsCglsaWdodF9waW5rICAgPSAyNSwKCWRhcmtfYnJvd24gPTI4Cgkt
LSAuLi55b3UgY2FuIGNvbnRpbnVlIGFkZGluZyBhcyBuZWVkZWQKfQpuZXdfdGltZXI9ZnVuY3Rp
b24oc3Bhd25fcmF0ZSxzdGFydCxhY3Rpb24pCglyZXR1cm57CglzcGF3bl9yYXRlPXNwYXduX3Jh
dGUsCgl0aW1lcj1zdGFydCwKCWFjdGlvbj1hY3Rpb24sCgl1cGRhdGU9ZnVuY3Rpb24oc2VsZixv
dGhlcikKCQlpZihzZWxmLnNwYXduX3JhdGU9PTApIHRoZW4KCQkJcmV0dXJuCgkJZWxzZWlmKHNl
bGYuc3Bhd25fcmF0ZT4xKQl0aGVuCQoJCQlpZihzZWxmLnRpbWVyPnNlbGYuc3Bhd25fcmF0ZSkg
dGhlbgoJCQkJc2VsZi5hY3Rpb24ob3RoZXIpCgkJCQlzZWxmLnRpbWVyPTAKCQkJZWxzZQoJCQkJ
c2VsZi50aW1lcis9MQoJCQllbmQKCQllbHNlCgkJCWZvciBpPTEsMS9zZWxmLnNwYXduX3JhdGUs
MSBkbwoJCQkJc2VsZi5hY3Rpb24ob3RoZXIpCgkJCWVuZAoJCWVuZAoJZW5kCgl9CmVuZAoKZnVu
Y3Rpb24gcmFuZG9tX29mZnNjcmVlbl9wb2ludCgpCglsb2NhbCBzaWRlID0gZmxyKHJuZCg0KSkg
IC0tIHBpY2sgYSByYW5kb20gc2lkZTogMD10b3AsIDE9Ym90dG9tLCAyPWxlZnQsIDM9cmlnaHQK
CWlmIHNpZGUgPT0gMCB0aGVuCgkJLS0gVG9wOiB5ID0gLXRpbGVTaXplCgkJcmV0dXJuIG5ld19w
b2ludChmbHIocm5kKHNjcmVlbldpZHRoIC8gdGlsZVNpemUpKSAqIHRpbGVTaXplLCAtdGlsZVNp
emUpCgllbHNlaWYgc2lkZSA9PSAxIHRoZW4KCQktLSBCb3R0b206IHkgPSBzY3JlZW5IZWlnaHQK
CQlyZXR1cm4gbmV3X3BvaW50KGZscihybmQoc2NyZWVuV2lkdGggLyB0aWxlU2l6ZSkpICogdGls
ZVNpemUsIHNjcmVlbkhlaWdodCkKCWVsc2VpZiBzaWRlID09IDIgdGhlbgoJCS0tIExlZnQ6IHgg
PSAtdGlsZVNpemUKCQlyZXR1cm4gbmV3X3BvaW50KC10aWxlU2l6ZSwgZmxyKHJuZChzY3JlZW5I
ZWlnaHQgLyB0aWxlU2l6ZSkpICogdGlsZVNpemUpCgllbHNlCgkJLS0gUmlnaHQ6IHggPSBzY3Jl
ZW5XaWR0aAoJCXJldHVybiBuZXdfcG9pbnQoc2NyZWVuV2lkdGgsIGZscihybmQoc2NyZWVuSGVp
Z2h0IC8gdGlsZVNpemUpKSAqIHRpbGVTaXplKQoJZW5kCmVuZApmdW5jdGlvbiByYW5kb21fb25z
Y3JlZW5fcG9pbnQoKQoJbG9jYWwgeCA9IGZscihybmQoc2NyZWVuV2lkdGgpKSAKCWxvY2FsIHkg
PSBmbHIocm5kKHNjcmVlbkhlaWdodCkpCglyZXR1cm4gbmV3X3BvaW50KHgsIHkpCmVuZAoKZnVu
Y3Rpb24gZm9ybWF0X21vbmV5KG4pCglpZihuPT0wKSB0aGVuCgkJcmV0dXJuICIwIgoJZWxzZQoJ
CXJldHVybiBuLi4iLDAwMCIKCWVuZAplbmQ=
:: include.lua
--[[pod_format="raw",created="2025-05-19 15:00:08",modified="2025-06-04 18:58:12",revision=1347]]
include "lib.lua"
include "point.lua"
include "helpers.lua"
include "sfx.lua"
include "camera.lua"
include "particle_system.lua"
include "parts.lua"
include "input.lua"
include "ship.lua"
include "free_part.lua"
include "part_spawner.lua"
include "asteroid_spawner.lua"
include "asteroid.lua"
include "pirate.lua"
include "lightroad.lua"
include "screen.lua"
include "levels.lua"
include "start.lua"
include "game.lua"
include "director.lua"
include "help.lua"
include "game_over.lua"
:: input.lua
--[[pod_format="raw",created="2025-05-19 16:29:01",modified="2025-05-19 18:10:29",revision=48]]
input_lookup = {
	-- Define logical mappings for clarity
	lpad = {
		left = 0,
		right = 1,
		up = 2,
		down = 3
	},
	rpad = {
		left = 8,
		right = 9,
		up = 10,
		down = 11
	},
	buttons = {
		o = 4,
		x = 5,
		menu=6,
		a = 12,
		b = 13
	}
}
function new_input(player)
	return {
	player=player or 0,
	_button_down_frame = {},
button=function(self, b, hold)
	local now = t()
	if type(b) ~= "table" then
		b = {b}
	end
	local key = join_with_dashes(b)

	if all_buttons_pressed(b, self.player) then
		local start = self._button_down_frame[key]
		if not start then
			self._button_down_frame[key] = now
			return 1  -- just pressed
		end

		local held = now - start 

		if hold then
			if held >= hold then
				if held >= hold + 0.1 then  -- small extra time past charge (you can adjust)
					return 4  -- overheld
				else
					return 3  -- finished charging
				end
			else
				return 2  -- still holding
			end
		else
			return held  -- legacy: how long held (seconds)
		end
	else
		self._button_down_frame[key] = nil
		return nil
	end
end,
		button_press=function(self,b)
			return btnp(b,self.player)
		end
	}
end
function join_with_dashes(arr)
	local result = ""
	for i = 1, #arr do
		result ..= arr[i]
		if i < #arr then
			result ..= "-"
		end
	end
	return result
end
function all_buttons_pressed(buttons, player)
	player = player or 0  -- default to player 0 if not specified
	for i = 1, #buttons do
		if not btn(buttons[i], player) then
			return false
		end
	end
	return true
end
:: levels.lua
--[[pod_format="raw",created="2025-06-04 13:56:27",modified="2025-06-04 18:58:12",revision=155]]
get_levels=function()
	return{		
				new_level(level1_start(),level1_end(),{
				new_parts_scene(60*5,30),
				new_asteroid_scene(60*10,60),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_parts_scene(60*5,30),
				new_asteroid_scene(60*20,15),
				new_asteroid_scene(60*20,10),
				new_pirate_scene(60*5,120),
				new_scene(60*5,180)
			},
			10),
			new_level(level2_start(),level2_end(),{
				new_parts_scene(60*5,30),
				new_asteroid_scene(60*10,60),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_parts_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,15),
				new_asteroid_scene(60*20,10),
				new_pirate_scene(60*5,120),
				new_scene(60*5,180)
			},
			15),		
			new_level(level3_start(),level3_end(),{
			new_parts_scene(60*5,30),
				new_asteroid_scene(60*10,60),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_parts_scene(60*5,30),
				new_pirate_scene(60*5,120),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,15),
				new_pirate_scene(60*5,120),
				new_parts_scene(60*5,30),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_scene(60*5,180)
			},
			20)
	}
end


new_level=function(start_screen,end_screen,scenes,goal)
	return{
		start_screen=start_screen,
		end_screen=end_screen,
		scenes=scenes,
		goal=goal
	}
end


:: lib.lua
--[[pod_format="raw",created="2025-05-19 15:05:26",modified="2025-05-19 15:05:47",revision=3]]
--lib

-- pq-debugging, by pancelor

-- quotes all args and prints to host console
-- usage:
--   pq("handles nils", many_vars, {tables=1, work=11, too=111})
function pq(...)
  printh(qq(...))
  return ...
end

-- quotes all arguments into a string
-- usage:
--   ?qq("p.x=",x,"p.y=",y)
function qq(...)
  local args=pack(...)
  local s=""
  for i=1,args.n do
    s..=quote(args[i]).." "
  end
  return s
end

-- quote a single thing
-- like tostr() but for tables
-- don't call this directly; call pq or qq instead
function quote(t, depth)
  depth=depth or 4 --avoid inf loop
  if type(t)~="table" or depth<=0 then return tostr(t) end

  local s="{"
  for k,v in pairs(t) do
    s..=tostr(k).."="..quote(v,depth-1)..","
  end
  return s.."}"
end

-- like sprintf (from c)
-- usage:
--   ?qf("%/% is %%",3,8,3/8*100,"%")
function qf(fmt,...)
  local parts,args=split(fmt,"%"),pack(...)
  local str=deli(parts,1)
  for ix,pt in ipairs(parts) do
    str..=quote(args[ix])..pt
  end
  if args.n~=#parts then
    -- uh oh! mismatched arg count
    str..="(extraqf:"..(args.n-#parts)..")"
  end
  return str
end
function pqf(...) printh(qf(...)) end
:: lightroad.lua
--[[pod_format="raw",created="2025-05-20 20:49:16",modified="2025-05-29 19:06:59",revision=684]]
new_lightroad=function()
	return{
		beam_timer=new_timer(0,0,function(obj)
			local beam=new_beam(obj)
			beam.position= new_point(obj.left+random(obj.right-obj.left),-16)
			beam.color=pick_random(obj.beam_colors)
			beam.speed=new_point(0,random(10)+5)
			beam.size=random(200)
			add(obj.decorations,beam)	
		end	
		),
		star_timer=new_timer(2,0,function(obj)
			local star=new_star(obj)
			local size=random(2)
			star.position= new_point(obj.left+random(obj.right-obj.left),-16)
			star.color=obj.star_colors[3-flr(size)]
			star.speed=new_point(0,size+2)
			star.size=0
			add(obj.decorations,star)	
		end	
		),
		--spawn_rate=0,
		--timer=0,
		left=0,
		right=480,
		decorations={},
		--colors={2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30},
		beam_colors={20,4,21,2,23,1,18,19},
		star_colors={7,6,5},
		update=function(self)
			self.beam_timer:update(self)
			self.star_timer:update(self)

			foreach(self.decorations, function(deco)
	    		deco:update()
	 	 	end)
		end,
		draw=function(self)
			foreach(self.decorations, function(deco)
	    		deco:draw()
	 	 	end)
		end,

		
}
end

new_decoration=function(parent)
	return{
		_parent=parent,
		position=new_point(0,0),
		speed=new_point(0,0),
		size=1,		
		color=2,
		update=function(self)
			self.position+=self.speed
		end,
		draw=function(self)
		end,
		kill = function(self)
			del(self._parent.decorations,self)
		end
}
end

new_beam=function(parent)
	local ret = new_decoration(parent)
	ret.baseupdate=ret.update
	ret.update=function(self)
		ret:baseupdate()
		if(is_point_on_screen(self.position+new_point(0,-self.size/2))==false	and is_point_on_screen(self.position+new_point(0,self.size/2))==false	) then 
			self:kill()
		end
	end
	ret.draw=function(self)
		line(self.position.x,self.position.y-self.size/2,self.position.x,self.position.y+self.size/2,self.color)
	end
	return ret
end
new_star=function(parent)
	local ret = new_decoration(parent)
	ret.baseupdate=ret.update
	ret.update=function(self)
		ret:baseupdate()
		if(is_point_on_screen(self.position)==false) then 
			self:kill()
		end
	end
	ret.draw=function(self)
		circfill(self.position.x,self.position.y,self.size,self.color)
	end
	return ret
end

:: main.lua
--[[pod_format="raw",created="2025-05-19 14:05:35",modified="2025-06-04 18:58:12",revision=1461]]
include "include.lua"
tileSize=16
halfTileSize=tileSize/2
screenWidth=480 --30 tiles
screenHeight=270 --16+ tiles
screenHeightTileAdjusted=256 
mode=1
input=new_input(0)
game=nil
levels=nil
current_level=0
modes= { new_start(), new_help(),0,0,0,new_gameover(),new_win()}

mode_keys={
	start=1,
	help=2,
	level_start=3,
	game=4,
	level_end=5,
	game_over=6,
	win=7,
}

function	restart()
	pq("----------------restart-----------------")
	current_level=1
	levels=get_levels()
	mode=mode_keys.start
	modes[mode]:init()
end

function next_screen()
	mode+=1
	pq("----------------mode "..mode.."-----------------")
	local level =levels[current_level]
	if(mode==mode_keys.level_start) then
		pq("setting up a level")
		modes[mode_keys.level_start]=level.start_screen
		local ngame=new_game()
		modes[mode_keys.game]=ngame
		ngame._director=new_director()
		ngame._director.scenes=level.scenes
		ngame._director.goal=level.goal
		if(game!=nil) then 
			ngame.bank=game.bank
		end
		game=ngame
		modes[mode_keys.level_end]=level.end_screen
	end
	modes[mode]:init()
end

function next_level()
	if(current_level+1>#levels) then
		win()
	else	
		current_level+=1
		pq("----------------level "..current_level.."-----------------")
		mode=mode_keys.level_start-1
		next_screen()
	end
end

function	gameover()
	mode=mode_keys.game_over
	modes[mode]:init()
end
function	win(score)
	modes[mode_keys.win]=new_win(score)
	mode=mode_keys.win
	modes[mode]:init()
end
function _init()	
	pq("----------------start-----------------")
	restart()
end

function _update()
	modes[mode]:update()
end
function _draw()
	modes[mode]:draw()
end


include "error_explorer.lua"
:: particle_system.lua
--[[pod_format="raw",created="2025-05-25 03:10:34",modified="2025-05-26 01:13:00",revision=43]]
function new_particle_system()
	return{
		sprites =game.sprites1,
		particles={},
		age=0,
		lifetime=60,
		spawn_rate=0.25; 
		particle_animation={},
		particle_flipx_r=false,
		particle_flipy_r=false,
		particle_lifetime=60,
		particle_halflife=1,
		position=new_point(0,0),
		particle_radial=false,
		particle_position_r=new_point(0,0),
		particle_speed=new_point(0,0),
		particle_speed_r=new_point(0,0),
		particle_acceleration=new_point(0,0),
		particle_acceleration_r=new_point(0,0),
		particle_update=nil, --leave nil for default behavior
		init=function(self)
			
		end,
		update=function(self)
			foreach(self.particles, function(particle)
    			particle:update()
 	 		end)
 	 		if( self.age>self.lifetime) then
 	 			if(#self.particles==0) then
 	 		 		self:die(game.particle_systems)
 	 		 	end
 	 		 	return
 	 		end
			if(self.spawn_rate>1) then
				for i=1,self.spawn_rate,1 do
					self:spawn()
				end
			else
				local inverse=1/self.spawn_rate
				if(self.age%inverse==0) then
					self:spawn()
				end
			end	
			self.age+=1
		end,
		draw=function(self)
			foreach(self.particles, function(particle)
    			particle:draw()
 	 		end)
		end,
		die=function(self,particle_system_container)
			del(particle_system_container,self)
		end,
		spawn=function(self)
			local particle=new_particle()
			particle.animation=self.particle_animation
			particle.lifetime=self.particle_lifetime
			particle.halflife=self.particle_halflife
			particle.position=self.position:randomize(self.particle_position_r)
			local speed=self.particle_speed:randomize(self.particle_speed_r)
			if(self.particle_radial) then
				speed=speed:square_to_circle()
			end
			particle.speed=	speed
			local acceleration=self.particle_acceleration:randomize(self.particle_acceleration_r)
			if(self.particle_radial) then
				acceleration=acceleration:square_to_circle()
			end	
			particle.acceleration=acceleration
		
			particle.particle_container=self.particles
			if(self.particle_flipx_r) then
				particle.flipx=rnd()>0.5
			end
			if(self.particle_flipy_r) then
				particle.flipy=rnd()>0.5
			end				
			particle.update=self.particle_update or particle.update
			add(self.particles,particle)
		end
	}
end
function new_particle()
	return{
		sprites =game.sprites1,
		particle_container,
		animation={},
		age=0,
		lifetime=60,
		halflife=1,
		position=new_point(0,0),
		speed=new_point(0,0),
		acceleration=new_point(0,0),
		flipx=false,
		flipy=false,
		init=function(self)
			
		end,
		update=function(self)
			self.position+=self.speed
			self.speed+=self.acceleration
			self.age+=1
		 		if(self.lifetime>=0 and self.age>self.lifetime) then
		 			self:die(self.particle_container)
		 		end
		 		if(rnd()>self.halflife) then
			 		self:die(self.particle_container)
		 		end
		end,
		draw=function(self)			
			spr(self.sprites[self.animation[self.age%#self.animation+1 ]].bmp,self.position.x,self.position.y,self.flipx,self.flipy)
		end,
		die=function(self,sprites)
			del(sprites,self)
		end
	}
end
	

:: parts.lua
--[[pod_format="raw",created="2025-05-19 15:12:11",modified="2025-06-03 13:32:01",revision=1768]]
function new_part(position)
	return{
		_position=position,
		_sprite=0,
		_sprites,
		name="dummy",
		attach_sides = {
			["1,0"] = true,   -- right
			["-1,0"] = true, -- left
			["0,-1"] = true,  -- up
			["0,1"] = true   -- down
		},
		mass=1,
		thrust=0,
		worth=1,
		fragile=false,
		_energy=0,
		_energy_max=0,
		_energy_regen=0,

		location=nil,
		init=function(self)
			self._sprites=game.sprites1
		end,
		can_use=function(self)
			return self._energy_max>0 and self._energy>=self._energy_max
		end,
		can_regen=function(self)
			return true
		end,
		update=function(self)		
			if(self:can_regen()) then
				self._energy=min(	self._energy+self._energy_regen,self._energy_max)
			end
		end,
		draw=function(self)
			if(self:can_use()==false)then
				pal(11,19)
			end
			spr(self._sprites[self._sprite].bmp,self._position.x,self._position.y)
			pal()
			local acc=game._ship.acceleration:length()
			if(self.location!=nil and self.thrust>0 and acc>0 ) then			
				local particle_system= new_particle_system()
	 			particle_system.spawn_rate=self.thrust*4
				particle_system.lifetime=.25
				particle_system.position=self._position+new_point(0,8)
				--particle_system.particle_position_r=new_point(-8,-16)
				particle_system.particle_speed=(game._ship.acceleration*-3*self.thrust)
				particle_system.particle_speed_r=new_point(.1,.1)
				particle_system.particle_halflife=0.95
				particle_system.particle_animation={58,59}
				particle_system.particle_flipx_r=true
				particle_system.particle_flipy_r=true
				add(game.particle_systems,particle_system)
			end
			
		end,
		set_position=function(self,position)
			self._position=position+self.location*16
		end,
		kill=function(self)
			camera_helper:shake_camera(5, 30 )
			for i=1,#game._ship.parts do
				local part=game._ship.parts[i]
				if(part.defend!=nil) then
					if(part:defend(self)) then
						return false
					end
				end
			end		
			del(game._ship.parts,self) --fix
			
 			local particle_system= new_particle_system()
 			particle_system.spawn_rate=1
			particle_system.lifetime=10
			particle_system.position=self._position:round(tileSize)
			particle_system.particle_position_r=new_point(-8,-8)
			particle_system.particle_speed_r=new_point(-.5,-.5)
			particle_system.particle_halflife=0.99
			particle_system.particle_animation={57}
			particle_system.particle_flipx_r=true
			particle_system.particle_flipy_r=true
			add(game.particle_systems,particle_system)
		  	
			return true
		end
	}
end
function new_part_command(position)
	local ret = new_part(position)
	ret._sprite=1
	ret.thrust=.25
	ret.name="command"
	ret.worth=0
	ret.basekill=ret.kill
	ret.kill=function(self)
		if(self:basekill()) then
			game:death()
		end
	end
	return ret	
end
function new_part_engine(position)
	local ret = new_part(position)
	ret._sprite=2
	ret.thrust=1	
	ret.name="engine"
	ret.attach_sides = {
		["1,0"] = false,   -- right
		["-1,0"] = false, -- left
		["0,-1"] = true,  -- up
		["0,1"] = false   -- down
	}
	return ret	
end
function new_part_bulkhead(position)
	local ret = new_part(position)
	ret._sprite=4
	ret.mass=2
	ret.name="bulkhead"
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = false   -- down
		}
	return ret	
end
function new_part_scaffold(position)
	local ret = new_part(position)
	ret._sprite=12
	ret.name="scaffold"
	return ret	
end
function new_part_cargo1(position)
	local ret = new_part(position)
	ret._sprite=9
	ret.mass=2
	ret.worth=2
	ret.name="treasure"
	ret.fragile=true
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = false   -- down
		}
	return ret	
end
function new_part_cargo2(position)
	local ret = new_part(position)
	ret._sprite=10
	ret.mass=3
	ret.worth=3
	ret.name="treasure"
	ret.fragile=true
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = false   -- down
		}
	return ret	
end
function new_part_cargo3(position)
	local ret = new_part(position)
	ret._sprite=11
	ret.mass=1
	ret.worth=5
	ret.name="treasure"
	ret.fragile=true
	ret.basekill=ret.kill
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = false   -- down
		}
	ret.kill=function(self)
		if(self:basekill()) then
			game._ship.parts[1]:kill()
		end
	end
	return ret	
end
function new_part_gun(position)
	local ret = new_part(position)
	ret._sprite=3
	ret.name="gun"
	ret._energy_max=30
	ret._energy_regen=0.5
	ret._target=nil	
	ret._gun_arc=8
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = true   -- down
		}
	ret.baseupdate=ret.update
	ret.update=function(self)
		self:baseupdate()
		if(self:can_use()) then
			for i=1,#game.asteroids do
				local asteroid= game.asteroids[i]
				if(block_collision(asteroid._position,new_point(tileSize,tileSize) 
				,new_point(self._position.x+halfTileSize-self._gun_arc,0)
				,new_point(self._gun_arc,self._position.y)) )then
					if(asteroid.name=="large") then					
						self._target=asteroid
						play_sfx(4, channels.ship)
					end
				end
			end
			
			for i=1,#game.pirates do
				local pirate= game.pirates[i]
				if(block_collision(pirate._position,new_point(tileSize,tileSize) 
				,new_point(self._position.x+halfTileSize-self._gun_arc,0)
				,new_point(self._gun_arc,self._position.y)) )then
									
					self._target=pirate
					play_sfx(4, channels.ship)
					
				end
			end	
	
		end
		if(self._target!=nil) then
			self._energy-=1
			if(self._target:damage(1)<1) then
				self._target=nil
				stop_sfx(4, channels.ship)
			end
		end
		if(self._energy<=0) then
			self._target=nil
			stop_sfx(4, 0)
		end		
	end	
	--ret.basedraw=ret.draw
	ret.draw2=function(self)
		--self:basedraw()
		if(self._target!=nil) then
			line(self._position.x+halfTileSize,self._position.y+halfTileSize,
				self._target._position.x+halfTileSize,self._target._position.y+halfTileSize,11)
		end
	end
	ret.basekill=ret.kill
	ret.kill=function(self)
		if(self:basekill()) then
			stop_sfx(4, 0)
		end
		
	end	

	ret.can_regen=function(self)
		return self._target==nil
	end
	return ret	
end

function new_part_shield(position)
	local ret = new_part(position)
	ret._sprite=5
	ret.name="shield"
	ret._energy_max=120
	ret._energy_regen=0.5
	ret._shield_time=0
	ret._target=nil 
	ret.fragile=true
	ret.attach_sides = {
		["1,0"] = false,   -- right
		["-1,0"] = false, -- left
		["0,-1"] = false,  -- up
		["0,1"] = false   -- down
	}
	ret.defend=function(self,part)
		if(self:can_use()) then
			self._energy=0
			ret._shield_time=30
			ret._target=part--._position+new_point(halfTileSize,halfTileSize)
			return true
		end
		return false
	end
	ret.baseupdate=ret.update
	ret.update=function(self)
		self:baseupdate()
		self._shield_time=max(0,self._shield_time-1)
	end
	--ret.basedraw=ret.draw
	ret.draw2=function(self)
		--ret:basedraw()
		if(self._shield_time>0) then
			line(self._position.x+halfTileSize,self._position.y+halfTileSize,
				self._target._position.x+halfTileSize,self._target._position.y+halfTileSize,12)
			circfill(self._target._position.x+halfTileSize,self._target._position.y+halfTileSize,8,12)
		end
	end
	return ret
end


:: pirate.lua
--[[pod_format="raw",created="2025-05-30 23:52:06",modified="2025-06-03 13:32:01",revision=258]]
new_pirate=function()
return {
	_position=nil,
	_speed=new_point(0,0),
	_sprites,
	_sprite=72,
	_thrust=1,
	_visit_points={},
	_visit_step=1,
	_shoot_timer=nil,
	health=30,
	init=function(self)
		self._sprites=game.sprites1
		self._position=random_offscreen_point()
		add(self._visit_points, random_onscreen_point())	
		add(self._visit_points, random_onscreen_point())
		add(self._visit_points, random_onscreen_point())
		add(self._visit_points, random_offscreen_point())
		
		self._shoot_timer= new_timer(130,0,self.do_shoot) 
	end,
	update=function(self)
		pq(self._visit_step)
		local point= self._visit_points[self._visit_step]
		self._speed=self._position:unitVector(point)
		self._position+=self._speed
		self._shoot_timer:update(self)
		if(abs((self._position-point):length())<self._thrust) then
			self._visit_step+=1
			if(self._visit_step>#self._visit_points) then
				self:kill(3)
			end
		end
		
	end,
	draw=function(self)		
		local particle_system= new_particle_system()
			particle_system.spawn_rate=0.5
		particle_system.lifetime=.25
		particle_system.position=self._position+new_point(0,0)
		particle_system.particle_speed=(self._speed*-1)
		particle_system.particle_speed_r=new_point(.1,.1)
		particle_system.particle_halflife=0.95
		particle_system.particle_animation={58,59}
		particle_system.particle_flipx_r=true
		particle_system.particle_flipy_r=true
		add(game.particle_systems,particle_system)

		spr(self._sprites[self._sprite].bmp,self._position.x,self._position.y)
	end,
	kill=function(self,mode)--0 hit, 1 deflected, 2 destroyed, 3 passed
		if(mode!=3) then			
			local particle_system= new_particle_system()
 			particle_system.spawn_rate=1
			particle_system.lifetime=10
			particle_system.position=self._position:round(tileSize)
			particle_system.particle_position_r=new_point(-8,-8)
			particle_system.particle_speed_r=new_point(-.5,-.5)
			particle_system.particle_halflife=0.99
			particle_system.particle_animation={57}
			particle_system.particle_flipx_r=true
			particle_system.particle_flipy_r=true
			add(game.particle_systems,particle_system)
		end
		del(game.pirates,self)
	end,
	do_shoot=function(self)
		local bullet=new_bullet(self._position,self._position:unitVector(game._ship._position))
		bullet:init()
		add(game.bullets,bullet)
	end,
		damage=function(self,d)
			self.health-=d
			if(self.health<1) then
				self:kill(2)
			end
			return self.health
		end,
}
end

new_bullet=function(position,direction)
return{
	_position=position,
	_speed=direction,
	_sprites,
	_sprite=80,
	_thrust=2,
	init=function(self)
		self._sprites=game.sprites1
		self._speed*=self._thrust
	end,	
	update=function(self)
		self._position+=self._speed
		if(is_point_on_screen(self._position)==false) then
			self:kill(3)
		end
	end,
	draw=function(self)
		spr(self._sprites[self._sprite].bmp,self._position.x,self._position.y)
	end,
	kill=function(self,mode)--0 hit, 1 deflected, 2 destroyed, 3 passed
		if(mode!=3) then			
		
		end
		del(game.bullets,self)
	end
}
end
:: point.lua
--[[pod_format="raw",created="2025-05-19 15:09:53",modified="2025-06-03 13:32:43",revision=747]]
function new_point(x,y)
	return sm({
		x=x,
		y=y,
		unitVector=function(self,b)
			return self.normalize(b-self)
		end,
		randomize=function(self,p)
			return new_point(self.x+random(p.x),	self.y+random(p.y))
		end,
		absPoint=function(p)
			return new_point(abs(p.x),abs(p.y))
		end,
		round=function(p,n)
			return new_point(flr(p.x/n+.5)*n,flr(p.y/n+.5)*n)
		end,
		clone=function(p)
			return new_point(p.x,p.y)
		end,
		length=function(p)
			return sqrt(p.x^2+p.y^2)
		end,
		square_to_circle=function (p)
	    local a = math.max( math.abs(p.x), math.abs(p.y)) -- max(|x|, |y|)
	    local mag = math.sqrt(p.x * p.x + p.y * p.y)
	
	    if mag == 0 then
	        return 0, 0 -- Origin stays at origin
	    end
	
	    local scale = a / mag
	    return new_point(p.x * scale, p.y * scale)
		end,
		__add=function(a,b)
			return new_point(a.x+b.x,a.y+b.y)
		end,
		__mul=function(a,b)
			return new_point(a.x*b,a.y*b)
		end,
		__sub=function(a,b)
			return new_point(a.x-b.x,a.y-b.y)
		end,
		equals=function(self,b)
			if(b == nil) then
				return false
			end
			return self.x==b.x and self.y==b.y
		end,
		__tostring=function()
			return "point"
		end,
		lerp=function(self, a, t)
		-- a and b are points, t is a number between 0 and 1
			local math=self + (a - self) * t
			--pq(self.x,a.x,t,math.x)
			return math
		end,
		box=function(self,left, top, right, bottom)
			self.x=mid(left,self.x,right)
			self.y=mid(top,self.y,bottom)
		end,
		normalize=function(p)
			local len = sqrt(p.x^2 + p.y^2)
			if len == 0 then return new_point(0, 0) end
			return new_point(p.x / len, p.y / len)
		end
	})
end

:: screen.lua
--[[pod_format="raw",created="2025-06-03 13:46:12",modified="2025-06-04 18:58:12",revision=319]]
function new_screen()
	return{
	sprites,
	image,
	text={},
	start_time=nil,
	wait_time=0.1,
	init=function(self)
		camera_helper:set_camera(new_point(0,0),true)
		
		stop_sfx()
		music(-1)
		self.sprites=	fetch("./gfx/0.gfx")	
		self.start_time=time()
	
	end,
	update=function(self)
		camera_helper:update_camera()
		if(self.start_time+self.wait_time<time()) then
			if(btnp()>0) then
			  self.next_screen_action()
			end
		end

	end,
	next_screen_action=function()
		 next_screen()
	end,
	draw=function(self)
		cls()
		spr(self.sprites[self.image].bmp,(480-200)/2,0)
		for i=1,#self.text do
			local t=self.text[i]
			print_centered(t,200+i*10,9)
		end
	end}
	
end

function new_gameover()
	local ret=new_screen()
	ret.wait_time=3
	ret.image=202
	ret.text={
		"You didn't make it.",
		"Or maybe you just didn't get money.",
		"Either way there is no going back.",
		"At least where you ejected near a space a space gas station.",
		"Cleaning space toilets won't save your dogs, but it will keep you fed.",
		"Better luck next life!"
	}

	ret.next_screen_action=function()
		 restart()
	end
	return ret	
end

function new_win()
	local ret=new_screen()
	ret.wait_time=1
	ret.image=203
	ret.text={
		"That's it for now!",
		"But Lucky willing, there is more Junk Haulers",
		"coming soon to space near you"

	}

	ret.next_screen_action=function()
		 restart()
	end
	return ret	
end


function level1_end(score)
	local ret=new_screen()
	ret.wait_time=1
	ret.image=201
	ret.text={
		"You made it home just in time.",
		"Lucky was lucky, and is all better now.",
		"Let's hope nothing else goes wrong."
	}
	ret.next_screen_action=function()
		 next_level()
	end
	return ret
	
end

function level1_start()
	ret=new_screen()
	ret.image=200
	ret.text={
		"You have been a junk hauler your entire life.",
		"When you retired, you opened a dog orphanage on a small asteroid",
		"Things were great for a while, but donations have run low",
		"Lucky needs surgery, That will cost 10,000 space bucks",
		"It's time to haul junk again"
	}
	return ret

end

function level2_end(score)
	local ret=new_screen()
	ret.wait_time=1
	ret.image=209
	ret.text={
		"Luna is doing great!",
		"All other dogs have been vaccinated",
		"You do have a sinking feeling you;re forgetting something.",
		"Something important..."
,
	
	}
	ret.next_screen_action=function()
		 next_level()
	end
	return ret
	
end

function level2_start()
	ret=new_screen()
	ret.image=208
	ret.text={
		"Luna has space chickenpox.",
		"Or is it spacechicken pox?",
		"You don't know, you're not a space vet",
		"You do know it will cost 15,000 space bucks.",
		"Better hurry before more dogs catch it!"
	}
	return ret

end

function level3_end(score)
	local ret=new_screen()
	ret.wait_time=1
	ret.image=217
	ret.text={
		"You did it. You paid for everything.",
		"The asteroid is now really yours.",
		"You do know this though.",
		"Junk hauling is in your blood, and you will never give it up."
	}
	ret.next_screen_action=function()
		 next_level()
	end
	return ret
	
end

function level3_start()
	ret=new_screen()
	ret.image=216
	ret.text={
		"So it turns out if you aren't home, bills don't just get paid.",
		"It's going to cost 20,000 credits to sort this one out.",
		"You know what to do."
	}
	return ret

end

:: sfx.lua
--[[pod_format="raw",created="2025-05-20 16:55:03",modified="2025-06-04 18:58:12",revision=247]]
channels={
	ship=5,
	enemy=6,
	engine=7
}

sfx_channels = {}
function play_sfx(sfx_id, channel,loop,restart)
	data = sfx_channels[channel]
	if data and (restart or false) and data.sfx_id == sfx_id then
		return
	end
	
		sfx(sfx_id)--, channel, loop)
		sfx_channels[channel] = {
			sfx_id = sfx_id,
			loop = loop,
			start_time = t()  -- use time() if preferred
		}

end

-- Stop SFX only if the given sfx is currently playing on the channel
function stop_sfx(sfx_id, channel)
	if channel then
		-- Stopping on a specific channel
		local data = sfx_channels[channel]
		if data and (sfx_id == nil or data.sfx_id == sfx_id) then
			sfx(-1, channel)
			sfx_channels[channel] = nil
		end
	elseif sfx_id == nil then
		-- No channel and no sfx_id: stop everything
		for ch, data in pairs(channels) do
			sfx(-1, ch)
			sfx_channels[ch] = nil
		end
	end
end
:: ship.lua
--[[pod_format="raw",created="2025-05-19 15:07:48",modified="2025-06-04 18:58:12",revision=1869]]
function new_ship(position)
	return{
		parts={},
		_position=position,
		_speed=new_point(0,0),
		_mass=0,
		_thrust=0,
		_boost=1, --fudge number
		worth=0,
		acceleration=new_point(0,0),
		init=function(self)
			local command=new_part_command(self._position)
			command.location=new_point(0,0)
			command:init()
			add(self.parts,command) 
			self:update_ship()
		end,
		update=function(self)
			self.acceleration=new_point(0,0)
			local boost = self._thrust/self._mass*self._boost
			if input:button(input_lookup.lpad.left) then --left
			   self.acceleration.x-=boost
		   elseif input:button(input_lookup.lpad.right) then --right
			   self.acceleration.x+=boost
		   end
		  	
		  	if input:button(input_lookup.lpad.up) then --left
			   self.acceleration.y-=boost
		   elseif input:button(input_lookup.lpad.down) then --right
			   self.acceleration.y+=boost
		   end   
		  	 self._speed+=self.acceleration 
		  	if(self.acceleration:length()>0) then
		  		--play_sfx(5,channels.ship)
		  		note(48,5,self._thrust*5,'t', 10,channels.engine,false,false)
		  	else
		  		sfx(-1,channels.engine)
		  	end	
		  
			self._position+=self._speed --apply velocity
			self._position:box(0,0,screenWidth-tileSize,screenHeight-tileSize)
			self._speed*=0.90
			foreach(self.parts, function(part)
				part:set_position(self._position)
	    		part:update()
	 	 	end)	
	 	 	self:do_part_pickups()
			self:do_asteroids()
			self:do_pirates()
			self:do_bullets()
		end,
		draw=function(self)
	 	 	foreach(self.parts, function(part)
	    		part:draw()
	 	 	end)
	 	 	foreach(self.parts, function(part)
	 	 		if(part.draw2!=nil)then
	 	 			part:draw2()
	 	 		end
	 	 	end)
		end,
		do_part_pickups=function(self)
			local dimension= new_point(16,16)
	 	 	for i = 1, #game.free_parts do				
				local free_part = game.free_parts[i]			
				for j = 1, #self.parts do
					local ship_part = self.parts[j]		
					local result = block_collision(free_part._position, dimension, ship_part._position, dimension)
					if result != nil then
						local attached=self:attach_part(ship_part,free_part,result)
						if(attached==false) then
							free_part._speed+=result*0.005
						end
						return  -- exit both loops early
					end
				end
			end
		end,	
		do_pirates=function(self)
			local dimension= new_point(16,16)
			for i = 1, #game.pirates do				
				local pirate = game.pirates[i]			
				for j = 1, #self.parts do
					local ship_part = self.parts[j]
					local result = block_collision(pirate._position, dimension, ship_part._position, dimension)--fix
					if result != nil then
						pirate:kill(0)
						ship_part:kill()
						self:update_ship()
						return
					end
				end
			end
		end,
		do_bullets=function(self)
			local dimension= new_point(12,12)
			for i = 1, #game.bullets do				
				local bullet = game.bullets[i]			
				for j = 1, #self.parts do
					local ship_part = self.parts[j]
					local result = block_collision(bullet._position, dimension, ship_part._position, dimension)--fix
					if result != nil then
						bullet:kill(0)
						ship_part:kill()
						self:update_ship()
						return
					end
				end
			end
		end,
		do_asteroids=function(self)
			local dimension= new_point(16,16)
			for i = 1, #game.asteroids do				
				local asteroid = game.asteroids[i]			
				for j = 1, #self.parts do
					local ship_part = self.parts[j]
					local result = block_collision(asteroid._position, dimension, ship_part._position, dimension)--fix
					if result != nil then
						
						if(asteroid.threat<2 and  ship_part.fragile==false) then --todo: consolidate check connector better
							local cardinal=cardinal_direction(result,0)
							local key = cardinal.x .. "," .. cardinal.y						
							local can_hurt = ship_part.attach_sides[key]
							if(can_hurt==false) then
								asteroid:kill(1)
								return
							end
						end
						asteroid:kill(0)
						ship_part:kill()
						self:update_ship()
						return
					end
				end
			end
		end,
		update_ship=function(self)
			local unattached=find_unattached_parts(self.parts)	
			for i = 1, #unattached do
				local part=unattached[i]
				part:kill()
			end
	
			self._mass=0
			self._thrust=0
			self.worth=0
			foreach(self.parts, function(part)
				self._mass+=part.mass
				self._thrust+=part.thrust
				self.worth+=part.worth
	 	 	end)
		end,
		attach_part=function(self,ship_part,free_part,collision_result)
			local direction=cardinal_direction(collision_result,8)
			if(direction!= nil and parts_can_attach(ship_part, free_part.part, direction))then				
				local new_location=ship_part.location+ direction
				for i = 1, #self.parts do --check if this spot is already taken
					local ship_part = self.parts[i]	
					if(new_location:equals(ship_part.location)) then 
						return false
					end				
				end
				free_part.part.location=new_location
				add(self.parts,free_part.part)
				del(game.free_parts,free_part)
				self:update_ship()
				play_sfx(2,channels.ship)
				return true
			else
				return false				
			end
			
		end
		
	}
end
function loc_key(p)
		return p.x .. "," .. p.y
end
function find_unattached_parts(parts)
	local visited = {}
	local part_map = {}

	-- Build lookup by location
	for _, part in pairs(parts) do
		part_map[loc_key(part.location)] = part
	end

local directions = {
	{ dx = 1, dy = 0 },
	{ dx = -1, dy = 0 },
	{ dx = 0, dy = 1 },
	{ dx = 0, dy = -1 }
}

function flood_fill(part)
	local key = loc_key(part.location)
	if visited[key] then return end
	visited[key] = true

	for _, dir in ipairs(directions) do
		local dx, dy = dir.dx, dir.dy
		local neighbor_pos = new_point(part.location.x + dx, part.location.y + dy)
		local neighbor_key = loc_key(neighbor_pos)
		local neighbor = part_map[neighbor_key]

		if neighbor then
			-- If either side allows attachment
			local dir_key = dx .. "," .. dy
			local reverse_key = (-dx) .. "," .. (-dy)

			local this_allows = part.attach_sides[dir_key]
			local neighbor_allows = neighbor.attach_sides[reverse_key]

			if this_allows or neighbor_allows then
				flood_fill(neighbor)
			end
		end
	end
end

	-- Start from origin part at (0,0)
	local start = part_map["0,0"]
	if start then
		flood_fill(start)
	end

	-- Now collect any parts not visited
	local unattached = {}
	for _, part in pairs(parts) do
		if not visited[loc_key(part.location)] then
			add(unattached, part)
		end
	end

	return unattached
end
function parts_can_attach(partA, partB, direction)
	local key = direction.x .. "," .. direction.y
	local reverse_key = (-direction.x) .. "," .. (-direction.y)

	local a_can_attach = partA.attach_sides[key]
	local b_can_attach = partB.attach_sides[reverse_key]

	return a_can_attach or b_can_attach
end
:: start.lua
--[[pod_format="raw",created="2025-05-20 16:44:31",modified="2025-06-04 18:58:12",revision=757]]
function new_start()
	return{
	sprites,
	init=function(self)
		camera_helper:set_camera(new_point(0,0),true)
		self.sprites=	fetch("./gfx/0.gfx")	
	end,
	update=function(self)
		camera_helper:update_camera()
		if(btnp()>0) then
		 next_screen()
		end

	end,
	draw=function(self)
		cls()
		spr(self.sprites[192].bmp,(480-200)/2,20)
		print_centered("Time to haul",200,8)
		print_centered("Press any button",220,({7,7,6,13,5,0,5,13,6,7,7})[flr(t()*10)%11+1]) 	

	end}
	
end

:: .info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE0OjE0OjE1Iixtb2RpZmllZD0iMjAyNS0w
Ni0wNCAxODo1ODoxMiIscnVudGltZT0xOCx3b3Jrc3BhY2VzPXt7bG9jYXRpb249Im1haW4ubHVh
IzEwIix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJnYW1lLmx1YSM3OSIsd29ya3NwYWNl
X2luZGV4PTF9LHtsb2NhdGlvbj0ibGV2ZWxzLmx1YSMxMiIsd29ya3NwYWNlX2luZGV4PTF9LHts
b2NhdGlvbj0ic2NyZWVuLmx1YSM2NiIsd29ya3NwYWNlX2luZGV4PTF9LHtsb2NhdGlvbj0iZGly
ZWN0b3IubHVhIzM4Iix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJzdGFydC5sdWEjMSIs
d29ya3NwYWNlX2luZGV4PTF9LHtsb2NhdGlvbj0iaGVscC5sdWEjMSIsd29ya3NwYWNlX2luZGV4
PTF9LHtsb2NhdGlvbj0iaW5jbHVkZS5sdWEjMTciLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRp
b249ImhlbHBlcnMubHVhIzEiLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRpb249InNoaXAubHVh
IzEiLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRpb249InNmeC5sdWEjMzQiLHdvcmtzcGFjZV9p
bmRleD0xfSx7bG9jYXRpb249ImdmeC8wLmdmeCIsd29ya3NwYWNlX2luZGV4PTJ9LHtsb2NhdGlv
bj0ibWFwLzAubWFwIix3b3Jrc3BhY2VfaW5kZXg9M30se2xvY2F0aW9uPSJzZngvMC5zZngiLHdv
cmtzcGFjZV9pbmRleD00fX1dXQ==
:: [eoc]
