picotron cartridge // www.picotron.net
version 2

:: gfx/
:: gfx/0.gfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE0OjA1OjM2Iixtb2RpZmllZD0iMjAyNS0w
Ni0wNyAwMDozMTo1OCIscmV2aXNpb249MjAzOF1dbHo0AGuLAACO4wAA8Sh7WzBdPXtibXA9cHh1
AEMgEBAE8FYHEAfAF9AXwAcQB-BWLGZsYWdzPTAscGFuX3g9LTAuMTI1DQAQeQ0A2jYyNSx6b29t
PTExfSxJAPAfIB8eUB5gfnAGHxwfEB8cBjAOEAYtHxAtBhAuBj0cPQYeAA69DhAOB50HDhAOtwoA
Rz0XPQcIAP8SFy0XLRcOAB4GFx0XHRcGLhAGdwYQDjAGVwZwfmAeUB4gnAAv-wN5cAkVGRUJYAl1
CVAJBRkVGQUIAA4hQBkIACwZMAgAryUZFRklINkQ1QCYACfwBfAUeGAYEhgSGEAoEhgSKDAoFRgV
BgAhHx0HABUeBgCxGA4VHhUOGDAYDlUGAD4FOwUIAH9Qfx5gHVAdKAEoMBAWFQIAEiAHACMWAAgA
KxUGCAArFgUIAA8iACoTABMAIgUgEwAvBRDCACfwFDAPERAeEA6AXxCADVwNYJ0gDgAdfB0ADgAN
DA0MXQwNDA0QCgAhDTsGACcADg0AFx4MACcOAA0AFRA8ABMATgCgIJ1gDVwNgF2ADm0AHzCZAi3w
Gg4DMAMOcHMwDhATWxMQLhMLXxsLEx4AEwsNWw0LEyADCw0LPQsNCwMwCgA-DRsNDAACASIAEyA0
AIEAHhMLXQsTLlEAQQ4wc3BjAA9GAy4QGa0A8QdQDlC9EA4ADTYfDzYNAC4NNhw2DR4QBwATMAYA
E5wEAAYUACEQHgcAIS4ABwB-AA4QvVAOUJEANFFWDnAGV3AEYBcPHBcNF3IEcRddFwYeAAZUBDEG
EAZkBEcGEAa3DAAECABIF30XBnYEIRcNRAACegQvDlalAC1g8AMPERAOAgDxA0C9IA4NOx8POw0O
IA07HDsNMAYAISAOBwAjDiA3AQYQAA8kAAAyvUAOTQAv8AOTADZAOh8POm8AUTocOg0wBgAhIA4H
AAiTAC86HCQAAg_TAERAOB8POG8AUTgcOA0wBgAhIA4HAAiTAC84HCQAAg_TADUDnAPwCVAOUBZ_
FhAOAAYwFhAmAD4gFhAmLhAOEA0AsA4wDgAWECYQDjAOBwDABg4wDgYQJhAWDjAOBwABIADAJhAW
EA4QLiYQFiA_DQCPMAYADhAWfhYAAzAv8PA8AP----9k-y4QBtAWAA8ecBsOAAYucAsAPoAbIB6A
CzAecBswHhAbMAtAHiAbEBtAHjA7UD4gKzAuBgAOMAtADgAW0Abw2gkogeAG0CawFgUGfAAgBhV7
APAGFQYOgBsABRYOgAsQFgUOcBsQBhUOgwBAIBUGDoUA8gAgBRYOMDswFgUuICswBhWKAK8VFrAF
FtAGBeAFjQAnAowA0RYIcAgWJQYYUBgGFQasC-AFJgUAKBAoAAUWBRYQWBAWJQYgOCAcAJAgOCAV
JgUQWBAaAAEjAGAWJQYoMCgcAP8DGFAYFSYFCHAIBRYFBrAGFdAFFgIpDzwA-----9sFjw7Q8AQO
0C6wHvBQHrAu0A4AD1kLL-8JNgoACtAJsAoQCcAZBtAJBgAKwBnACvBJUwAon3cK0ArwAQrwR0QA
KN9mCvAACtAK4AoQCvBGsgGfD_4BMv8MULgQDgA4OzgALhh7GB4QGBs-GxsYMAgbXRsIBgAAsRgb
PRsYEB4YexguNQA-DhC4eQ0x-zoHbxSADmRgDiQvHxQwLiQdHiQQDlQ_JAAOBA6kDQBEDRQONA0Q
JD0kDhQNEBQdLhQOFA0gDgQNPjQdIBQuRA1AhA1QRE1gTfAJhAAn8B1ALxTAFCAEDlAEDuAEIA7g
BBAk0A8fBEAE4AQOoAQgBBAUEBQQDQRgBBAUIAYAEQ0UAGDQFAAUoA0UAE8kwA0Esg8qH-A8AP9U
8U8AGQB3ABkQGQcVNxUHGRAXFQcGFwYHFRcQBzU3NQcAB1UXVRcTNRc1ExcTFRcVFxUTF0UHFQdF
BwAHRRdFBxAXJQcVByUXIAgHBRcVFwUHCDAYdxgwGAAHBR8cBQcACwAXPggAP2BXQOgAKQ88AP_R
4CcK4ArQKrBKgIqASrAqTgYv8DiLACkPPAD-------------vo9mDx8E0ATwaX8AKQ88AP------
------------9lPIyATw-wEA8Q6HDxXwtg4PFPDcjiC_cH5wniC_8AI_MD5APiA_UAgA8zHwJQ6P
GQ4QDxSvGXB9cJ0gDxSt8AI9DhAOPQ4wPQ4QDC0OQD0MEAw9MA49DPAiDq0OEAydDGAOfRxADp0g
DJ0MLQARQCwAUQwOMAwtLgASDC4AxAwQDM0wDK0OIL0gDFgAcUAMLQ4QDE0qAPAEDj0gDE0M8BQe
sA5NDC0cDhAMPeIxyDA9TC0OID18IAw9bGEAMU0eEI0AECBfAPYNFB7ADj0OgAwtDEA9IA4tDDA9
DCA9DJAMLQzwCTMAIm0QkgCSIE3wJA49DB5gMAAwDC0MgQAACAAIMgABmwAwbRw9mgBwEE0O8CQO
bTEAEDCoAAhiAGYADgAO8AVmABDNYwCaAAxN8CUObSwwYwAAMgBGjQ7wAy4A0C0cfQwQDo0M8CgM
fQw_AAEsABJNjQBHjQzwA40AYC0OAH0OEBYAQSgOjQwsABU9VwAZnVYAUQwQDl0MKwAgKwwJACGt
QIkBASoAMC1skGIzKA4wWwAwDCBd6QBQHE3wLAxYAWBNDA0MHQw2ADNNDhBLARAAmwAIZQARQFAB
gS0MEE3wLA49CwASsGgAJwwtMwAqDC00AADbARAgRAJUIw4NTE03APEGDAAMDk0OEE0ODA48IAw9
XA6ADD08bgAYTG4AAF8AQ-AjDK03AEDNDBC9fAIggAzINhbNKQAB2gByDPAiDJ0MDisAAUgAERyq
AqaADgyNHDAMnRwgWABwQD0O8CIMjdoBELAWAPIBPQwwnSCtDKAMfQxQDI0OMBQABCkA8AMOHH5A
HgwOwAwODA5QDA4MQF4KAOAwjgwOsAwuDB4McAxuDBgAYFAuDDAMLgoAAIkDIFcOJgBAQC4MYAgA
IgweCAARQBYAESAGABCQFgADBAAxIAweTAAiDmARAGAODA7wRk1_AzBADH2cAREOawHBPZAMzRAO
vWCNDPBGngB0QI0OQAw9QIcBEL0AArAMDjAejQzwCj7wKEIAIA5A6gABQgAkLQxDABHNKQCS8AkO
AA4AHvAnTAAB4QJGDC0wDlEAAJgDAgIA8QEQDj1cPRAOPXzwCU4ADvAmWwADTQMTMIMAED0JAjOg
Dj1nAUDwEC4QXwARJV8AAr8CBokAAF8AUy0OoAw9xAFwDvAOHgAeEGMDZgkO8AtNTCkAGCBgADEA
TkChAAA1BPMELvALDgAeAA4ALvAJDA7wCgzNDOYAESCeAAOeAjOdDDCVAFAOffAKXjIAMPAl3V8A
OA4gPV4AASkAgExNEA4MfRzwMjmwEB4ALvAlDM0OIA67ABkgvgAALgBwzQwwDo3wBysAM07wJTAB
QT0OIE3KAge3APEJDhwOHA4wDr0MDkAcDgxNDA7wBx4QHvAoHAFIEA7tELEAAEYBgK0MoB49DPAH
3QAhKU0lADvdDBBqAQCxAxDAJgAxPvAqrgUhDiAlABFM1wAQbA8DIowOcAVADiB8PfIBIfArTQCw
DD1eTRAM3SAMvRARAhE97QRCvQzwRfUFYBAMPVAMPSkCESCBAwMjAHEMEA69DvBF-QEgEE18AkIw
DJ1ARAChDD1ADj0QDK3wRwUBEEAGAHAOEAwdDA1QBQASMOw3AxwAIh0cCgB1DQwQDh0MDQIAbCAd
DA1ADhgABdoG8Rr-Nw7wUS7wHR7wJB7wHQwO8CB_8H4O8CA_AE7wrj4QHgAe8KxOMD7wqxcC8AsQ
PvBBDvBdHhBO8D4eTPBajvA6DA48HjzwW1UB8AA1HB5sHgwOPPBdHvA0DryNBKAO8BEe8E4e8B-c
DgDwDPASHvAXHvAlDvAe-Acu8Dge8FIO-Avwmx58Ls8B8AdsDizwmg5sDhwuAKwuDA7wfy7wAn48
wAMxHgCcxQNg8IAO8AFe0QMRHBcAEGwMADEe8JHgA0AMHgxOCAAxTA4cIwBBDA7wkssCcAwOHBAM
DnwTAEBuDA5wggISiiEAEACxADAuDA4rBGBQngAO8IRGABA_GwCgLD4MHgyeMK4PFg4AIPCBGQAx
HhweVwQSPiMA0gwOIP4ADAsO8IGODA5RAAMIAKBuEH4QLgtu8IEcJQAEUwARDOgE8gYQ7gsMCwwe
Cw7wYh1AMfACLgweEB4_ADAgHhAnAHAuEP4EAA4cIQBSIBEdEQBXAPAA8AIOIAwODHAsDgwwPgC_
QwAARQDxADUO8BwNBBABDQQMDRAMDlkAEAZPBfAEDlAeMK5ALgsMDgsu8DUe8BtEPeoAIP4GXQNj
XmBOCw4MPwCQJA0EHT4M-gpQvQTwCY4gfoCO8GENJB0BHT4LDgv_BhD_AiB_IBwA8AIOEI7wXw0E
AA0QHRH_BACOABoA4BAOcH7wXw0QDRAEAA0AugDyCAsOC04ADgt_Cx4LTgCOMA4ADiCO8GUNHgBw
fhA_AB4LHsw24EB_IA5QfvB57gBu0I4wJQDwBAwe8FveEC4LHhB_AA4gPhA_UJ4UAFBMDlwOEG0B
wwAOCy4QriC_IK7wanIB8A3wAT4QPhBeED4w-gQALvCQvkD_B-BnDhwLPgA_-QEAtwLzEeDuQK4A
jvBo_wgQDiBeIP4BQP4C8GgO_wgOEJ4QTgAOAgDTHmD_APBp_woMAJ4QXhQA8AcOkM7wagz7AByL
EC4AThD_AZCO8Gv7OgLwBiA_EG4ATgAe8BcO8FAMDiwADvsMDCcB8A0QHvAM-gIMDoAO8EkOXE0A
DqtgDosOsP4DUEzNewOwUwx9DB0ADhscWwxoN-ERiw6waw0bDJsOIBwODP0ADvBNXD0MHTwNAA6r
AE4ADov3N-UCMA77ByAs-QAc8E0MbUwdDB0eAPEEAD4AHhAMmwAOmwwgHD1MjQzwTDUFEC2HCAQm
APABDBAOAC4gHAtMG3wePBA8LVEC8AMOPQw9DvBEDg0cDRwtDA1MPQurAEEALgsOdQBhHgAOIA4c
YwFArA48EIUFsBweDC0sLfBATo0sRAQwHUs9dgAAlAEgAAynAPARAB4gLA4QLgBufBAcfSwtHC3w
PwxdDF0sPQsNKw0LHQu1AADCBlCLDoAsPpgB8AAAPnwQDP0ADC0O8D9MXTxTAAEqAABXANBgDosM
YIyefBAc-QMMpwDwGDwdDC0MHQtNWwAOqwwLDgwOCwybDlAO-AoOEAz9BA7wSgw9TA0MXT4A8AlL
DPsGDiAOEA78Bx4NDhBNLA0cjQwO8E02BcJcDQxNAA47DA77AizsBsAQbB7cHgwOEF0OLI2gAfAp
TQwNTA1cPQAO_wgMCwwLDiAOIPwHDiwQDE0OHA0MbQwdDvBTDi0MDRw9EPsJDgsMcDwO-AUOEDyi
ABANhgXwCiwO8DMe8A4OPG0QDvsHDAsMgA68DkwOAEw_BrEsAA4ATgAuIB4ALnADAQIA8AXwHw7w
FAxOMAv8AAtcDvAITA5MDioB4PAAfgD_A-BGDgwL3B5cfTmBDvABrA6gDhA3APAAMH4A-gTwRw4L
3B5MCxAuEwARIAIAYQAOEA6cMJMBAWgBcB4A-hHwSA55BCELjAYAIRwQJwAhAC4CAFEOMF4ALmM6
gv4VAD7wSQ4wNgBBbhBOEE0AYCAOMA7wAi8AxP4G8HMeAF7wAC4AjmAA8ArweS4gDlA_IC7wAA4M
HgBeDPCFDE5wPgAugwCwnA4cDnwO8IEu0F6nCdH8Ci6wDvBwLI4gDiA_EQDxAQc_HE5QDvBxHA5M
LhxwHiByAjAsPkxmBXEwDvB0DjwOogUBhQBgIB4cDhweUgASbG0FoB7wegwuLA4MDhzQAPAXUB5M
LmwO3F7wflwOHEAOQHwOTD5cThwuDB7wgQwOLA4MIA5QHqySACA_LGMG4Swe8EceHEAOIA5cDswO
JQbQHvAtDvBKDkAOIB4sLmQI8AD8Ak7waA7wGg5MDpwOLA6KBlDwaR7wGU4GUB5sDjxOJgPwAPCi
DgwObE4cPvClHowOLBIAMKcujAcAYw0MDvCMPqwA0Q4O8JYe8P--rS7wtg6FB0B4HvC2EgAFAQCj
Gh7wFh7wjw7wFhcAExkiACBlDggA8gVbDgzwSg7wFR7wWQ7wTQ7wWC7wtUoALP_Y6g7kMzIuNzc3
MzgwOTUyMzjzDpEzLjU0Mjg1NzEGABM0-Q4POA8nHzg7AP9dCJkQBwEA8UId8QTwpPEE8J3xFfCT
8RXwkvEX8IjxJPCD8SXwf-Eu8HrxLvB58TDwdvE08HTxNPBy8QQAAQBxEAEAEQAREBEg8Qnwb-EF
8AvxCvBu8QVwDxVkBAFADPEGQPEK8GzxArDvFA6w8QTwavECsA7dCwDwCWjhACFAfu1_QCEA8QLw
ZfEAgA79DpDxAQsA8AYwPgAO-Q1eQPEC8GLhYA79GJDh8GAJAPAUFw6Q4fBe8QEQXv0YTkDh8F3x
ADAO-SJgwfBd4UAO7Q79EQ4MAMDBMA79KQ5AsfBbwUAJAPEHwfBZ0RAu-SouEMHwWMEwDgT9LQ4w
oQsAIf0uCgDyIZEwDv00DjCR8FaRQP00QJHwVLEQLv00LiCB8FORQA79OA5AYfBToTAO-Sce7Q4w
cQwAECYJDABAAIZQoTAODQ79JBAAgBAu-QEu3T79AwWw3S4gkfBQoQAO-QQgACEQDhYAQv0BQHEW
ABAAawYBGQBUDS4dDo0cALdOkTAO3Q5gDt0OkBQALEDtEgDxAjAOjV5ALt0ucE49DiAe7S4QJwDR
nZD9BMBNQP0ABA4wUSYA4R0uHS6Q-QSwLh0OQP0BFgARcT0Mrx0OgA79Cw6ADg0ZABZMrv0LnkcA
L-0kEQANIL0O0gCPMA79AQ4QLt0ZAAxxEC49DhBtXhkAIV69GADwAAAOEFHwTkEwDm0OEG0OgAgB
AToAHy4XAAuxPT4QHQ4gDnARDt0BBx1tHQAQsBsAG9AZACMuIBkAMOAuPS8OFE4ZACMOQBkAP-AB
DhoAAj8NDr0cAANADQ5gDh8AYd0OECGQESEARg0_PX4jAF1NYCH9AR0AIU8xHQBwPQ4AAS4BAFoC
8AMhAA5QDiEOPS4Qjg1_EEHwUSHgAfIFQD0OYQ79BkEOEGEOPS5A7hAh8FMZAJhNYQ4NHv0DQSAZ
APIBXkBNfv0GDg0OgS5NLkDOMBUAhDAO-RUOgQ5tEgDwGQABEF5ALq3_AG2uTU5AzhABACHwU1Ew
LmAOrQ7gDv0FXmCuEEHwVEESABa9EQDxA1Yh0A6NDkCBQA79Aa7wASHwWBEAEDA4A0IBjg0OEwBh
DsAOHQ5dJwBA7b7wAFwAQFhBsA6uE2oO3a7wAVEPAJBB8FuhMA6NLuBjAZCuYCEwcfBdoTB3ABLd
DgAgXpFzATIgThARAEBh8GFxcAC5EA79Bn5gUTBR8GIQAPAVQfBlcRAu7S79Bn5AcTAx8GZxQP0Y
TnBxMCHwaGFALo2u7X5gDQBQakFgDo1aAlN_QHHwdA0A8AHtfjBx8HZRMA5tLhBOIE5teQxAcQ7w
dxIA8ABATWAObX5AYQ7weUEwXh0LBRBNdwmg-gBAYVAO8HVBYL4Dkn5gcWAODQ7wdA8A8BJeDQ5g
cWAu8HshEP4PQJFAbvB5IWD_BZBhcC0_8Aod8F0OAPAFgHFQHh1O8AodDvBdQfAOkWAOXT49FSnw
Ww4AkVyh4PECQC5tLg4AmF2R4MGQnU7wBwwA8AgeHQ7wX-EPkC7dTvAHDg0u8F3xD5Ae7Q0AsT3w
XgEg8QMAQXBOEADCDQ4d8GLxAuAOBP0CIAABDgCQ-QNe8AYOPfBbxQBwEA79Cz7wBQ8AER0OAGEA
Dp1O8AQ8AIBbHV7wA479CxAAUD3wW10E0QEj-RMPABltDgDwAn1ODR4NXg0e-QYuvQ4NTvACFQBH
-R8_3QsAQF7wAQ5OA3HwWj0O-RsuEABjPR7wWf0gDADALvBYbQ4Q-RMOEC5teAFIbtAeTRQAkHBu
wG0u8FhNDnoF0q0_-QMOEE4dLhDOwG0mAABnFxIOFgBfDjAObU4YAAw0MA6NGACuQA4NDm0ODS6g
HhsAUc0ekA6NFgAAAQYAKAADGgDkEC69PoAObU7wWG0uEC4XAJEuMA7dTnAOXV4XAAIwACL9BBgA
8QNeYA5dTvBZbS4gLl0OEM5NHiAWAPIDQC5dPvBVHiBtLkAOXQ7gPQ5AFwBEjS7wVhYAcBB_QC4N
DkARFAMbAFBUPiCdQG8F8AAFDxY1DAVgLpD9AV5AbU4ZADFNDj0bABlVGADAThCdLhAuHQ4wtQ7g
FAAhPX4UAABPAageLUAFPCUcBQwFGgDwAC4QTkBOdU5wHu1_MK7wVhIAkPABDgxVDBUMBQQDQO1_
EM4XAPAAjT7wAQUMpWAu7X4QvvBXKACBYGUOEC51DAUUAPUHnvBZThA9Dk0uYAUMBQwFHAVAHAUM
VRsAMAAOnRoAQTUMBU4yAGHNnhCO8FpGAIAFDIUMBTAOJRcAYr2uEH7wWxcAIDxVFwAASwABGABB
bvBdPkYAEU5HAOAOBQ4QTmBOfa4wLvBiLhkA8CWwBQwFPAUcDtAODT5tnlAO8GMuEE4tTnAOIJUO
IA6QXh3uUA7wXA0OPQ6QDg1eYAUMJXBlLQBk-gDwYg5tFADxEGAOHAUMFQwO0A4d7vBgLh1OEH4d
XjAOBQ5FPgUOEB4cAPIBMK4dzvBgHk1gDgR9XjAOHPIAABkAsA48DjAOBK3O8GBOUwZxXR4NXjAO
tVYCcDUOMA5dDk05AAApAmC9XjAO5YBdBVBgLiAeQA8AUwwVDJUOEwCwEC5AHS4drjAuxU4oBkBN
7vBiJwAQHfwHcBB_YA7lDAUNAJA9DhC_8GQOMB7eAgMbABD100cCHABArvBxLhYAY06QDtUOUBUA
UX7wdB4gFQAU5RQA8wQgbvCOHpUuYA5ALvCbhQ7wrj5FgQwGAQAc_9sKRTM5LjbcCkQ1MS453Aof
MdwKEfMZG-EG8KLxBvCbEQDxEAAh8JABDxMxDvEIDmEO8JDxGPCJ8SMO8ITxJOkK8A0tDvB68S-w
dPE48HDxOPBv8QcPFQEdIT0BAA0BvRIgASDRCvAWAQ7xBvAKAQ7xCvBq8QjwCvEM8GjxBPACDfAF
8QbwZvEE8BjxBskK9io9QH0PFP0BIA1gPfED8GEBDtEOAZD8CeDxBPBg8QIwPQAN-AltcPEG8Fzx
AWAN-BUNsPEB8FzhAA0NAPAK0Q0wDQwt-BY9DA1gHeHwXLFgDfwfDUANIAwA9gdQHfwfDSANQPEA
8FjBYA38Jg1g4fBWCgDyCpENAQ0wLfwnLUAN0fBWkWAN-CoEDGABDqENAIArDRANMNHwUwwA8B4x
DVCx8FJxDgFg-DINMA0AsfBSgQ0wLZwt-CUtAB0AHZHwUmFgDYwtEA38J2ANAPAQDVAtTA0MDTAN
-AkNLB38CD0gofBOkQ1gHUwNUA38CMMAwwkNIMHwTJENcA1MYBMA8AAIDTDB8ExxDQEQLRANPK0V
APEPLfwEDQwNQLHwTHEwDRwQDTwNEAwE-A4NkPwGLUCRFgAwDB0AFwC0DfwPDRAdUIwNnE0ZAAAV
ADAfDTAeABLsFAAdLRIAAyYARi0QLRwUAKccDQAN-CAEDDAsFABzEA38IQ0gDRMAwEphQA08EA38
KQ0Q7OoAFHESAIVsTfwdDRD8ARMAuQ0ADUwdIF38BU3sGAAAzQCNgB38Ai1ADdwZAL8QPw8gDfwD
DRArEB4AADAAOzAdAF4AOyAdvB0AIRtQHQAvK1AcAAAhC2AcAEkLcC2MHQAQDUQBaYAN-ASwDRkA
Egx1ARCANgAIGwAQQXgBADsBEFy5ARUFHAChDA0QcfBKIQ4BMLQSgRBsDWD8Bg2QbgAoBBA5AHds
bfwHLWC8NgAFGwA--BcNGQAD0NwNPF0MHawNIB0QDawQABpNHwAy4PwOFgBgUfBMQTA9FAAhzA0V
ADAtrF1JCzMBDgEtAJG8HQC8ABwt-Au3UBC8ehRyDRAxDvBPITgAY5wNIOwQDR8AMAwNjBUAEEEe
AFBdEA2MHRwAtpwN-AANEC0MHXxdGgA0DUDcGgAwbUx9GAAVAQwBYpwNUA2cMFQAQSwdXF1xAFAB
8E5BEDoAgC1wDDAMIC1scwFwLbwNEG0snT8AgEGQrAQN8AGcgQEA7QPzBCxdDA0ADRAh8FFBkA2s
DfABDYwbABHdFwDyBlQRkA3csA0MDZwNDA1sDWxNIO0QQRYAYMD8Bg1sTe0BEQzOAPAJDfBTQWDs
XQBd-AQdfE0gDQC9IEHwVCEObgQQAwIDqRNN8AQh8FZhDTARAEFYQQ0w3wMwAA1sFgChAw0cDaxd
IA3QDaILEWBOAhIQHABgBA2sffACGQDwGlpRMC0cLSB9EP0HjH0gDQAdUFENIfBbIQ4BIA0gDTwN
kA3wBw2MfRBRqgsARQBh8BMNbH0wDwABogLxFAwN8A0NjF1QDVEdEFHwYGFAXAQNwA2ADUANjF0g
DRBhDRENFwDwDy08LfALDWx9QHEwDTHwY0FgDWzwCw1MnUBxQA3wZg8A4A3QLxiADSy9QGEN8G9B
o1LxBmCqMA0cHQxtYKHwDQ0c8E9BYA0ETBYAQwyNDA0WAPAAUUFALUwtANoQLRwtDF0AehgjsQ0a
ACANYN8VoQCqQBwNDI1gkfA2AvAIBA3wTzENUA0MbQCqQC0MjWCB8BENPA1JADCNqhCGAfAFXSAN
MKHwEQ1MHfBPQUAdLB0cDYoNAfAUDB0sDSABILHwEQ1s8FIxIP0HDK1gkQABAC3wDQ1s8FMNIR3I
AiH8AFoCkXABEIEADSAcDR0AslRBMM0MTQxdkHFgNAH0BWzwVkFwLQwtDG0gAVDBMA1sDfAKFQCB
DRxdDA2QwTAkAdBs8FeREO0Q8QQNEB18PADwFQgtTB3wV3FAAcDxAkC8DfALbA3wVoEgMQABAAEg
ASDxAhANEBcAxg1cDfBZ8RUAASAd7A8ANVD8AA0AYBR97C3wCQwAUFvxBRAB-wEAAwbxAPAIbA3w
YwENEA0AARARYBUAAicA5VY8DRD9AQA9IA0cDfwNFABT8AsN-BAOAJBM-Qv8ES3wAy2WAHb8Mw3w
Aw2MCgBi8Ff8NvABEgAACQAAWQNk8Fb8J02cFgAwJg1ADAAAJwMCDgDADYzwAQ1cHQzwV-wkpANR
DZzgDXwPAPITIi0Q7OCcDQzwV2wt-BhA7C2wDWw98FdsDRD8GED8AQ2wfA4AcRwNrB38Bw0TAEBM
DQxNFQAgAD2rBBH8uAdRAw2wTG0VAC4N3BUAIRAtKgACgAMggC2bGGjwWWwNMA0XADINTG0VAD0M
DYwXACQtEBcAAIID0Awd-AUtQA1MjfBZTC3VBDQcHWwcAGP8CR1ATJ0ZACRdXBcA9AQMDfwGPTAN
LH3wWQ0ETD0MDUAtHADwAC38BV0gDRyN8FkNXF0wTa0ZBBkA1gNdQA0MnfBZDWx9AI0XACACbYQA
cAx98FsNbE1UBxEceB8GawAAIQARPB8AMH0QfRkAEdzBAED8AX0QaQAQXAEEhQ0MXRAN3A0wGAAR
nTAAITBdMAAAwggAFgCTDJ3wXA18XWA9FgDtDQwd3J1AbfBeDXxdcC0VAEeMTXBNEwAAGwJhYg1s
TfABFACC-ACtQA0M8GMSAKQcDawNMC3crUAdEgDA3A1gDQANjM3wag2MOwAAEgDwG4ANBGzd8GoN
fD3gLdwNgC1MzfBm7D0gDZAN-AENcA0gPL0MDfBmDcxN0BEA8AJgHSAs3fBkHexNsA28DSwNHKxT
ot3wYw38AS0MDbDSBUBsDQzdhgDxBQwtHC18TYAtLA0sPVw9AC2svfBlRwEABABTXC2wDTwMABE8
cwkvrN0fAAQA_AZXDA1AnO0gADgsHQwiAADxAQCpAWM8zfBoDQwWAEUETB0MJAAwXQwNLwFmEDy9
DPCIOQAhLXAVAFON8I0sHRMA4B1wDRwNEDwdDE3wjj0gFABQLZANDCCrARv-AQAfqdgLJ-MO8Qgf
FfGe8IYOAfAgAfC2EfAaAfADEfB2EfAZAQ4KAPQFTRHwVxHwOhHwAhHwVhHwOg8TDxAMAAEVAEQF
YfA6DADwAQQBLxMRDQHwOhGQDgLwLhGMEmAEkTAh8DERAKEB8C0R8AIh8AGxEgAg8E0rAPATAcEw
AfAyEfA3ETABcCEwMfBVEfA2AS1RUCEwMTAhsIFQESsA8QA0AQ2RUCEwIUABDQHQAaA-ANE2EWAB
UA0RMDHwBjFwRADwLjaBYCFAIfAGDSHwOxHwNwEdAQ0RYEEwMSAR8AAxYBGgAfABDgHwExHwN1Fg
AQ0RDREAUSAR8AsRoBHwABIYAEBEYRBBLQBwIYAB8A0BDhMA0DkBDQHwAEEwEWABcDFXAPEIJR7w
AiFAkRABMAEQEVABDxIBUCEgMSCBAPEKJAES8AkxHQEdITAxABFQDhFQISABDgIREMUAUCUB8Aqh
3xdxUAFwQQBRADMAwkERYJGAIVBBMAEOARIAQDhBMBFcAFMAAYABQBoAIvA0GAChICEAMQCRMCHg
IRIAoDEwIRAhEEEAgTDoANAhQAHwIBGwEfAzEUABKgEAHADB0BFAkQARUBHwHwENGwAjMCE1AGAR
8AHRUBGUASI4QZcGoBBBEAGQIUAxEAHpAPALEA0B8BEhEDEwAQ2BACGwDgIOAg4wMQBhUCE0APAC
EAHwEhEgMUCBECEQASAREC7SAHBhUCHAEfAeZwDwASAhEAFQEUAxACEAIRARAEFxAIIgEWARwA0P
ECIAEFAaACCBMOkYclEgQQChIBE8AIE0ATBB8CIxIJsA8wgzIRAxYBEAAQ0BDRFdAQABXSE9EQ2R
cBwAMABBQCwZ8REBvQH9BQENQfA2EfAuEXAhUDEAAW1BfUFNoSBxACHwJxYA8BcRQDEgTQENDxIN
BSwRLRENBRwFDQENQQUdMQ0BIKEgAfAkEfAuAWMB8CAgIUAdAR0BDAYPFjYMEQ0RDw0PFjYPDREN
AQw-FgYPDSENATBhMDHwIxHwMjEQMQEB8AEQMQ0BDA8WPw0fFgwhDw0GCwBQDxYPDRFFADAvDQ83
AFAxEIEQUTUAVC4RECEAAgDxDzENAQ0GCyELDxYGDAEMBgoMIQwKBgwBCgYMIQUaMakBBjUAIGEA
BgBiAS0RDQYKKADwCAwGChENAQ0aDAELCgwxBQwxEBEQEQAhPxri8CMRsAHwFwGAEVBBAAE6ABAd
SQFgGg0BDQELPQC6Gg0xCwoNAQsKQRA5AABvAAAMAQM3ABg9NQDuBgoMAR0BGg0BGgURKwU4AAAM
AALcAAo4ACMWDH0AcAsGDBEFFgoZADUgAUA7ABAybwA0ISABcQABmwBgDAYKBSEL3wDQBgsOIQoL
MRAhIBEgEdQBMDkRIEkJACwA8AV6DRELGgsBDBoLEQsGCxoBDRoRDUYC8BgtEfAvAQ1BDeENAS0B
DAYaJgsMHREMCgYKFgoNEQ1KBgoFQZABICEeAfAH8B8R8C8h7RF9AQ0rDBsRPQEMCwwbDTEB8A5L
DCEN8QrwHRHwL2ENUQ0BDYENoQ3BDbEV8QUNARcAwCsRELEN8QENkQ3xIBAA8AEpMRBRLBsRHQwL
LCEMCzwNBweAEQ0MCw0RLAsEARAMzQLwAiwBDRELHBENEQU8EQ1cMfAAiQTwEfApHQEgQQtGCxEM
RgwRCzYaDQEKBg0RDRYMAQwmDw8K_AEAQgDgCgYLIQomDCELRgoBDVZHBQM-AHARMDEFGgsMMQHw
AQwKGwwLChEMCgscCwYLAQvyAAB9AeIKGwwaEQsaIQsGCxEaHNIBsAscCwoGCwEaHBUxwQAgKgFH
AFANEQsKCx0A8QURDRoBDAYMEQwGDAEaMRoNDAYMITcCAW8BAqwCcAoGAQ0GDBGJAiAacUQAwRA_
8AQhMDEMGg0RDUcAcQwhGgELBg1GADALCjtHAEAFIQwGkgBhCwoFAQwKwwIgIRpIAGFRDRoLDFFH
AAB2BFDwBAENAUwAIAwhSwBQCgsRDBoxACARBTUAohoGGgsKDQwGCyWVADEGChtMAEELDAUBuQAg
IQWDANIKBgpBQBHwFhHwDgFOnAAwCgwxUABBGiYLDQYA8AQRCwo8CwoPEAwKNhoMAQoLDQwa4AAx
CxomlgCiAQ0WCxEaLEFQAUYAcCIO8AQhQDFiABINmAAgHAoSARAb6wHACwYNIQoGDQkGCxwbJAEA
tAABhwExCywaVQE1CwoGLAGQHvAEcQAxDBYMvwICbAEQCkIAUVELCg0h3QAxDCENRgARIesDAYEB
AEYAUiEaERpx1gCRIQ0wcQBBC1oMQAAQDW0BEQxAAEAaHQYKdwFQDQEGCzHnARELsAGFEQsaGxoR
WjE_AFARYFEMOnoAAWYBUA0KDVEFfgAiBgF_APAADQEKC0EbAQsKMQoLIQwWlwNDChsKC0AA8wYn
URBhLfEADVENQQ0RDSEd8QUQ8QMbAACIBqHxCg0xDfESDRHA8gDxBCYRYPENDTEdIR3xAJABEIEg
gUBVARAmFAZgIQAxMAGQkAbwCCEQMQAh8AGhHQltBQEQIUARECHwCQGgQADwEAAxkAGwAQ7wAgEQ
wQ0JDRkdGR0JjSGgASAB8AoCAZCMBwCIBPAKcFEAQSABDAGAEUABbQn9AxEtAQ1RwAHwGHMEAaIG
8BChMAEOgAEtARAB-QABDxQOBRgBDQ4YJAgUGAQIMaAhKgDwDiExEIEwIWBNESABDUFNEW0OGAUY
FQgVBAgkCNQOsgRSEQBh8BYoAFAgEQABHZMF8AEJLRkxHQl9dRj0DQgEBSEg0x-wGmHwFRHwISFQ
EUAhAAENCT0ZPRUNFR0BBR4FAQ0RBfQOCJQFDREgQSBxegjxDAAB8A8hACFwQQBdAU0B9BYYhC8f
ClQhMFEQYR8AUA8RDfANFAbwKHEQTfQWLx9EVwQIBCcKNzQFIUBBIDHwFBHwAA0B8AwhAGEQERAx
EB0BDvQFCGQaBAhERwQIBAovAPAJBxoIBCcECBQOITAhADHwGRHwHSEQYQAhngjxEg0FZAgEKDQI
pEcUCBQnChcKCBQHCgQHCgcECAQXBBgEFzgAMBBBAG0AQBER8BzzBfAGMQAhIEEAHQUPGTQIBAc0
CDQKB2R3MQDkJAcPDwckF0QIBAcKRAc7AAAzAHFB8BAR8BuxIwjwAy0FREcKNCdUJzQXChQXBAhk
F2UBUAQHCgQIrgABNwAQgCQCgDHwDxHwGqEguQZxAS0UCARHCpQAoFQnCBQIBAoHFCcyAFE0F2QK
B0AAchgEDiEQAWA7ANAOEfAPEXAhYAFAIXARPQAQJy8AgBQHCghUBwok3gCwCDdkCidEF0QXJA4z
ABABzwnwBgBB8A0R8A8BgAHwChEdASQnBBgnFFwAcFQnRBckN1RQAXAKFzQ3BAghFAdAMCFAMTEA
ICABHwiwEBEAMRABHQEkF0SaADAXZBdoAOE0Gic0JxoHJAoXNCcUCEABIMAxyQURHgwAATkAQQEd
ART7AHNkCAQXVAoXDwERRLIAAAgAEDT5ABAOhgdRMeAB8Aw9ADAREGHDAYAdATQHlAgXNBIBoQoE
CCQXBAgEGBQqAQE7AKAEGAQKBzQIEUAhlQMQHqkJkPEAHQE0F5QXZG0BAQsB8QEkGAQXNAcEGDQK
FyQKB0QIagAg8BwwAIBAcQARICENDikAMJQnVBICAd4AAAQAUjQHdFdULQBhEBEwEfASYQCAARBx
MAEgAQ3UAAEDAfABJCcEKBQKBzQnFDcUFwokR_oBNFdUBTgAECFaApIfARAhwAEQIR1cACAkKgoB
cQgEV0QHChdtADFnGGSwA0ARQCEQBgsQEs8HQQAh0AFzASAnJJUAUWcECBRH1ADiRwQIpFgUCDQF
ETAxECFjABEWjwogAA52ACFBAFICcGc0V1QnBAg9AaAEB0QIFCikCBQYHgPhEUAhoBHwBBHwExFd
ARA3ADIBEDFwAbAUCARXBAiECGQIlDoAYAh0KCU4QVIDMBBBkMgLZAQR8BERfTMJICEQNQDxAQ4k
CFQINGg0GOQIFGEY4SA-AiAQIeUDUBABCS0xxwwQIGcAAS8A8AINEUQ49AIOIRUYBA5BDQEFEVkF
EgE1AACtBJIPAQ0LHRE9URDOAPAPAEEQAS30AA8ZBAURDjEFfQGtAQ2RcAEgUQARACFAjgCA8A4B
CQUNwQ3HBAEyAPAEMSABLQFkFQ5FCA4tAT0RraHwBa0gBTAAkA0BDQsNMVBBDXwLAfMDsRBRDQEV
DhUBDREtBADyAD1BAHHwAQFQITARQBEQETcAcAwBDQUNYQ3uCwA1APAGASARACENEU3xBfAGISAR
EAEQYQCBkgUCLACQCR0xDTktAQBBLQAgcAGRC2A9saBhIHEBCkUQkQCBVwCgPQEQDQlNCQ8RDS8D
4CEAMYABEHHwBZEgUQAxXgxAMAEgga8CMAsBHUkMQAmdERCbA6AKERAxQMEgQQAxvg0xMBEAyQsh
8BkpALEBAAEJAz0JAwldAakBAFQAcCGgERAxMGEnDRAANgAxEQBhpQIUIRgB0QsBDQEAAQMpPQEt
AS2KABKwNABgQQABEPEChSEwAGEASgQZMTMAcn0BAAENIR1sC2AxcAEgIZCFASJBEF4BAAIAAAsH
QZEQUQCPBtALAQkRCQ0JEQMNET0DVAsCiAEgISDYDQA8ACARQMwAAU4AAWkBIQEC4SIQHtsCBnkA
AEgMgwktCT0JDQARQQAQcWQHADQBIUAhSwECQQCQESAOAh4BTgIxjgclUAE-ALEJHREDHQMRDREd
IGwAUBAxQDFAbwEAKQAQQb8DAK4CAO0AUSAOAg4RgQABxQIA8QUAxQCwGQ0BDQMRDQABAx0HHAAt
AAABAQCgAUgBUAEQRwAAOAGAAQAuEQ4CDgAEAAJCAxBhSgDhDA0BAC0AAS0BDQlNAQD4ACAwEasA
UjABUCEARQASQVwBkABREAEOAU4AHtQFQAAhYAFAACAPLe4BIn0BMwFKICEAQTsAMDAxYAMCcF4C
DgAeMSAuBBBANAMAJAIwXQkB9QMRQHMAAjgAJkAxcwAB0gAAxwFQESARDgHRZRQRQAAC7wAAuQgg
DRkMABEJYAMTAEcAMaAhAM4C8AkgIQARMAECEQ2BAEFgEXARACFgEXBR8AEdCKCwMU0RHRE9ECFQ
OBFwAfAAMRBRMIoDEBEMAUAQQWAh0gRhYBFgcfAAMAABKAKgHQkRDQEgHQEQIXsNMEABUPUAAHMI
UPEDAB0BfAAwACFQrQgBCAAwQKHgjANQLQEgEV2qDcDhLTEdwQAxEGGuEQBmDyAhUHMCAAwAQSEw
wdAXAhAJyAIhIFHOACDxFSwAEL7bABCBHAExACEguAGyUBFA0cAR8AoBXQHvASDwFuwFcAEeAQAB
fjEsAABuBwAsAPAB8AExAIHAEfAJAX0RECFQEaIQIABBRgNBEFEgAYUDIBEA9i8AagEggRBqABEB
HAAgEUCDEfAJcdAR8AgBrRGAERBRAOEA8QQwEQAhPhFOmgExoVABTAAxUQAxLAAAsQAQATAAIN0x
ngnwARDxAwDxBhAhDQEAPhIuAgEgEUENgRBBCQUQMYACECA9ARFRCgAAQhLxAQcB-QEBQCEwQTCR
AFEQ0SCZEBSeAwMANQQACAIAPgAApAYxIQAeQQShAbAR8AAdQAG9IUcCQREAMaCzBXJAgSABMAHO
PQACDxIREcACAKkJAIkR8QQBAHEAEaAR4AEdMAF9AT0RHQFQPwAhAHF8AhBBbRAx3jEAsgMEsgAA
EAXwAgAOCB4hEIHQEdABHQEwAQkNiAUAhx8QEUAAAL0PAEcMYAAxIIEQUU0xAoIAAD8AIgEQIwMA
RwBSARAIHgiQBtLQEcABLUAtMRABPSEA8xEgAQAmBQCJAVAhIJEQUVkwEE4oAwVJAABgBJARADFQ
XhAREGFBAACLAFA9CQ0JDfsPACECMCBRIJMBIRFAkwBAEGEgUQkOggEeAA4CLjEQlQAApgESYdgA
cEABDgguAg6SAABPACAJDe4LEAEJAwA7EhBQAwtQMQBBDXGGAlAwETAhEPAnUR4AAT4B5AQRIaIB
AMUHAk4AMA4YPk0AMiAh4E0AMp0BAEoAEEDCARExlAQQoQICER1kAEAQIeAeCwAgIVDID6CQDghe
CA5QEfAA2QA0QAGNPQAiUEFpBUAgARCheQIRDaMTUwDBAA4RZQEwIQDBYQGAQC4IDgAOCF4vCGrA
PTABjRFBACJAUaYIIA0xfAAiAPEPARBxPQD2AgAxMA4IHhA_AC7wBRHQLQEguwASUT0AIRCBPQAh
gXDwBgCDBxCQtgD1AYAOCA4QDggu8AkR0AEtEQC3ADARMEHDCkAAIRDRjBIwMBHQ5AQRIQgBIwEQ
NgIRMPQAECAWCWLQET0AAX0YAQEcBUGAISBxcwABsgBBDaEAUVUCMRENAdMIAOUBAOsBQDEwPggT
MxAeJAkiAAG1ACAdEeARAEgAcBBxUBEgQUBaBQBUA1EBAPEIEFICApMCA4gAIVAeOgESDkYAgQER
HQABHVEQ9xKAACEgsVBhEAFhEmJgARDxCBD6ASEBYMoVAD4ARhARMB4_ABADiBLwBEEAER0BQPES
ADEQ8RMgESCBIGGPAwAiDRBAMgEBKgBhCBEdACEN3AQgwQD6DvECCxDhAMEAcRBxIGEQARAeAQAn
ABAJ1wSgMSDxFwDxCSDxByEFkAYQAQChEAEALm4XoQRBcPEbAKEA8Rh7B-EG8QYAoSA_cA4BcBHw
A1EA8VdQ8RkQlxfwFgLxGzDxJgCxQPEPAHHwBRHwAfENEKEAAQDxKECxANEgcRBBEHFyAPACAPEa
APEqAPEOAD4QYRDR8ATGFlDxGQDxDSkF8AoQ8QUA8Q4eCCQIDhBRAPEA8AIRUBFgIQDhGwBgAhDx
CwARMQfwCBDxHRAUSAQIEPEH8AER4BEAoUARQPEa8AOgHTEQ8RsADggEiB0AAFIWkJEQMU0RIPEW
EAMP8AkxDXEA8RIQUQAUGARoDgDxCOAR8ACRAG3PB-AS8RQQAT3hAPEYAAgUCACIDgDREGHgEdCh
AAE9wRDxERABsxPxCGBhEPEXAAgEKBAIBB44ALFAYdAR0JEAOQBwEAAhLREQUboA8BAYSB4UDgA4
ALEQPhAx0BHAkRANCQ0BDfEAAPEPAC0FZxRhXfEhCAQYRg7wAQ4ABCgA0QAOGA4AQcARsJHqDtAN
EQ3xAQDxEA0FDTGdWwOADPEVDhQIHghYABEQLQAALADAgQABDRUN8QQA8Q0ABzgwAQmtBwOA8RYA
CAQIEA4tACBgkS0AwBAB0BGggRAdBQ3xBgMBEd0nAPARFAAOOB4YAAEoDgAOGC4wYQAOCPACEaCB
AD2BAMEQ8QoaAyD9ANIDURMOFHgOowBAaA4gUZQC8AkAMbARkKFNYQAdAJEADfELAA0hEAH9AjFe
AOMOBBgEWBAYEIgeAEEOGCsAED1nAxAD6QGAYQMBDmEA8QBmCvADAAH9BAARAPERABEOmA4wDpgO
2AXwCxgCDgBBoBGQMRAxPVEAHQkDES0xIB1xEPEAGQXwHz0RLQABA43xFgA4LlgOEA64DiAuCA4Q
McABgLEtQQABAwkdAQ0DCS0gAQ0JDfGPCRAdBggAyQXwDn3xFgAeEBguGA74ARAIEggOAGGgEYCh
DQkdUQ0T_iVgAx0ZIQ0DzwMQCw8JwB0hPQkNEQAtAT3xGEcpAa8GIPgAwzaRgZARgJEAAR0xcQCg
IQ0JPQktIQDxCWwG9wPdAAE9sQDxCw5hDqgOGA44QJEtAFENARABrTIEUQ8QAQndYgZAkSDxEYQB
sCg_CB4oIMGAEXChnQRAAAEdCb4AMJ3xEmQGMU0RXYkEAVsD8AYRAA4oHhgeAE4oDuGAEXDBDTEA
DQOGC_O9AQDxDAAhEB0BEE0hPTEAAW8AAL0AEAiZAkABIA44NQBwIQCBHTH9BDAAYTEtEAFdILgK
EACDAuABAIEQ8QQADgguCAAOKDEAQA4A0YD0CfAIgQBR-QXxDQAhLQEADQlNEAEtEB0RIGH_BBBx
wwMQCLIEMDgREDIAQ4EQMXA0AHANCa0BPQEdOQAgvREkDTARAKEzAPABAPEGDhgOMA4oIRAYDhgA
kYIJEHCEAGBRDQldGQ3CABANNQBgCU0RrQEA5Q0RMaUAEvGQAqMhACgxEA4oDgCBOQDwB6EAMQAN
CS0JLQkNERktEQ3xEU0gAU1yABAhiwoQBeQn8ALxDBAoEDEoUQA4DpEAIXARkDUA4AEJ-QAJDfER
ED0xTREN8gQgAS2XBNBN8QwQDigQIQAoAEEQcwAQgTMAIIDBIQBgCZ0RXfEQoA4hfVExAHABACFd
APELgAOFDhAxACgAYQAyACDREDEBEZ09B-AWAPEBANEQAS1RPXEAAU0BEG3xDBAYEEE4YQ4oEMFw
EYDhACFdCecGMQE9ADkEUQIAAS0xQgJwIQABXQEQTQIBoSBBDgQoYQ4IDgg1ABDRHAAAQQ1AAQ0R
PfMC4MEA8QQQAU0RHWEQAW0BaQAB9QOABBgOUQAoENH5APEBEB0xfQld8RgQQQ2BABF9EY8CsfEU
EAgOEEEQHhDhHQEgAQmqA8ANA20JHQkNIB0A8RO8BzAgcb0eAWAWIIEg8QASAbANCR0AERCdGQ0B
EHACsSEAAc0RTfE0gBGAmgkgCT1tCRC9aQcg8RfkIwD8AgAfAECwDXFdZhkgXTHYARAWewswTQFd
VxqwAAEt8SwgUYARoB2vBxAJJwAjEU1xBxAXMg7B3QFdET3xDRDxCyBhJwBAUQ0JbSQCcBFN8RwA
-QOnEYABAC3xNJARgBAEMFEADVwNEKGLBjAB-QHwEGARHQEA8TIgADAJHUG9G1AQMSDxHfsEQgEA
TREfAGExoBGAAS0mAiC9MREAEB5BChC9VwEAiRsAlAYx8QKgQwBgAEH9BPEgWABhPQFdAAGdUyph
8R8Q8QCwIAAgUb2MAXHxFgCBHQEQJgDQAAFtAR0hEPEgEGEQUSUAAOoBYC0RDRE9Eb4QAW0AAL4I
Ao4KkQFdER0hAPErACsAYAktERAdMSsAMS0RDYcGAB8NoAEATQEAvQEA8SxUBkGQAT0QshAQDdAA
AMkIENFABEQBLSEgJwAwECHQJwAwEW0QBh8wAAEdwgAAzgIjAAGgAFABEPEOEIkDMmARQCsAaAEA
TSEQLSkAQBABXTFaAKLxD_ARoAEtAAF9PwAiAAEnABJBJQARbb8BEBF3BAAqGkGwLRGNRAARAQYA
8ADxHz1RPREwET3xBwBhAFH1BWFx8AMRsEElABMNJQBwGgABXUEATcgGER3sCgBSAxBRLwBQCvAC
EcAxCgDhAAD2BSDxGTACEE3QEDBNII1_DACmB3BxAHEQkRDBwAgQANIKISEAuxCBEPEZHQENER0v
DSFNAN4BED1eC_TBAIEAkRDR8AMB8AJ9AbAAEQ0ZAVAbDRAdMQ8eAhYF4PEw8AXxAn0hLUFN8SYZ
gBgAWgBPAB3xSPQsKLESDxXwCwEOIfBrDqEJAW0hwKsO8F4O8EcOBQ7wXAUAIEYeWkGA--Qe8Hwe
8CcSAEB8HvA4CAAQtQUAsBoOHxQe8IYeAfAa-UOQsA49Hg0O8EoerjzwG07wKB7wDw4d8FMODU4N
DvAoBQ7wDg0EDxkEHfBSHh0u8Cke8A0ODBkcBC4A8A0O8EgNLAkcBA7wUy7wSQ1MFA7wrw4NPA6Q
LvBlagDwCBxOwDQOkB4FDvBkAR7wHA0JLA7wC06QxzzwGgVvEwHwTQQMCSwU8AoeAC5wHvAeDgsl
KwULAfBNDBkMFBzwCg4wBQ5A4GrwGxAODw0VOyUr8EsMCQwEHRTwDwEeIC7ABQ8SDvAOJQEOASAB
DgElAfBKLB0AYBABBSAe0EQ7wA8NFQFwFQsFAfBJLHYs8BJQARtR8AQe8CEOBQEgDRQNDiAlAfBJ
DgQMFAwOUAUKVQsdAMASDtAOBQEQDjwNIA47APAZSg0cBFArChUPEAUbFQHwAA4FHvARDgQOwA4F
AQANDEQMDhABCgHwSyMy8gIBFQE7EQsVCwGwbvARDg0esCQA8AkADhQNDg0OAAEFAfBSCwoFC3Ab
BQuwHgWkRbATDQywDgUOABQADqgj8AwEAAEFDvBSCwUADgRNBA4AK9ABEB7wEh0OsAEvAPIEDTQN
FAABBfBTFRAsJAwNACvwAY4A8QTQHiAEDCQcDQAOBfACDvBCBA0A0CmADAQNAAEFHuBOQwANADEO
ABQkAAAmJ4DwNx1AEQAEDPZDNwAEHCkAQAQNDhAsAPEEHvAADgQMBA7wNhxABQEABCwUPCYAMBAt
kHcA8AwFDuAuASAOHQ6gDgQOQA5MDvA1BAwNDiALAQDtaQAqACQADisA8AbwAAEeIB0eAC5gDgwN
UETwNg0EDAQrAFAMBCANNC0AJBBNKwDAA00gDRQOYAQN8EIOjAAgARBtOREkJQCRPQ6QHnCOMC6A
KQAQTms1EDCyAPAScA7wKgUO0B0MDgABEBQMDSAkDgABCxA9oB5wjQ4gLQ5wMABwCQ4EPQQOIAoB
IGAOPwKwKAEe4A4MDQ4AER4xARAEMQ1wDh0EDqAeUFUAkQAOHR4QPg0_UG0A8AEOHQ49AA4tEA0O
FB5gLvA6KQBQAAEgDSREEzAOBB02AAA8AaEADgQtEB1OHQ5ANwBADQQdFBUA8BMtAA4kDfBIDRQQ
EWARIC0OQAQOUB5ADRQADg0kDQAODU4ABjgRCDIA8A0tBA4AHQ4dEB2gLvA8Dg0EDhCBQB5QDA1Q
HkAtXwCQDgAODT4QTjAuLQABiAAgTeBtAOQ_LRBxwAQNUB7wJx0ALRYAUAwOBfAhAwFBBIAODXYA
QR4AfiD7QJFQjgAOBQ6AHQD1ASIOLTAAACQDoRQNQB4ADgSABAwyADB9Ah11AAAEAAAHAEQwDnUO
OgDxBhQOIC3wAAUO8EAODXQNBA0EDWANFKsAKB5dNACmIA5lDlUeQB4NDpsARkIdNE0wAFIQBB0e
DTMAEh4yAHAlzkA9AA4dLwDwER7wQw5kTQQNIA4kcB5AHSANDvA2HvBEDoQdFA0gDQQdFQDgHh0O
UF4QThD_BPAAHqAeAFEEDXQNFMsB8EkNkB5ADSQcDgBVOAUOBQpVKFUYFQhFHgDeFQ6QHvBFDg0M
hB0EDRAOkB5AXRAVLgVOFW4F-gMQ-gJwHvBHDaQNBA7wBC0EDSAe8QceoR4QbgGuUA4F8EQU2jHw
ETQNBA2wLgEwPQQNEB5BDmEOcQ4BDmEOEU4QLgEOUF4gIUdQAl7wKw4sAQBlf9AkDQQOoA4VETAd
Dg0EKETwB1EONQ0OES4VDQ4hVQ4RXhAuARAeIBEtQaMELhEO8CsNBC1gNwDxFAEVETA9FBAeAQ4x
DEkhDUkEIQwpHwoMAW4QLhANFC0OER5Akw-yHjEOLQQNDkAOHRQtDqAeETA_HRA_MRwdBAwdAQQJ
BB0cBBEJDA0kDQEeBT4QHnUBcB0OAAEe8AjyEPASLgQ9YA0UHRQO8AouQRwRDRkEAQwJIQQZDgEJ
BEEuBQ4BnUUAMgPxJA4NIB7wBw4UDARN8CweEB1wDjQtQA4B-gAQTiEMDx8RHgkEAQQJDhEEGR4J
DAEFHAQRXjoAQQwPCgTbAQE_AOANDk3wMB2ANA0UDjAO9aEQlC4RDAQBDgEODD8AggEOCQwBBBkM
QACTDxgJDwoJAA4UQQDhHk3wMR6gDhQNMH4FHgWdArAFDhBeERwRDhkEALsAwAcMAQ4JBBENCQwO
AUMAUAQOBAcJ5wMwEB6Q4wEgDpA_AGEVLgUQFQ5BAPAKLhA_AQ4RDA8fBQ4ECQwNAQwJJRwOEQwG
BYoAAoYAYAANBww9EI4E8BPwRQ4dDpAOJCAOFQ4ADlUeNR4QXhEMSTEEGQcJBAEOAARZdgCwLgAO
LQ4dIC6AHsDwOPMJMQ4NHpAOLRBOAN4gTiENRDEEDCQNIQ1UKwBwDU4gLvAIPf048ARBHfAKDgEe
EQ7xCw4BLvAdHQ4dPgPwD-AKDvETHgHwHQ4dLvBJDqEeYQ5hDjEOIQ6xDhEeUYkC8RJOAA4NHvAA
XQ7wHWsO8BNOAQ4WDAkEEQUMFhwOAQUMJgxjAdARDQQOEQQmBA0BDAQRJgERDhkAoAQMNh4cJgkF
AT6qAfEH8DIRWwUO8BM_AQ4FOQYRBEkNAQ1JDQ0B8AwECQ0BBUkEARkOAQ4ZEQ05DQEOWQEOWQ4B
PhApCJAvCxUbZQHwBa6XAfAHEQQZDhEECQENCQQRBAkeCQ0RBAkFAZQAQAkNARl_AHEBDBkFAQkM
_AHxEAwJAQ4JDUENCQRBThANHg0ewE0O8BoBBQuBBQvwA85RABoMUQCABBEEBwQBCQS3AVEEAQkM
IVIAJQQOUgBgHgkOARUOuQAwDgUhIQH5CBAtwBQPGC0O8BgBFQGAFQsO8AAOCAGwrQDwBQwNDBke
CQQOBAYJBAEGSQQBHA4NYAAxBCkM4gIRIaoA4B4HGR4ZBwkRXvA0BQsB2D5gAAEFCw4gowYmHtBR
AHAODQkMBAkEgwEhKQxEAREURwAQSWcDMAUMGasAESRSAACgAQDVAPAABQ4hTmAe8CoOBQsQDhQd
DweiFQsgBAwEcAUO0AYBEgWqAANNAUEMDQ4hywFBCQ0BDKUAIAwGQANRAQRZAQ52AQAHADAxXhBz
BVAdHoAOLSY8gBcOBQsgFB1EPwcRMJgFkNAOBR4BDgUJFq8AAPIAcQ4ECRUJBCFBATERBQn2ATAF
CQy8ASAZAcwB0A4ZDgEEGQYZAQ4ZBhw_AsAQLT4dDmAOAw1O8BgVCXAOPQQdFAwNYwATDmMAQC4B
Djm-AQAEABANBAIVLl8AQgwGEQXJAXAMCQEEDA4RXwBROQYBDllbAAC8BKAEDVAODQMNPvAZXwDD
BAwQFA4ADRQNAAsBxADwCU4BXhEuEd4RXhEeER4hLjE_Ad4BLhEQPZkHQEAOIw0FCzINAaA_AJA_
ECQNABEwDgxLB-AOkA4gPgEOUR4hHlFeER5hDiEOIR4RDiEeIQ5RDnFDABA_-AlgPT7wGgsBSAlU
EA4MJA4_APAUAQ6ADRMOAA4VPhUeFU4BHgUeBf4RAT4BXgEOAa4QDQ4NHg0hA4AQDh0OLfAdAbQA
IA4Q9QgwABFASQfwCx5gDh0TDR4ALhD_CAAeMC7wCy5QDhA_IB1OkQOQEC4NLvAfDQwU1i3wEQ4A
EVANBJABDkANDwgDDRME8EdOHQAOLTAODfAgET4EJgjwByFQHqABDiAdEw0DFC0QDg0eHW4QYZ6M
QiAQTsoF8BwuQB4A-gMQLT4APiAO8CARIA4UHRAhEA0O4A4BEA4TLRQNAwQNEM0OALEuHCzBDQMt
EF0OEA0DHQ4QDEpgbS4dLh0O7zcB0wDA8CcBQCEQXfAAPSADGAgRIKdSIA4QCSBTTgAOLQMrPxAt
Hy8C9AcArgSQHR6wXRAOLfAmfxrhDg0EHQQNDsAeBC0QDhNfCQEETwG3HhBOgwBADgBdDrYTIgQO
RQDwER4AHi0ewA5NLi0O8CZBIA5tBA6wDQQdAw4AEw0DBA4QGAJhDgRNEOEe-wFQPRMQAz2_OgA5
ABAdjQEgYVC1PcAt8CQeEBEunR6ADl1cAkAeEA0UwEAAjQ5xDj0uPQMNHn0AAQIAAnkAsE0eAHFQ
bhA_8CMOjQBgBF0ETQ5wBwAgLSC1CTFdMNE1AaANEx4DTRANAz0g3zYAOgAAl1MAASCAMg0ETRRt
Hi3MdzBNHj03BAD8CCAu8TMDAy0BEE33ARQeNwDxCAAhED0OMQAeMD7QDlEO8A8NFE00TQAOQgBQ
Az0QAy1EAACgAPAATQ4A8QEOAA4DLRAODwI9MgFBLR4QbUcAAHYJQCEQDhyKCIExLiBOsA4FKzkN
AJgHQEAULQSCPHItDrAO8C8_6QFADS4QEXQC8AUNDA4ADSA_AG6QDhVLFRsFAfAKDnEDAIgIMAAO
ID8IVDIOYA6QMwAgFAC3MDAOIC4yAMAFmwUB8AkODAQMDWAGCSEwDSgF9QfQDj0uABEeUR4BbhGO
Bf4BBQ4hAG4AdQBxDA0ELAQNFLkAACUE4IALBQsBgAUb8AgODS5QMQEwMB0emggBdQD4AB4NHjAB
cF4BMBFAHgCO0EgAEAQNTyAABCQN8QUeAE4BgAEbARBeEBELAfARDQwEUJcD8AMUDoAeAA0DEA3w
EQ4QDgFe4AXHUhFOQAASJGINAYkA8QRBDmAOBQsBIA1EIA4L8BAOJA5wwAoRBEAAkQQtEAUOAA0k
XAcAMGwJHAgAEG4LA2gdDh1eFR6VABAdAgAAUlExAQ6Qig4hDRQgDUALDvAPUwQAoUURMFcAEU1O
ADAcWQwIACAEmQYAYV4QHs0QNZIAEj1PABAeaA0QDYEKAd0EYhAODC0kDGcOAIJOAN0AAp0AECwF
AgAKAGAEKQQdHh0KACBOEHhBEYAMAOEeMA4dPgARAA0MLU4QLgYXEAT0ACEBAMAK8AAEDAQADgQQ
BQ7wLh4AHS6WBwAZACANcAgAMBkMgEIAkwEeEB0eIF4AHlAAUA1OEAEAYgCxQE4AHgEADgwOYAF-
BSAEDXcOohANAA4B8DIODTBNAFAOEA4cFDsAYgQZBAAdNKEAEQ3PDUE0DUBORAGITiABYAEQDT5Q
AKANBA1UEAQN8CxBqAMQLvsAEADnUlANHBQOAE8AVQkEHUQNTwAgAA6vDTItDiBSAGFeIAFQAW7w
AAAmVgDcDiAAFHAGkQ4ABA3wKwEFQZoDAVQAQgAOLCRTAAMLABMORQEBjQ8AIgEkDQRYAJNODQ4Q
YQA_DR6rAHFwCxAEDQAdsw8AWQBADhUOMbcDAn0BYgAeDQweBFwAMAkQBOYOJA0QXQB0DgQOAAwE
LVsAQB1_UI6tTWAMHQ5gDQzVDRA_TwARUWMCEQUeTkMEHgQQSwA0EAQeSgAAVlIgACQEDQGrVVAd
Xg0OUDQAA6MAEBRPABAgwwCC8C4VEQ5BAE6bAEQOLAQdmgBDNBwOEDsLIR0gugUAchAwEAU_ORlQ
Lf4GAC4VVTAOBADKArEgPQ7wK0EOAQ4BEEsAANsFJRw05QAABwIjDQ6cABEeQgiwAF4wDg3eDY4A
PhBaegBKNQEiBUHwNj4NlgQAaQEyEA4ERABQDBAcDSDpAEAgLhA9ywBwMD7wET5QRK8CQBzwMh62
TgFJBVMFDgCNBMQBQRQtHg0dASA_BXYAAK4L0AAeED4QnhAOoA5AXhCtD-UBFA0ABB0uMC7wKAEL
ERUOIQICEQQSBADxAABRAwDwDwHAAPEKLhUQLQ4QDSQdDgAdEE4AhQ4A-gIALgEODRkC8gUUDTQg
BCwEECQMDfAGHvAOERtRABgGYgUOwAUO0GUB8AgFEB0uDS4wDh0QTlAVLjAO4F4QDSQNVBUSYR4N
ZA7wBDoAI0EOOwAwHkAOtRAjwA4_ACEOABwPAKNB8AZQXvADTiANlA5QNA0UDA7wJAEbDgDhC1A9
DiD1DqwIANYDAFgCQW0eHRBoCDAgThA5BWA_gA1EDSTPEvMIAA0EMA4sDvAfLhARCxAFLhAeLQ4w
-hM4ADYNDk06ACEAfr8CgS5QDg00AA4k_gHgDh0wDi3wHw4lDgARCxBsEWUOHfARBT5AAEAAfhAF
0QFQLQ4QTgCeDiAeAGYJYA0MFBwEEDMRcAwUDA3wKD5_ACABDipRsQ1ODX6dDiAeAG4BFAMwDX4N
PAAAyQMyLhB_cwNxIB0MFC4gHsQBcA7wJh4wEQsuEuIOPRAe-QACHQITHQMNEH4AAUMAEU4eAhBe
RQATcEMAkRAOFAwUoA0kDEAAIAEroAjQLhAOHR4t4D0CDQINHjwAI35NewCgEE4AfhCOIAQNLicT
wFAEHA7wFnFwAQ4wS-MC8wFOHQ4QgTAOLRMNHhB_EP4ANAAwPhB_L1UhBA1NErBQDRQO8BZ7cB4w
O0wKEQ4yDyAOldFT0A0DDQ7wD14APQ5wToDaBAE8D-AEBA0O8CABBRsFSwULUB4wARshEPxU4Q0e
AR4BBQEOAQURHgA_RgAQfqpXYUAOMB4QXocFQCAeIE6XABAARAAA70M08CCbRAAAOAAAAwoQLc8M
YB4FEQVeADpVcE4BFSHOAD4kAQGtAyAVLtgJAIwEAFsDApEAEC3bFaBwAQUbAUA_ECsR4iIREC4A
cAAONRAOBU6bVACiAoAQDgUBBQHuAIIAARIHMQU_ACoAIR0eFgrQAC5QLvAdDhEQXgABK9NGIDEu
SwAgLg0hBDBuAC73AlQOBf4GEEEAgF4APhAuHQAdPQAw8CoL-AaARBABCwUO8AKMBvAGHh0OgF4A
HiAeAP4C8AA_AC4NDhAubgREAD4tDjQAMQAUALgDsAEFoA4BDkARLhCe1FVBAP4KEJ4AECCmD7Ee
ID4gLiAuHR4QLjQAIAwEGhYANAAQUcgLsC4QfSA_IC0QFf4B6ABhFR4FXiBO1gZgsE7wLwsBjpER
FFYDADIAUBAhHhAuX5HQLSA_IB3eoA4FrsAeMOdKpC7wKgEOEA4MFB4rAHAOER4QDR5QKwAhEA4s
AHC_8AJOQC4A8gVRBAAOPCQ5CFGwEaANHkkIEACtEaAQDW6gASsFCzFwPw2wfg1eEE4gHiB_8Ag1
FwAVCREdcAgwwA5AcQ8QEB1N8AM_PT4ATjAOATsBCyEOEK4Qfh33AgCkEBKONwDQDAQcDgAkDA2A
HqBOEPkIIF0Of0gAkwGBLR4QDgsBWzFtCwB_AhJ_lQlSTgDe8Ce3AoANHgFwDQygTsJW8QJNDgBe
PS4dHg0uAB4BCwFgMYwB8AQADgUhDhBeLV6A-gDwKg4kDRAR3QbwAoBeYE0OEA5NDg1eLT4AAQUb
go5CAQsBFScD8AQFIQ4gTi1ODQ5wbh1u8CcNRA4gaQBhBA0wLoAtZw2REA6NDiF_AA4LvwUgHTSi
LMANLmB_HU4N3j1u8CduC0ABEA5Q0jtADg0eYAEDYS4gDi0OTTcAMhEOAJ8JEBGmANA_UO4N-gnw
LxEQBA5AGgowIA2O7AAAWwNgPQ5dDiE_1QDwBSANDB1UAB4QDf4YAQARbqAu8BthxxLwADAODRwO
IM4NPgAuPR493vMEALgUMA0kALcLkQ3_DwBuDQ4xfvkWMRkeYXsKsDA0DSD_Ax2ODS49oQQxDQwQ
6xQB9xcxDgD_6lUwDT4NowYQEXoZ8AkaDA1QDiQdPgANBEANvg1egA4dHh2eABF_AhAQyADxCR4Q
-gEQAX4QHhF_IRBu8CUEDRA_DQwUPUEVADMAkk5AATAOTb4RAKMJAVsV4BEQTgCuMW4gMQBOAQ4R
NwAAdQohLFSFDOEtDg3eEAV7AQA9zhENHJ0AADsJMBEgLnEO0F4gMX4QERBuEQ4QXvA3gmAEDEQe
DAQTAhAwfAdgzgGrAf4AxQIA0AFAHRAEDqQLEI6FHTBeDQ46ACABnm4NAXkHERCGCjAMBD02SaAt
zg0QCw8QqxDeeRlwcA4MMB0_EAwEUD4AMRCeIhYQIvoYUhAeHQwN_QfwAQQOMB4d7gFLUAELARBe
HW5DL0AtBA0Q5AyQXhAdAF4AMRCuaVdAIyQOMBcXAG0BEBR3DvABDh3eAAsFOwFQARsBAF4dTvcC
AFsZAG1bEQQ_AMAEDQBeYf4P8CIOBA0-RPAEUA4UDRQdMA4Nvg0OACsBIBQ8DoYB8QMNrg0uABFQ
HDA_DRAdAE4RHhH6ASDwIk8OcQwEDmBNFEBUAgA1AAAECSIUDTgAEM4IADAgHi2OV2AdEP4c8ChZ
GhAUmA9DDT4wDjIAAF9CAagKAMgJUN4wXA4QfhgAk0EREHcPgD3_EPAoDg1g-wUhDRQ8AACWCUA_
DQ4AZQ0gAA0_FgHBUiANzncPAAACsR4QHQQNvh3_EPAxal93FA0QThAMDTUAMAwELAUBAHwBYK4Q
LA6AJJUKkCQQHf4KEd7wMmMOMCAOFBlNAWUCBaoAIB0UqQkAEwAQnloJEQQNAzAEXSRhTwABD5z_
ByEAzvAyDj0_ACMRC_kAQhQNDgxAACEEHD8AkAQMRA00DA4wLT4AUAEAEc7wuRcikD48ACFOEK4A
MiQOYDMAAE5AEaRBABD_jy4CLQARgGkA0G4QIR0kDgAuEM4ALR46BlINJB00DIEAsP4KMb7wNQ0U
cF4QAwygLQ4wCxB0EA3OIKoAAAEDEkRTAGIxrvA2Dh0mAHJOEB0AEf4SugPxCw5EDRD_DiG_8EFu
ACQOcAwEABFwXgGuDU4dQAkQJEkR8Qn_DRGe8EVuAA4kEBQtFA0QQSBeAf4BDQ7JAwBrDoINDgD_
GfBGXnMJwDQNFBBBIP4KAA0kMBwQARwA8QB_MA2EDXD_AC1OECQNMB44CxDuQAFADgH_AgoewA1_
IA1EHTReEP4IEHEPQA4QHiA8APAMAQEAIf4C8AQO8BIu8BBeEGQNNAwUDAQMDlCuMx8QLt0XIA4A
GQ8ALwAwrh0eySowDgDOKwYgNk64CuEeFA0eDBQdBE0gngAhjrEKEADLArDeATARzvAJHvA3PicA
AGEDMBAkELgFEH4IIyFeQCoAQC0QAZ7sPhDe1UJADRQQJPkDEDD2APAHEH4xrhAuUM4AATAeAR4N
fvBYDg0ULZASEBSCBzL_Ag1vCAB2A4ABABEuAa7wWPIBgIAOBCwNcP4anlWBAAEQTg2e8FY6ABAe
7A7wCF0QLgD_GgBOAR4A-gDwVg0MFEAdAE4woAKw-gUN-gcA-gjwWA6sQZEUDRCuEP418FkAEsAU
DRB_MP4WAP4P8FlsX9ENBGDuEAH_CwEQEf4LSVHwBTAODWDuAP4MEf4P8Eoe8BL_EBBuHADwCU4e
8BgODf4lME7weQ3_JPCE-hzwGR7wKPwFFSYMAPIBAfAw-gJQbvCZ-gFgXvDQLgFagNAe8LYu8LYB
HiB-1hHwVgHwAnMgJPABJygE8HwB8BIFfxMB8AsBrt0RgA8QrvAJAU5QOTTwBgcOBT4BUAEeAfAG
LgEgFD8ZDxUAEQwAUBANFA8U4BUBDgDgAAwfGQwADAsADQvQDA2JHdMBAAwbHAQLHQwNwAsMEQDR
CwQrBAsNABywBAxwLiEAIBQLsgMAEAARETIAIAwA9gsQCxIAEZAyAPFgJA3wAgQMkCEcJA0ALdAk
oA4cdAzAJIAsEVzwACSACwQMEVzwAiQQFCwULEHwAyQMDQs0DBQcQfAGHIRs8AUMRBw0XfAFZAw0
CxQLBAsN8AQMJAwdFAwdCxQcBEzwAAwkDBAMBAwQJBAMRA3gDAQMaQLwBgsEMA0ADCSwDQwULBAs
EAwUPSAssIsAcYANBCsM8AAYAPAIHVANXOAMCxRAHJAUCw3QDQsMMAwUDPBhHgMJAHELDTAMBPAO
4UM-DPB941kVHzRZWnAPOwAoD7hPANCFIfC1IfBOcfBPEfBPaALxA4cB8BURLgMeEw4x8IIh8BTe
AQcA8BROQU4R8Kc_AUABXvCmAT5QAV4R8KM_AaABLgHwogEeAw6wEQoA8AY_AcARDhHwoAE_AdAB
HhEQ4fCPHgF8IPAGEQDxAfCNAR4B4FEA8QMQAfCGAV6gAi6A8QXwhQFegFELALAL8H8PFQYPDT5w
YQ8AoAzwfgUPDwY_QJEOAPIOD-B7DxUfDT5AoQDxGfB3AV5AsRBBEPEQ8HgBHiEMAGAR8HZBMOEK
AKAT8HUxIPEAEBEOxC1g8Q7we-EBDQDwA7DxCvB50VABLgEQoVDxBfB24QwAwgARfgFw8QXwc-EA
EAgwgAGO8Q-wcuEQdQ0BEACA-gEBMPED8HAzK-E2PiEuIf4BETDxAvBvsTAR-hEhMPEB8G1xcAH_
FAFA8QDwbIEwIf4XMTDB8GyBECH_GUEgwfBrcRAR-hyBELHwaIEQAf4dCgDwAGEQAf4MHxH_A3Ew
gfBncZ0EkD2uDW5xIJHwZSYA8DEMHa4tbqEAgfBkgRABPg3_FQ2OkRBx8FER8AFhEBE_LT4RniH_
DJEQYfBRIfAAYRBuDU4QjhEAAf4MoRBR8FIBJwBgrgEQAY4R8wT0C7EAYfBiYRCeASABjhEw-gQR
XnEeARBR8GGREwBxAwEQXhEuURBMNgARrhYA8AoBThE_YRAx8Aoh8ENhEAGeERABriEQEf4BMQBG
TiEeARwAcY4BIAHeATAbADAhLkEIOfAl8GBhEAFOQRARzjEQMa4NDkFOIU4BHiEAIfBgUSABTgFA
Ed4xUAGOLQ4REAFOIV4BHgEQERsAgFFAIf4BITBhQgsAgwDzBF5BEBHwXlEwIXAhfg2uEZABXhGa
AAMXAGsRfi2uUUAXAJABHpGODf4BUV5EAPAGIQ5RHjHwX1EwAf4kERABXnFOAfBgkDUyAb4BBADR
-gcBEAFuQW4B8GAxIBgAFhAXAFExfhHwXxcAEq4bAMAR-gVBbgFOEQ5B8F4qNRABSwHwCL4BMAH_
BCEQAb4BHiEOEfBdgQABjgEwGAAgEf5ALzCuAT4nAxBdWTb2AgF_AUABvgFQAe5REF4NPgFOGgDx
Ah5RMBHOEUCxLmEQAT4tHiEuTQAQEbM3MJAB7jUnEB5ZAfAKDV4BHlHwX2EQMVAR-gEhsCEuURDO
YfBhUbsCkFAB-gMRoBFOMcoC8B2_UfBiQRARPmGODZ5BUBFuga4xDgHwYjEQEf4ELY5BQDFeYRBO
AU4xHgHwYRUA8A0FDZ5RIGEucRABjjEOIfBhQQAR-hABEIEOMR5xJQEQHqgB5EEAAU4PHH5RzhEA
Uc5BFwDwDWIhAAE_LE4BsAF_ETARvlEQAX4hHgHwZkFODF4VALAhIBG_YQABvhHwaHcBYaEgEX4x
3igBcBAR8EIR8BJeAc2RMAF_EV4MvhEeARAaAMTuLK4BLgEgEV4BADEYALAAoTAB-gAMrhEeIVkC
YBAx8GYBvqQD8DkG0RCx8GcB3gGwAU4dziEe0XAx8GgBXg1uEYAhPj3OAS7BYFHwaAFOLW4RcAFu
Hf4DoWBh8GgRTg2OIRAx-gcBPqFgcfBqAf5LCUD_CTEOHwARbA8A8g8R-gANTvECUHHwbBHuARAR
7i0ucRBhYIHwbRGOAT4gAFAugRBRQJwtcBHwbQFuIS4WAGAEgRAxUKESAPAM4RBR7pEQMUChECHw
AyHwXxEeAZAB3qGAoRAxEAD0SlpPFUGQAc6hgKEgQfBtCwVfFgILAAs1kAGOgXDBAIHwaSsFCkYP
DgQPFBs1AYARPhEOkWDRAGEOAfBoCwo2CjQKBgoFCyCxAAEuoVDREKHwZAErBQYXDw8GGwD0ZjEu
QQAhHpFA4RCx8GMFNgcGDx8kCiYKDw0FAHEuIQ5RLhEOITDxABChDiHwXisFCgcvDwYJDx8ECBom
BRsQ0R4BEJEg8QEQoS4R8F0KJhcIJAgJFwYKHw0FC-AAQaDxATDhDhHwWREACwY3CQgPCBQIBhcG
NRwA8AvRLgHwWAEKNgcPFzgPDglKDw07YNEg8QVg8Wkp8AsCEfBDBQZHCC8YCiYKNZCxUPEEcAEO
QT5xDpNJkPBBAQUKBwlvDjYAoKCxMPEFIKFeYQ4jOPAL8D8FJwkEHxgECSYKNfAB8Q9QcX4BHhEu
AQ7GM-EE8D4FJwkPDigKDw0aBTvwAfEQMBsAEG6eHjBR8AJeCfEhPgVnBgULFQvwCfEAoFHuAT4B
HhE_AfABAQ7wPwsKBhc2BRsFC-AJ4aARLjH_AFFOGwDwBAHwPxsKBioFC-ALIdDxBM4hLjHzSgB2
AGBARQvwDB4XB6IhHgEuMX4NfhE_HQDwAS4B8EEL8A8u4Q5xDkFuLf6nNADWCeBiLrEekS4Rjg0B
ziEuIRQAoRHwYT7xBv4K4eAgANIBPjEO8QD_CnEeER4BEwCwEV7h-gURXgEuEX4SALAh8GIBfrH_
BCF_MRAAED41AEBuDP4QEAAgIcAQAPAESxHwBQFeLH4N-gYhjhF_AR4BsOcAQEoh8AXzAOYMfi3_
BFEeES4RbiEOATIAABQH8ACuDf4FkQ4xLiEeMcABDhFKBAIsB4UQ8Q6QEQ4BHhEAswkNXqFwgQ4B
kAEeFgDQMe4Bbi1O8QwOAYARThIAEE5-BfACMW4NTpEAIV4BIGFwEV4B8CGtRzA_EQDkBMIxzlEA
UW6hcBEuDR4aABA_YwTyAi1eAQAB3kEgAf4AQXARHi0OHABRTlEuDW4aAHEAEf4CUUAhNgAwYgFO
jxUQIZUAsR4NvjEAAa4MzjBBgQAANQZwPmEAAQ4tvscFVCy_MDFeGAAQXo0Ftg3OAQABzgxuIR4B
GwC3EU5BAAGeYQAB-gUYAIExEAEeYQABnj8IQH4N-gDTBiCBLhwAcG4hEJEAAc5NBiAt-qpEABQA
AL86IRHeLACwfiF_4fBjAQ4NTkGxLxCuRgnAAf4BQV6xDgHwZAEtngcwAAGOOggyAIEuFQAxDg0_
FgCwfnEQAe4hHkEesR4XABB_P0PRAX5hABH_ABEuIQ7RLhYAEFGmNxB_EAagId4RPhEeQRBRPhkA
IG5hcz8CGQAg-gIHCPAAQT4B8GUBXnFgAU4NHlEQjQeBHmEQMT4B8GYWANA_LQ4RDiEQIY4NbiEu
OAAkQS4bAONODR4RDgEwIX4tXgFeIRsAUWUBbmFgZAIWMDQA8AIxHiHwZD4NPlFgAc4BMCGu8fgR
ECFJAFEuLS5RYDcGMDAhTghaYhAhDiHwZiwAsA4NXiEeAUARHgEeuDcA7gRQnkFgAS3pBqJQMR4B
DoEOsRBBFQAwDg1O8ETwAyEOgQ7RAGHwaAFuER4xYAFecVg1YAwQMfBpjmkAQGEAUTBMAGDwaQGu
MWApAQMQADBjAf4TBDAQAd7KAPAAETABrhEOsfBnEW4BrkHO4ghgUa4RDkEOTAcwaI4hDQgBEAAA
Iw8QwRQAQH4xTkFaAfAQHmEwAd7h8GgeIR4RABFOQRBBPjEeUSAxPiE_8QDwaew8AO4BEF5BSwAg
CRAROB8CgApQLvEA8GohABAuOgICFwAYESEAgx4RDsHwawEOIwAkDmEjACZOESMAQC6B8G6MPyJx
QB0AYQFOEUABIB0AQ26B8IV2ADAOMZCxC-AJgfCNESAxIEGgMSBh8P--LSEQAZAB8JwRhjgQERA8
evCZAUBBAEFTDCyOAZwMRDIuMzecDE4wLjg3Xy8PmwwA0FsR8Fch8Ewh8E8RPxNbBPELTCHwTgGe
IfBJIfBNAd4B8KYRLpEuAfClAS6EDFCjAS4BsAkAMqERHqcEIKARbQUwLgHwIAABHQVBoAEuERIA
cJsBABE_EeALAMCZIQ8VXgHwAC4B8JozBdARDiEg8QLwgwGOEbARkgxAggGOEXw-IA4R1zBQfAGO
EZCOPfAY8QvwegF_IYCxIPEN8HgBXiGAgQAhIPEO8HgBTiFg8QAg8Q-wd3FQNDkBygDwQxnxAiDx
EfBWIfAZkTAxIPEU8FMh8BMxAKEgQWAxMPEJ8FMB8BTRMFHg8QnweMEwYeDxCvB1wSAhjgE_IR4x
QPEG8HLBIAH_CREw8QfwcKFAAf6UB3AC8HCRQAH_LwLwJwDxA-BvcUAR-hFRMBEAsfBugRAx-hSB
ILHwbHEwAf4XgTCx8GthIBH_G2EwofBpcTAR-hxhIIQMkCAR-h6REJHwaBUL8AIggSCR8GdREBH_
IaEggfBkcRUFIP4YDADwI2NxAAE_EVAB7jEgAe7BIIHwYmEgAS4RYAHOEWAB3tEQgfBiURARLhEA
cb4REKG_wRBx_AsgET4BBkAEASBOGAzQsSBx8F9RIAEeQf4FAb8CMCARrjoAEF4UABAgZQsAPwzz
Gb7RAIHwXVEgER4QEf4SMb7hAHHwXFEwAS4Q-hgRrhEOoRBh8AkR8EETAEAQAa7BEgBwIfBAUTA_
EREAJb6xEQAg-h6uCyLxBTIAwCAB-h8hrgEO8QPwXDUG8QMt8QAAYfBaQSABnhH_IfEAEFENAACG
ADH_H8EfDfAHWGEgfhFAIf4CUd4RTsEOgfBYcQABbug8AAAKEFB2CoABTvEH8FhxEHMKoQEOEUAB
ziFwEZ4YAACECgEaAACEA2BAzgHAAY5KEyXxABgAQk4BMN4WAEFuYR6xXgDwAF4QXjDeQBFgjgEQ
jlE_QQhaQDEQIW4WACAwAdsKdo4BEK5BXhEZAOEgAd4QET4RIAGOQa4hbtxlACU-IAFurxuA-gAQ
bgEgAa60BwkdADERXhEcAGEwrgEQ-gUZAIJREAH_ERBeES8AAhUAdllh-hIQbkERABBalAZJExH_
BxIAEO4qQ1ARfgH_CBcA0QNR8FsREAHeAaAh-g8RAACoCwITAFAgcSAR-kc0MJ5RHsUAEVw0DkEQ
gTABFgAwzjEOFgBxYAG_EQCRUBMAIu5BEQAgARDxAlANQd4hEBAAEs41AACdFBDeg0ixQAHwEAHe
gTAhzlGuBwBJQpBAIfAPAe4RkO6sASAhzpEBARMAQP4AAXAaB1BAAa4RjuADEDHpBQD9PdD_AwFA
Af4FQRAx8GQRNwAg-gWWAtIRDhEeYRBB8GYB7gEwFAAwruEgEABA-gARIOQCIAG_jEYwQfBoMBDR
IP4DATDOUYBR8GkB7hEP8ChAAb5hUHHwawGOUTAB3hFAEa5xQIHwbAFuAZBRTjFgfrFQcfBtQS4B
kLGQPvEAQIHwblEeIfAN-QXwBCCB8HBhLiHwCiEO8QAwgfB0MT7IQlAO8QIwoQ0A8RoBoA2PFA0Q
AR7xADCx8AMBsBHwU1EOEZAMdAINAAEe0VDR8AExgCHwVdAQ8ABwDHQMDQABLpEgARDBECEbAKBB
8FcuAWANdBwA8mggYSAcOVAx8AAhkI8OEFe8AgM0AADrQOHxBQBB8Axh8FUBLhEgDRgA8Qk_MRAR
IPEM8Ath8FURLgEgDWQMEAE_AZDIAGAKQQ4B8FX4DDANVB1GBJEQ8QcgwfAJMR4XAFARAA1EDZgJ
cBDxBUDR8Aj_B-IIVwE_IRUtMS7xCiDxAPAJET4h8FURfgEmAPAHByDxAfAIIU4B8FYBfiFOERDx
AyDxByYAADkAUO4REPECKAUQCggGUFgBzvEiNBVwAfBZAa4RECM-IPAIDwDwAFoRjhEQcaDxAF4h
DjHwBxMAEFcCEnMAIUDxBm5xEgCRMfAI8Qd_gfAGDgBRAQ7xHM4NAPAOIfBVHvEZ-gAhHjHwBgFu
AfA4AfAMHvEX-gGB8AcQAKg3IfALLvER-gWREABhDv4G4fAEEACyEfAMLvEM-gexLgESAJRVziE_
Yf4KsT4QAHL_I8FOEfAECwBU0U4B8AMXABBuTEIBDAAgItG3BvAAfgHwVT4x-hjxAm4B0AGODgAA
CBJxGaEgMV4RwBEAAGILlf4ZYTAhEBFuARMAQBH_F3HySBROEwAQITAEYDH_AlEAoRoIAk0AIF4R
gwOl-gFhAMEAER4RwBUAIN4xLwAQcckPAHkIIaARGQDxBiEAAb5BAAHukd4hLgGgAX4h8FVeQRIA
ACoLMAYBkLsA4VdecX5RAAHugf4GAYAhEQBRMRAhXmHtAwBFBAMVADCRPnHICxAQEwCjcEFeAfBX
bqEOgRMAQQYhYFETADZBAEEVACBBQG0LgVdu8QUAAc5REgDRMNHwV35RALEQAc5BIBEAMMHwWBEA
EACdEKAR-gVRMLHwWX5RfEEgrnHwEYVRIMHwWX7xAhAAhhDB8FpugQCBEQC0sfBbboEQcRABnoER
AFFEAfAGbhNCJY6RFADBEfAFboEwURABjmEwFAAxofBFKABSMFEQjnETAKCR8F1ugVAxEI6BnwAV
YRAAQH6RIAEtEECB8F0BEQAkAAESAGBx8F0RboHmQvAAbpFAEf4BgSBh8F0BfpFQFRFQcYAB-gAG
FFFeAX6RkBAAIO6xixMMDwChboGwAW6RYAGu0Q8AEQARAFBeoWAxfhEA8QxfMW6BsG6BwAFu0RAh
8FwxHgFugYAxTqGQQV4RAPAQAc5xkBFesYABPhE_0fBhEW4RPnFwEW6xcCE_8QTwX54DkHFgAX6x
cAF_AVBCEWB1SpBeYXARTtFgMU5dTmHwYR4QHhAbDAG8CiGxQJEKES4wABBjHAAwflFgMSLQEQCx
UAEeMR4RAOHwZBgAMI4xcAczQAEQsWCfCwAyADEB8GQSADB_MYATAHUOARChcAEOTwAQZdVDWaGg
EQABGgBjkQAh8IkREQAAbRIacdUKIP9IzxkfStoKFQ-rFygPOwD-IlTIyAQPFap1AwEAgZsR8LYh
8GgxjwfwASwR8B0B8DuRAGHwWSHwM8HyUSAAYYILIS7hAEdgMRBh8JLhPD5QABHwjXGFRoDwCgHw
ipEQce1aAJ9IABcG8AjwiPEMEPECACHwg2EQwfAAoQBB8H6BMGgWIQRxIQCAe1GQEXCRoFEEUfAz
8HmhACGgAZ8TATARYMHwYRHwA8GQ-QcBYMHwdZEQEVAh-QghQMHwc7FwAf0NAVBxIBHwcYEQEVD9
ESEwcQAx8G9hpAmQQAH9FBEg0fBtiU2QAf0XASDR8GxxhQ4g-RoMACBqcRZK8AL9GxEwkQAB8GmB
YAH9GzEwgQwAEGHbSKD9HEEgUQBR8GZxrAqw-SABIMHwZpFQ-R9AV5Cx8GahMP0fER0LABBkC0kB
GABiDQEwwfBiWQAwITEgDADgEAEw-SQxMLHwYMEg-SQUABBg6wgx-SNBCwCiIBEQ-SJhMFEAQQ0A
4J0B-RdhUAFAMfBfgVAODgDwAXFAMQBR8F2BcP0icTAxEFE6dAALAECx8F2RBUsADAAA2FpsXcEQ
Af0jDABgMQAB8F2Bo02A-QwR-QSBMEFrSSDwXCEA8BoKATD9A4EwQSARABHwXKEgAf0KUf0CkTBB
AHHwWqEw-QoBAAH9BpEQYShIARIAgAkQAf0GoSCxDwCBkTD9ChH9BrEOAI8MAfA9kSD9Iw4AAdBa
kSBNMf0HYa3BEPEADgAQPR8B8BEFAWABjdEQ0fBckSANAXAB-QLQAS3hMKHwXpEgAZAB7V0-IA3h
7kjwB-BdscABzQHwAgEN4SBhAFHwXMHAAa3TB-AHDeEQ8QHwPAHwDcFQEVCtAUARsAEtwRQAIDsR
FADAAQ1QrQEwAR2wAT2hDQlEXLFQERIAoC2hMOHwXbFQAWA4AGCgES2hMHE6ATCx0K2RFBFNMQAC
DgBgAAFdkSDhSQGQwbABvQHQAX2BRwmAXcGg7QHAjYFwACBfsWVHgED9AgFwEZ1xHgAgYKEgQfEB
ABE9AU0RbQEQQa1xMJEQQRcAcK0QPRD9CnH8GjJgkSAPADAJcSB9a5CBIL0RPRH9CWGjDmBigSD9
HVEKAGBjgSD9HFFrdtBkYTD9G2Ew4QAh8GVRCwAANwAQZgoAEFFnGzBmYSDHAgAqAACWDjD9GjEW
APAIaFFA-RkxQPED8GlBQAF9wV0RrSFQ8QLXDmBtAcABTRAPAPAJAfBtUSBdAeABPRCdIRABQOHw
cDEgET1Qn0BCESABLRYAkNHwcjEwPSABrf9BAhMAELEzHEA9EAHN5kGQEJ0REBFQkfB2K1MgEe1X
QDARnQFnXPAVEHHweEEQAf0SATARIBEgYfBHDvQWDxSQMSAB-RABICEgISBRPATwAS0F-x8WBLAh
IAH9DgEgITCIBBALFwDAHL8WDEsMqww7DAWwoAMRDB4A8AUwIfBLBQsMCxwEbgsMCw8UDgoLDKw_
kAwrBQ4EDEsF0EkAMAoBIKxR4FMFHAscBRAuEAQMCw4AMHwBLgBAHAUABFYAEfBPA-QDByEQAR1A
IfBTBUsFEAULDAoALgBiBA4KSwUOKwBQAQEw-QZKAnEBMDEgHvBOLQAnHAUsAEIFKwwLgwBA8Ab9
BFRLcGEgHhA_8EgrADYONQtVAAMpAABXAIAGEf0AIZBRQIOCdkcFSwVABRsoACQLPCcAoQgRzQGw
YTAOCg4oAABBAFQQDhQFClUA8QMLDgVMBQ4EHCsMBfAKAX0BsKEsADx_8ESoADALHhQAASAFFCsA
8AQLcbBxYA4aDgCe8EMFSwoQBRseLyYCUgDwByAFCwwFIA4EGwwF8AUOCg7wArFgDioeI2BABUsK
IB5VARIQKgBCChwFMCgAgRoOAE4gMVChKgCg3vA-BQsMGwwEXqkAIAUOtwFhBS4EHAQ_LQDwGQQO
Ch4ADioOEFFQkVAOOg4ADooeGg7wPgUcSwz7DQwF8AMOGhAeKg65T1EgkTAOSiIAoCoO8D0FHCvc
G8zCAHACDioQDioeIwAwMIEwRQDwCB56HkoO8DwFCww7RAssCwRLBAscC0RLwwFgDjoADjoeHVGT
QHEwDkoQDnouKwARK3kBIQQOfgEA_AAhEC66AAA1ACIqDjYAURAhQGFANgAiHlo2AAB5AiEQDjUC
AK4BkBwEHgsMBQAFJG0AEAC5AACzAPADMRAxYEEwDloQDmouOj7wOwVMMQASCmQBUAUsCw4KjwGA
JAsMKwwE8ADMACAOSqg-0kFQMUBqEA5qHkpO8DrIAlEFHAoOBKEA0RwLDgUcBUAFKxwF8ACiAPgC
Sh4gASBBUBEwARBqDgAOWi43ABUFbQAACwJACiUEG48BBDoAYA5AESARQCZXEh47AEE6bvA5FQFQ
EAUMCx40AiEEHKgAMQ4EPMkBA94AMDoOUKFO1SEADmoOEA5KLlo_Cg46AARHAgPMAgCDAmFbBRAB
PZDIAfAAOg4gQYBxEA5aDhAOWh56_AFgOQUcGwwKTS_QBAsMCwQOAC4ArgCHPgQLBRABXYA3AAC0
AGAAPkouek41AFMLHAROBAYAIAROeACBAW0BcA5KXhqgVkBxEDoetAHzBYpe8DgF2xz7AAUQAY0B
YA46LiAOIgABCAHwAR4KDmouem7wOAVbTGtMKywmA5ABrVAeKi4KDiBNAwDvWPMNYQAeKk56Hop_
8DcFHBv8CCsMBQBdET0BQA4qPicAICEgJwBgDlo__gNuJgAAygICWUZwTQEwDhouACUA8AEOGhAx
IDEgYQAOeg4ADvoCKgCSLAv_CwsFAE0gKABREAoQDiomAMBBAB6KDhAO_gNO8DehAnP_CwsEDjEg
UAAAsTISOigAJRCaJwBh_xIOQAFdIQAiAB4hAPAUARABIEEQih4ADloeui4KDvA3BTvMCzwLHAsc
OwwLBAUUDgBUVBEelS4AlwMgIRCnVDAeem6bA_GqLhoO8DYFK-wDOzx7BSoAAEMvAVwAAAYREDHL
APACEA4KHkoOALouKvA2BQsM_xP7ABAt8kYhDgrRNhA6BzgwQTAh2AKQEA4KLjoOAMoeLQBALAv_
Ak8DQ14FSwXRVwCVAQAuASAuKjUAIBFgNQCWDhBeOg4A_gEOMwAQbjIAIWEQLgBAEBoOAM8EUCEQ
AXAhWQJDAF5KEC4AIPsTWQB3MSAOKk4ADigAMBEQev0BgB5qENoeGvA2hQKiC2wLfDscKxxLBVNH
QxAeGl40ABIQMwCBSi4AHqo_qi4xAFP7AwzrDCsANgAOOisAIFAO3WVDSk6qLkABFTUVAWwNMQAO
Km4qAAFoARAKBgCDPhoO8DQF_xYrACIaftsAMBARcCkAQTo_mj4nACROCicAIUEQJQC4LhoQAcAR
HjoQDqoiADMc_xQjABAABQVQCg5AAaDLBACWAEYADro_JQBGMRAOKiUAbQARcA4qTiYAYxAREB4a
jiYAgHABcA4aHgAeawAwAA66UD6RDPsVBVAOKo4QIQAg8AHnADQeql4gAKUOGv4OCl5ADiqeIQBU
Cg4AHrohALRh3hA6LvACHgAe2lQAUFkOQP4A_ANxYAGgHgAO6hgAkcpO8FkuAP4BEBgAU7Au_gA_
FwAyWv4EFQCBMA4BYA76AV4WADBb-gNyBFBQAUABQHUDARUAa13_ACAOahQAg_4wDmpADgGgEgBw
PvBhDgpuYCcABhMA0WIuAB6ADmrwAg76AX43ABxwDgABLwAHDwCkHgARYA76Al4AHiAAkw4RcA76
Ak4Q6hAAkAABgA76Az4Q2m0BMXAOaqkBABEAI_ouEQAxUAGQMgAQDtgC8gY8AfAkDmogAYABMA76
AW5ADroO8D0UAMERYBEwDvoAflDO8HKYAIDqfhAR8IIOam8BopoOOn4QHfEA8HIQACDajmBMFAEP
ACDKjgtMMB0hHQoUIfAIPwBz2m4AEd0RLU0AUdpeEAHtDgAQWkmFMFoOahEAMyENASAAg8puEAEN
IZ1RDwBAGk46jjELVQABTREtFQAwXiqOSk0hTRCgSkENAfBzfgBRSh5qfjAWABYQFQAlWg4VABMh
QABQKj5KrhCQTgA-ADIR8HOLAHEaXiq_ED0BfVhxEfB1DjoOChcAkQ4KPhreABEdIJ5MJPB2GAAh
-gb6DtJ5Kj7wAg4K-gnwhA4aCwB5CvCDbvAC-i4PTe0B8La4G2M2Ny41MTCBhCMxNIcPgzMxLjEx
Nzg1GAAPzBsQUJ0R8LRBpVxRNfEG8C4KAGAz8QvwLCFZXfAWMPEP8JfxFPCR8RnwjvEb8IvxH-CH
8SPwg-Eo8H-xKvB88QfwBdYRgBHwBPEGQLFwFBLwGBHwA-EEYAHPEwGQ0fB18QJwEf4BEQ4BUNHw
cvEBUDH_BxFA4fBv8bkXYQ0hMNHwbQsAEBHWDvALbeFQEf4SETDB8GvhMBH_FhEw0fBp0SAB-hse
APATZ9EwAR4j-hcRMLHwZ8EwAQ5T-hYxILHwZcEwAS4TDhP_FgMP8B5j0SABPhMOA-4aESDB8GHR
MD4z-hshILHwYOEgAS5D-hpBIKHwYNEgER5D-hsMAIBf4SABHkP_HiQAwF7hEAEeU-4CE74DzlsA
8QRd0SABLhMeA-4PEw4THgNuEQ4BFgCQEAE_E-4TAx4DRSDxAzCh8F3BIAEeM-4TA85BILHwWzYA
cP4hYRCx8FpeAHQj-hETTgN_EADyBT4D-hETHgMeE35RENHwWOEg-hYjDwDwAiDB8FjRIAEOA-4E
E94jPiN_yhAQWG8AYBEQAR4D-rBZ8AMeIw5THgNOcRCx8FfRIB4DDlAwAPADAJABDnMeE05xAMHw
VgEesRA_VgHwAAJRDgEgHhMeIx4TPoEA0RMYEKFUE0BAER4DNCcQERoA9ApugQDh8FQBPpEAAR4h
XiO_Ex5TTgABHiMOGgDwAi6hEB4BHqPeUx4TblM_kQDhOlYQQhcAly6THgPeYz4TPhcAxB6xEB6j
-gcDLkMuQxYA8xNBIQ6xAAEOs64TzkMeEw4zLqEA4fBTAS6xAAHDrhPOUw5jEgBAHsEAAcoBKKM_
EAAA9hmiAoABHhNOEz6RIBgAYBAOAw4BcBMaUpABfgNOFwDALrEQAR4BgA4DzsABJysgPqF1FAAY
AAChZhDOcx4yM06RFAAwHsHwti2BAC4TXqEQ8QASAHCAEVABngFACyMjA24WAPQBLsFwHgFAAY4B
QAEOEYABji0AceFgLgEwAX7kLQUXADARHtGnFAAYAHNgIYABfqEgFgBQ4AFOEw5QEGAOA06BDgG_
D1A5EfAJARoAMS4DDhwAZn6hIOHwOxYAAdEkEJ49UgEWAIERHsHQAZ4B4BMA4AHwVhEO0RABkA4j
DhNeuSQyA35xFwABNAEgAWDCATcjbsAZAABvARADKEcwjhN_aEvwFs5hEPEC8FcRDsEADhNeIw4B
LgOOER5h3mEQ8QPwWAEOwQABowE9GoBeA-4FYRDxBBUAQKEgHlOvAACMWzAg-gQUAxAxRwCAWsEQ
PnNeAx4QIxATkwAQLvkZ8APwWsEAAR4DHuMOIf4BEx4DngFMECBaIQ4YsA4THnNeEx4B-g8RXAAh
XKETALQDDkN_A-4PAQ4RIBUAYAMeY24D-nVS8AME8F2hAAEeMw4T-gwDziEg8QXLEaAOY-4HIAFO
E34hIgBgYIEgARMOIwBwAwFAPhN_EZ4QADATw2OeI04xUAEuE34BQBMAIC4jyQAQ3vABMRN_EfwQ
YHEgAR4DLtMv8AoOI24RcOHwZmEwPgMe8AgBEA4zXhGA4fBmOQAQEwAn8AYhDhEOA34RoNHwZ3Eg
AQ4TDgMu8AFwHBBgyROAaWEwDhMuAw52AkADXgNuXXAQoRAR8AMBftF_Ax4TXhFAQRCR8AUh8FXd
HzAXMTBJaPAaBiHwKQEfFfAMDUAdAE0QIUD_FwEAETAxQEHwQw0fFjU8JSzFPAUcFSx-NlAhMAH_
FNFe8AMxYDHwQwUfDz8fLw8fH08PLx8MAJEPDy8fDw8fHw8FADEfHy8QABAFrBQg-hIPEbAx8E4N
DCsfHxsKDBxq8AJKCxorGgtKGyoLGgwKCwUQMb8gACgA8AdBUA3wRw0MCowKLEosGiwKHArMBRBB
6CAQATwR8AwgDRAt8EUNXGUsCgwlLBUEPAoMFZwFwBH_ChEfAPASMB0ATfBDDUwEDUANDCoFEA0c
DRAFPAsMDQAEfAoFYDEwrB4BQ160LQBd8EINDAocCgwsAHAMCg0QBRwaLgDzBgUMCjwqBYAhMBH_
AwGgcTAdEG3wQS4AURAFBEUMLwAAQg4UKl0AAI8BMAEBwCwANI3wPywAIAwbhQADLQAQGhMAMAAM
ChwAECwxADAeA84yAKENDxQNEJ3wPg08XwAQHF0ABGEAICwajwBATAoMCjMQ8gABrgGgsTAdCQ0Q
XTkd8DwxAEQ9BQQc6wAAYQDzBAVsCgsF0AGQAeDBQA0ZfWkN8DuPADNABTopAAJXAPQEbAsKBdAB
LZBRQOFADSlteR3wObkANC0FPBMBIQoLFAEgBFyObfMJ0B0JDQBdEEEOAUDhMA0pXakd8DgNDBoM
ugAzHQUMYgAgGyrsAPMMCyocKgXQDRkNAA05DRBhUMEwHSkNAB3ZHfA3NgBCAA0MG-EAEAU3ABBK
NgCBGhsqCwoFwE01APEDUSABMEEOUTANOQ0AHekd8DYNdQExEA0FFTgCbwAgDTVqNvAHNQw6BcA9
AB05DQBRICEgoUANKV3pDTIAcwoMCgsMDXAvAMNgBQwNUAUMKgWwPRAtAPwFQIEwHSlNuR0ZHfA1
DQw6DA1gBRwsAEAAHUkN02owQGFANgDxGQENaQ2JLfA0DQwqLGUMChwlHHUcZSwKCwWwLQEdWQ0A
MTAxQGEwHUkqAFAdWR0ZDSwAMAsqCwECoDoLOiyKbDobBaAYY-AELUkNMUAxUEFADVkNAB1pDVkd
KS0A8AAKCwoMGhxqDDosihyKCwosAJFdOR0RUDFwEWAqACNJLSoA8QoMClxKPBqMGhwKnAoMBZAd
GV0pDWBBwAEwJwCAOT1ZDTkd8DN_APEWDGU8FTwVLAUsBGVMBZAdKV0JHTBxQIEgDVkNEA05PWkN
SR3wMgIBMEANDPIRAD0BYQUQDAoFAA4BcDwFgC1JbQBVGNaRIA1JHQAdKT15DVkNNQAVCjUA8QUa
BQANGg0gPQUsCgWALTkdED0AYSpfcR05TUkd_QA1ACALKjsCMAsaLDYAUBoFIAoMaQBAAA0FfDUA
cBk9EA0ZEGHlZrUgDTkNIA35CB3wMXICIAsaoYMLOQAgDAQfAMAcBXA9CT0ALRkQUSAjZxEdPgAn
CQ0_ABIqPQAAegAAEJXBGg1ABRocBA0gAUBdqAKQQSAxEJEQDTkdOQAxHfAw4gAwEC0ANwChEAwa
DAAFEAUABVkDQAwLDA2PdfABID0ZDSAdORBBIEEAgRANSTsAUQoN8DANcgMpHSA7AAC6AsEdBSwF
QR4BIC0pDRBgAhAQoWOQDUktEA1ZLfkBOwBAPAoMHYgFAzkAMQwgDb4AtgwaDAUAAV4BIB05OwBg
cRAdWS0A9gFgDfkCDfAviQGAGgwdBAwaHAvDARY8QACTLAoFAH4BEA1JPgB6AFEQYSANaT4AETqi
AzM6CwrUAQAGACIQDfMAQAUAjhDgWwZ_AFBRIB1pHfYAC0AAAPoEIAUdiQCSDAoEDQUKDB0wPwAR
TT0AAS5YZ1EgDXkNIDwAYFoMBWwKHMwBEBV6AEAMChxFH1WwDjEuAQA9GQ0AHVl2YgAUBkZZLQAt
OADhyhwqPAosGgs6DDoLDA3ZMwCvAyANaS8AlRBREB1JHSAdWS8AYAz6ABw6HJYDYToLKgwFDXce
oU0JDQANGQ05AEFIYGYtOS0QHWkzAOGaHGobKisKHBocGjw1Da8e8QldAA0ZHSkAQQBhEFEAHUkd
EB15LQAN_QEwAPEFCyocBQQMBCXsChwEFRQFDDobBQCYAEAQLQAdQgGBAEEAcQBRAA04AEUNCR0Q
OQBQDA0A-QKkAjANAD1vBhIKOgCALRAdAF0JDRDdYyBRHcMBEHkhBWIN_QAd8C7FBaD1AQ01PFUE
DAo8MwAQEBNc8gEdAH0QIRBhIDEtKR0gHckNoQABMADhGgwqTEoMCixKDCoMKmwyAGEpDTAdGT0x
ABARPwOgEC3ZDQD5Aw3wLZwXEUqdBOAKCwocGiwqLHocChwKBXwfAjYAAN9ntiARAC0pHQAdyQ0Z
OABQKhwqDGo5ACAcCnUBICwaDAcAGS1TAA05LQA6AIIQMR0pDSAN2TkAAKEAMAuaG3EAcCobSgtq
TAV3CgFnAvUBHQk9CQAhIGEQMQ0pHRAd2WoAsA0MOhwUHAQcFAwVAT5xBEwEFTwKfDkAMAANSXYB
E004AGUZLQAd_QI3AAHRB7mdEG0AHRANAA18GjMA1BAREHEQIR0ZDRAd_QMzAIAKCyoM9Q0sOskI
AC0AMA1ZDT4CICk93WhAEBEADfIGNPkEHS4A8Ac6HAoLGhw6CwpcGgxaHDocGgUAIQ1JWAcBKgAA
NgBBIAEADWUAUQQNAPkCogHBehs6CxobCiw6GxoreQEQLPF-JkktawAwQC0goAIVGTMAYBoMSlwa
bL8H4QocKgwqDBosBSANOT0JjQeIMBEAgVAdEB0yAPIGCgsKTBpMGgwaPEocGjwKbAUQDTlNLwAg
ICEvACIALS8A8AIN_QLwGAHwBQ0KC2oLChwKK1l1QJoLaizyBSk5XTMANw35BzEAIPwdIgAQTUQA
PUkwESEAYAYB-R4pfUAAMEkNIB8AND35BKAAQ1UdMC0cAAElAVBQLfkEHRwAcAEd8FR9WW0aACFZ
DRoAAHQFARgAMVVNeRgAEWkXACD5C0oAah3wVS2JjRQAcA3wVx1JDSlKASANads0JEANGQB1WE0J
DVktMBcAMAc9EMoBYFqtUA1pQBEAmQgdIPkD8FyNYBAAdl1NkA1pDTARABRsDwAxBV0QdwMIEQCA
PdkN8DcB8CQTANChIA35Bj1g7fA2IfAjEQAgsRARAEEQAfBKIgDwB1ARoA35Bi0QAS7h8G4NafAD
DfkFLSCcLijwbQ8ABR0AEB3JLyDwWH8BAhEAEA05JKDwVyHwBA1pDfACEgAAijQDIwAEEgAA2ygF
UgCYDRAuMT4RLiEuEwAAgA4DpCMmER4ZACEtYBUAJxABLQA0LVABFQAEmABQAh0JPTA7BQAWACQO
ERcAYQEdSR0AERcAAOo1YXANafAE_VEJAJRpAUYAQQ4B8HEtAGLpbSkdQRApOBNyugCAAU1JDWAR
8Hc4APcBDcmdKQ3wgW3wBf0BAA0AXZASH1-oEikP7iIoDzsA----------95UG09OH19
:: gfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE2OjQ3OjIyIixtb2RpZmllZD0iMjAyNS0w
Ni0wNyAwMDozMTo1OCJdXQ==
:: map/
:: map/0.map
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE0OjA1OjM1Iixtb2RpZmllZD0iMjAyNS0w
Ni0wNyAwMDozMTo1OCIscmV2aXNpb249MTg2Ml1dbHo0AKgAAABYEAAA8Ah7e2JtcD11c2VyZGF0
YSgiaTE2IiwzMgMALyIwAQD------yM9NDgwAQAvNDABAF8iNDEEAA8BANEfNBUABS80MAEAZ181
MDAwNoQAZFMzMDAwMQgALzcwAQBfFzIEAB44iAEPAQD---------nvEIIiksaGlkZGVuPWZhbHNl
LHBhbl94PTAIANJ5PTAsdGlsZV9oPTE2CgAQdwoAgHpvb209MX19
:: map/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE2OjQ3OjIyIixtb2RpZmllZD0iMjAyNS0w
Ni0wNyAwMDozMTo1OCJdXQ==
:: sfx/
:: sfx/0.sfx
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE0OjA1OjM2Iixtb2RpZmllZD0iMjAyNS0w
Ni0wNyAwMDozMTo1OCIscmV2aXNpb249MTg5N11dbHo0AH4FAAD5FgAA8idweHUAAygAAAQABA9A
EAIOAAGgASACoA4ADxAADfDJDg9ID0IPQwQFBgcAA5APQQ9IYAOQD0IHABJDBwASRAcAj0UPSFAC
A-D-AQDr8QOCARAGDyAQASABIAHwAA8SEAIOAPkuDyEPqhABD-8gDzEgAVABCSAPPiAPVPAGAQgg
D3FQAvCMDygP--DGD-gKD-8PgA-3Dw0BcA9iD0EPTg9HwFMAQAIQAgxRALElDxYP8BEwD1fwwzwA
WgYPIfCvQAAQZT4AcA9BD0cPRaBEABwdRAD6FSEgAQ-_EAQPVg8xgA8RAhAEDg8oQAIgAQQQBAzw
owsPngLwxVMAAJUA-QsyD24Pbw9kD2UPLQ9mD20PYg9hH3MgARAGDGAAEQr0AB0N8wDBQSAPShAC
DxfwiwsN9gAVDWIANGQPSfUAAUQAUQUHDzYRUwAhDx9UAFADEAFADK8A_SYgDFABAhABMA-U8KML
DdABUA8VDyUPKg8vDzUPPw9KD1oPag96D38Pjw_fD7kPzw-p8J8BAGwAoGwPQQ9TD0UPUrAfAREe
bwBHD_EAEcIA0w-3DwUAESAPoiAPqFB1ADAgAeDFAPkSHSAPDxACDz7wAwkgDyogDzMgDy3wag8S
Cw0JsAGgCfCsbAACjQEA3AAvRaAsAQH3CCUPHgARMA7wwwsNwAFwBBAPSQAPF-CqRAAv8Ak4AAEy
ISABNgAv8MYsAP----8dH-8BACZfQwEQBgJmAABiIAQPLw9aSAaADxMADjACARAVAJEh8KIGDwwP
6gpMBh8NSwYIhWwPdQ90D2UwYQB1DwUPFQ_w0GUA-xoQAQ8FDzoP8QEED4gP6QFwAQgQBA84D8IB
QA__8KsED_UL8AUJ8K0BAGkACnJhD2MPaQ9kuAYQAPoFFiHPAGEGDyUPEhHRAJIP-RAED0QAAXDT
AJAQUAIPKhABBhDTAO_jD0EADwvwBQ8UAAnwrW8ACt9zD3QfZQ9sD3APYQ9uHwluEHDaCfMwATAP
MP0vAP0vDP0v8HAOAAQPDTAPKQ8vDA8rDzcPKg8bDyQPKgsPJA8sDyH9I8D9Iw8RDw8PDQ8RDwsP
EA8OCgBADxz9Iz4A8QQPFAIwDzAPIv0uAQL9Lg8NBv0uVQAfBVQACBLDVAAUBVMAGgVSAMK2ATAP
Kf0vBP0vDxCjADAHESC0ACUPBbUATwdA-bAIAHZG----AwsADwEABB8qIgAJ0QUOAA8MDjAfMx81
PzcGAFE6HzUfMwQAoTcdPzofMB8zPy4ZABQ8GQDlPy4-K-89Ch34FA9aD0gEAD85Dy4QAAoDBAAf
HS0AEgwQAAwYACE5D_4BAbwAD6MABAIKADAPNw8GACAwDw4AoDcfNQ8zDQ8wDy7vAE4-NfgwXQAP
EAAIDBgACyAAEy8EABUPBABgDSkPSAkKKAAoCQqzAAB8AACjAPAAPykfNx0fNR0fOh88HzofFgAB
pwCIPzo-PH8w_DA8AA8GAAERHQMABAIACBoADBAAAAYAhQ8kDx0PFw8SOQEPIQEPDyMACxAwxAAi
_DBuADEpCikIAEoJDSkKfAAPHgAJD4wAEwFpAA-oAQEPgQAXDwoAAQYOAAiLADF-On_JAZF-MH83
fzV-M39iAAhBAQ8OAAEIBgAOKAAPDgAbBIoA-wL-GAYd8g4dcvEGHfEOHXEJCgIAAQcBAg8fAAoE
VQCR-QwS-Q4S-Q4RAwAgCQoEABAdHQC-Bg4wDysNCw0LLQsGABaPDz4NAw0DLQMGABZfDA0MDQwG
ABgDmQAf8gkBOA9TAEcPWwEGDL0FD38AZA93ADwPygBoD0kBbw8kAAMHkQcfcKQHAgcLAA8BAP8G
G2tBAQ9mAl0PfwD-_Q_xAzpQ-----64=
:: sfx/.info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE2OjQ3OjIyIixtb2RpZmllZD0iMjAyNS0w
Ni0wNyAwMDozMTo1OCJdXQ==
:: asteroid.lua
--[[pod_format="raw",created="2025-05-20 13:51:18",modified="2025-06-07 00:31:58",revision=898]]
function new_asteroid(position)
	return{
		_position=position,
		_speed=new_point(0,2),		
		_sprites,
		_sprite=0,
		_flipx,
		_flipy,
		
		health=0,
		threat=0,
		name="dummy",
		init=function(self)
			self._sprites=game.sprites1
			self.flipx=rnd() < 0.5
			self.flipy=rnd() < 0.5
		end,
		update=function(self)
			self._position+=self._speed 
			if(is_point_on_screen(self._position)==false) then
				self:kill(3)
			end
		end,
		draw=function(self)
			spr(self._sprites[self._sprite].bmp,self._position.x,self._position.y,self.flipx,self.flipy)
		end,
		damage=function(self,d)
			self.health-=d
			if(self.health<1) then
				self:kill(2)
			end
			return self.health
		end,
		kill=function(self,mode)--0 hit, 1 deflected, 2 destroyed, 3 passed
			if(mode!=3) then			
				local particle_system= new_particle_system()
	 			particle_system.spawn_rate=1
				particle_system.lifetime=10
				particle_system.position=self._position:round(tileSize)
				particle_system.particle_position_r=new_point(-8,-8)
				particle_system.particle_speed_r=new_point(-.5,-.5)
				particle_system.particle_halflife=0.99
				particle_system.particle_animation={127}
				particle_system.particle_flipx_r=true
				particle_system.particle_flipy_r=true
				add(game.particle_systems,particle_system)
			end
			del(game.asteroids,self)
		end
	}
end

function new_small_asteroid(position)
	local ret = new_asteroid(position)
	ret.threat=1
	ret._sprite=65
	ret.name="swarm"
	ret.basekill=ret.kill
	ret.health=1
	ret.kill=function(self,mode)
		if(mode==0 or mode==2) then
			play_sfx(1,channels.enemy)
		elseif(mode==1) then
			play_sfx(3,channels.enemy)
		end
		self:basekill(mode)
	end
	return ret
end
function new_large_asteroid(position)
	local ret = new_asteroid(position)
	ret.threat=2
	ret._sprite=64
	ret.name="large"
	ret.basekill=ret.kill
	ret.health=30
	ret.kill=function(self,mode)
		if(mode==0) then
			play_sfx(0,channels.enemy)
		end
		self:basekill(mode)
	end
	return ret
end
:: camera.lua
--[[pod_format="raw",created="2025-05-19 23:50:11",modified="2025-05-26 01:15:35",revision=73]]
camera_helper={
camera_point =new_point(0,0),
camera_desired_point =new_point(0,0),
camera_shake =new_point(0,0),
shake_intensity=0,
shake_timer=0,
shake_time=0,
camera_shake =new_point(0,0),
-- Function to set the camera position and update the variables
set_camera=function(self,point,instant)
		self.camera_desired_point=point
	if(instant) then
		self.camera_point=point
	end

end,
get_camera=function(self)
    return self.camera_point
end,	
update_camera=function(self)
	self.camera_point=self.camera_point:lerp(self.camera_desired_point,0.5)
	 self:calculate_shake()
	local c=self.camera_point+self.camera_shake
	 camera(c.x, c.y)
end,

shake_camera= function(self,intensity, t )
	self.shake_intensity=intensity
	self.shake_timer=t
	self.shake_time=t
end,
calculate_shake = function(self)
	if(self.shake_timer>0) then		
		local strength=self.shake_intensity*self.shake_timer/self.shake_time
		local point=new_point(random(-1)*strength,random(-1)*strength)
		self.camera_shake=self.camera_shake:lerp(point,0.5)
		self.shake_timer-=1
	else
		self.camera_shake =new_point(0,0)
	end
end
}
:: director.lua
--[[pod_format="raw",created="2025-05-26 03:25:48",modified="2025-06-07 00:31:58",revision=750]]
new_director=function()
	return{
	scenes={},
	current_scene=1,
	total=0,
	timer=0,
	goal=10,
	init=function(self)					
		for i=1,#self.scenes do
			self.total+=self.scenes[i]._duration
		end
		
	end,
	update=function(self)
		local scene=self.scenes[self.current_scene]
		self.timer+=1
		if(scene:update()) then
			if(#self.scenes>self.current_scene) then
				self.current_scene+=1
			else
				self:kill()
			end			
		end
	end,
	draw=function(self)
		local scene=self.scenes[self.current_scene]
		scene:draw()
		--print_right(scene._timer.."/"..scene._duration,0)
		local fill=self.timer/self.total
		rect(screenWidth-101,0,screenWidth-1,10,31)
		rectfill(screenWidth-101*fill ,0,screenWidth-1,10,31)
	end,
	kill=function(self)
		game:finish_level()
	end
}
end
new_scene=function(duration,rate,action)
	return{
		_duration=duration,
		_timer=0,	
		left=0,
		right=480-16,
		message="Smooth flying",
		spawn_timer=new_timer(rate,0,action), 
		update=function(self)
			self.spawn_timer:update(self)
			self._timer+=1
			return self._timer>=self._duration
		end,
		draw=function(self)
			if(self._timer<=60*3)then
				local c=8
				if(self._timer%60>30) then
					c=24
				end
				print_centered(self.message,0,c)
			end
		end	
	}
end
new_pirate_scene=function(duration,rate)
	local ret=new_scene(duration,rate,function(self)
		--local pos= new_point(self.left+random(self.right-self.left),-16)
		local pirate =new_pirate()
		pirate:init()
		add(game.pirates,pirate)	
	end)
	ret.message="Beware of pirates"	
	return ret
end
new_asteroid_scene=function(duration,rate)
	local ret=new_scene(duration,rate,function(self)
		local pos= new_point(self.left+random(self.right-self.left),-16)
		local asteroid =pick_random(self.asteroids)(pos)
		asteroid:init()
		add(game.asteroids,asteroid)	
	end)
	ret.message="Avoid the asteroids"	
	ret.asteroids={new_small_asteroid,new_large_asteroid}
	return ret
end

new_parts_scene=function(duration,rate)
	local ret=new_scene(duration,rate,function(self)
		local pos= new_point(self.left+random(self.right-self.left),-16)
		local part =new_free_part(pos,pick_random(self.parts)())
		part:init()
		add(game.free_parts,part)	
	end)
	ret.message="Get the parts"	
	ret.parts={
				new_part_engine,new_part_engine,
				new_part_bulkhead,
				new_part_scaffold,new_part_scaffold,
				new_part_gun,
				new_part_shield
				}
	return ret
end

new_cargo_scene=function(duration,rate)
	local ret=new_scene(duration,rate,function(self)
		local pos= new_point(self.left+random(self.right-self.left),-16)
		local part =new_free_part(pos,pick_random(self.parts)())
		part:init()
		add(game.free_parts,part)	
	end)
	ret.message="Get the cargo"	
	ret.parts={
				new_part_cargo1,
				new_part_cargo2,
				new_part_cargo3
				}
	return ret
end
:: error_explorer.lua
b64$LS1bW3BvZF9mb3JtYXQ9InJhdyIsY3JlYXRlZD0iMjAyNS0wNS0xOSAxNTowMjoyNiIsbW9k
aWZpZWQ9IjIwMjUtMDUtMjAgMTk6MTI6NDAiLHJldmlzaW9uPTQxMl1dCi0tICMgcGljb3Ryb24g
ZXJyb3IgZXhwbG9yZXIKLS0KLS0gYnkga2lyYQotLQotLSB2ZXJzaW9uIDAuMC42Ci0tCi0tIGFu
IGludGVyYWN0aXZlIGVycm9yIHNjcmVlbiBmb3IgcGljb3Ryb24uCi0tIG9uIGVycm9yLCBzaG93
cyB0aGUgc3RhY2ssIGxvY2FsIHZhcmlhYmxlcywKLS0gYW5kIHRoZSBzb3VyY2UgY29kZSB3aGVu
IGF2YWlsYWJsZS4KLS0KLS0gIyMgdXNhZ2UKLS0KLS0gYGluY2x1ZGVgIG9yIGByZXF1aXJlYCBg
ZXJyb3JfZXhwbG9yZXIubHVhYAotLSBpbiB5b3VyIHByb2dyYW0gX2FmdGVyXyBkZWZpbmluZyB5
b3VyIGBfaW5pdGAsCi0tIGBfdXBkYXRlYCwgYW5kIGBfZHJhd2AgZnVuY3Rpb25zLgotLQotLSBw
cmVzcyBgdXBgIGFuZCBgZG93bmAgdG8gbW92ZSB1cCBhbmQgZG93biBvbgotLSB0aGUgc3RhY2ss
IHByZXNzIGB4YCBvciBgc3BhY2VgIHRvIHRvZ2dsZSBmb250Ci0tIHNpemUuIGNsaWNrIG9uIHRh
YmxlcyBpbiB0aGUgdmFyaWFibGUgdmlldyB0bwotLSBleHBhbmQgdGhlbS4KLS0KLS0gIyMgaG93
IGl0IHdvcmtzCi0tCi0tIGluIG9yZGVyIHRvIGNhdGNoIGVycm9ycyBhbmQgaW5zcGVjdCBydW50
aW1lCi0tIHN0YXRlLCB0aGlzIHNjcmlwdCByZXBsYWNlcyBgX2luaXRgLCBgX3VwZGF0ZWAKLS0g
YW5kIGBfZHJhd2AgZnVuY3Rpb25zIHdpdGggb25lcyB0aGF0IGNhbGwgdGhlCi0tIG9yaWdpbmFs
IG9uZXMgaW5zaWRlIGEgY29yb3V0aW5lLgotLQotLSB3aGVuIHRoZXJlJ3MgYW4gZXJyb3IsIGl0
IHVzZXMgbHVhJ3MgZGVidWcKLS0gbGlicmFyeSB0byBpbnNwZWN0IHRoZSBjb3JvdXRpbmUuIGEg
Y29weQotLSBvZiB0aGUgZXJyb3IgaXMgYWxzbyBwcmludGVkIHRvIHRoZSBjb25zb2xlCi0tIHdp
dGggcHJpbnRoIGlmIHlvdSdyZSBydW5uaW5nIHBpY290cm9uIGZyb20KLS0gdGhlIGNvbW1hbmQg
bGluZS4KLS0KLS0gdGhlIGZvbGxvd2luZyBkZWJ1ZyBhcGlzIGFyZSB1c2VkOgotLQotLSAtIGBk
ZWJ1Zy5nZXRpbmZvYAotLSAtIGBkZWJ1Zy5nZXRsb2NhbGAKLS0gLSBgZGVidWcuZ2V0dXB2YWx1
ZWAKLS0gLSBgZGVidWcudHJhY2ViYWNrYAotLQotLSAjIyB2ZXJzaW9uIGhpc3RvcnkgCi0tCi0t
IHZlcnNpb24gMC4wLjYKLS0gLSBvbiBlcnJvcjoKLS0gICAtIHNob3cgY3Vyc29yCi0tICAgLSBt
YWtlIHdpbmRvdyByZXNpemFibGUKLS0gLSBhdXRvbWF0aWNhbGx5IGFkanVzdCBsYXlvdXQgdG8g
d2luZG93IHNpemUKLS0gLSBzdXBwb3J0IHlpZWxkaW5nIChzaW5jZSBmZXRjaCBzb21ldGltZXMg
eWllbGRzKQotLQotLSB2ZXJzaW9uIDAuMC41Ci0tCi0tIC0gZnV0dXJlIHByb29maW5nOiBncmFj
ZWZ1bGx5IGhhbmRsZSB3aGVuCi0tICAgdmFyaW91cyBwYXJ0cyBvZiB0aGUgYGRlYnVnYCBtb2R1
bGUgYXJlbid0Ci0tICAgYXZhaWxhYmxlCi0tCi0tIHZlcnNpb24gMC4wLjQKLS0KLS0gLSBhbHNv
IGNhdGNoIGVycm9ycyBpbiBgX2luaXRgCi0tCi0tIHZlcnNpb24gMC4wLjMKLS0KLS0gLSBhdXRv
bWF0aWNhbGx5IGNob29zZSB0aGUgcmlnaHQgc3RhY2sgZnJhbWUKLS0gICBiYXNlZCBvbiB0aGUg
ZXJyb3IgbWVzc2FnZQotLSAtIG1vcmUgdGhvcm91Z2hseSBwcm90ZWN0IGZyb20gZXJyb3JzIGlu
IGVycm9yCi0tICAgZXhwbG9yZXIgaXRzZWxmCi0tCi0tIHZlcnNpb24gMC4wLjIKLS0KLS0gLSBk
b24ndCByZWdlbmVyYXRlIHN0YWNrIGluZm8gZXZlcnkgZHJhdwotLSAtIHNjcm9sbCBzdGFjayBh
bmQgdmFyaWFibGVzIGxpc3Qgd2l0aCBtb3VzZXdoZWVsCi0tIC0gY2xpY2sgb24gc3RhY2sgdG8g
c3dpdGNoIHN0YWNrIGZyYW1lcwotLSAtIGNsaWNrIG9uIHRhYmxlcyBpbiB2YXJpYWJsZXMgdmll
dyB0byBleHBhbmQgdGhlbQotLSAtIGVzY2FwZSBzdHJpbmdzIHdoZW4gcHJpbnRpbmcgdGhlbQot
LQotLSB2ZXJzaW9uIDAuMC4xCi0tCi0tIC0gYWRqdXN0IGNvbG9ycwotLSAtIGNvZGUgY2xlYW51
cAotLSAtIHVzZSBgYnRucGAgaW5zdGVhZCBvZiBga2V5cGAKLS0gLSBzbGlnaHRseSBtb3JlIHRo
b3JvdWdoIGByZXNldGAKLS0gLSBkb24ndCBzaG93IHRlbXBvcmFyaWVzCi0tCi0tIHZlcnNpb24g
MC4wLjAgKHByZXJlbGVhc2UpCi0tCi0tIC0gaW5pdGlhbCBkaXNjb3JkIGJldGEKCi0tICMjIGxp
Y2Vuc2UKLS0KLS0gQ29weXJpZ2h0IDIwMjQgS2lyYSBCb29tCi0tIAotLSBQZXJtaXNzaW9uIGlz
IGhlcmVieSBncmFudGVkLCBmcmVlIG9mIGNoYXJnZSwgdG8gYW55IHBlcnNvbiBvYnRhaW5pbmcg
YSBjb3B5Ci0tIG9mIHRoaXMgc29mdHdhcmUgYW5kIGFzc29jaWF0ZWQgZG9jdW1lbnRhdGlvbiBm
aWxlcyAodGhlIOKAnFNvZnR3YXJl4oCdKSwgdG8KLS0gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0
aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUKLS0gcmln
aHRzIHRvIHVzZSwgY29weSwgbW9kaWZ5LCBtZXJnZSwgcHVibGlzaCwgZGlzdHJpYnV0ZSwgc3Vi
bGljZW5zZSwgYW5kL29yCi0tIHNlbGwgY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBl
cm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzCi0tIGZ1cm5pc2hlZCB0byBkbyBz
bywgc3ViamVjdCB0byB0aGUgZm9sbG93aW5nIGNvbmRpdGlvbnM6Ci0tCi0tIFRoZSBhYm92ZSBj
b3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1
ZGVkIGluCi0tIGFsbCBjb3BpZXMgb3Igc3Vic3RhbnRpYWwgcG9ydGlvbnMgb2YgdGhlIFNvZnR3
YXJlLgotLSAKLS0gVEhFIFNPRlRXQVJFIElTIFBST1ZJREVEIOKAnEFTIElT4oCdLCBXSVRIT1VU
IFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTCi0tIE9SIElNUExJRUQsIElOQ0xVRElORyBC
VVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLAotLSBG
SVRORVNTIEZPUiBBIFBBUlRJQ1VMQVIgUFVSUE9TRSBBTkQgTk9OSU5GUklOR0VNRU5ULiBJTiBO
TyBFVkVOVCBTSEFMTAotLSBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFC
TEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUgotLSBMSUFCSUxJVFksIFdIRVRIRVIg
SU4gQU4gQUNUSU9OIE9GIENPTlRSQUNULCBUT1JUIE9SIE9USEVSV0lTRSwgQVJJU0lORwotLSBG
Uk9NLCBPVVQgT0YgT1IgSU4gQ09OTkVDVElPTiBXSVRIIFRIRSBTT0ZUV0FSRSBPUiBUSEUgVVNF
IE9SIE9USEVSCi0tIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS4KCi0tLS0gdXRpbCAtLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpsb2NhbCBmdW5jdGlvbiBmaWxlbmFt
ZV9vZiAocGF0aCkKICByZXR1cm4gcGF0aDptYXRjaCAoJ1teL10qJCcpCmVuZAoKbG9jYWwgZnVu
Y3Rpb24gc2FmZV90b3N0cmluZyAodmFsdWUpCiAgaWYgdHlwZSAodmFsdWUpID09ICdzdHJpbmcn
IHRoZW4KICAgIHJldHVybiBzdHJpbmcuZm9ybWF0ICgnJXEnLCB2YWx1ZSkKICBlbHNlCiAgICBs
b2NhbCBzdWNjZXNzLCB2YWx1ZV9zdHJpbmcgPSBwY2FsbCAodG9zdHJpbmcsIHZhbHVlKQogICAg
cmV0dXJuIHN1Y2Nlc3MgYW5kIHZhbHVlX3N0cmluZwogICAgICAgICAgICAgICAgICAgb3IgKCdl
cnJvciBkdXJpbmcgdG9zdHJpbmc6ICcgLi4gdG9zdHJpbmcgKHZhbHVlX3N0cmluZykpCiAgZW5k
CmVuZAoKbG9jYWwgZnVuY3Rpb24gZ2V0X2xpbmVzICh0ZXh0KQogIGxvY2FsIGxpbmVzID0ge30K
ICBmb3IgbGluZSBpbiB0ZXh0OmdtYXRjaCAoIiguLSlccj9cbiIpIGRvCiAgICB0YWJsZS5pbnNl
cnQgKGxpbmVzLCBsaW5lKQogIGVuZAogIGxvY2FsIGxhc3RfbGluZSA9IHRleHQ6bWF0Y2ggKCco
W15cbl0qKSQnKQogIGlmIGxhc3RfbGluZSBhbmQgbGFzdF9saW5lIH49ICcnIHRoZW4KICAgIHRh
YmxlLmluc2VydCAobGluZXMsIGxhc3RfbGluZSkKICBlbmQKICByZXR1cm4gbGluZXMKZW5kCgps
b2NhbCBmdW5jdGlvbiBjb21wYXJlX2tleXMgKGEsIGIpCiAgbG9jYWwgdGEgPSB0eXBlIChhLmtl
eSkKICBsb2NhbCB0YiA9IHR5cGUgKGIua2V5KQogIGlmIHRhIH49IHRiIHRoZW4KICAgIHJldHVy
biB0YSA8IHRiCiAgZW5kCiAgaWYgdGEgPT0gJ251bWJlcicgb3IgdGEgPT0gJ3N0cmluZycgdGhl
bgogICAgcmV0dXJuIGEua2V5IDwgYi5rZXkKICBlbHNlCiAgICByZXR1cm4gc2FmZV90b3N0cmlu
ZyAoYS5rZXkpIDwgc2FmZV90b3N0cmluZyAoYi5rZXkpCiAgZW5kCmVuZAoKbG9jYWwgZnVuY3Rp
b24gc29ydCAodCwgZikKICAtLSBpbnNlcnRpb24gc29ydAogIGYgPSBmIG9yIGZ1bmN0aW9uIChh
LCBiKSByZXR1cm4gYSA8IGIgZW5kCiAgZm9yIGkgPSAxLCAjdC0xIGRvCiAgICBsb2NhbCB2YWwg
PSB0W2krMV0KICAgIGxvY2FsIGogPSBpCiAgICB3aGlsZSBqID49IDEgYW5kIG5vdCBmKHRbal0s
IHZhbCkgZG8KICAgICAgdFtqKzFdID0gdFtqXQogICAgICBqID0gaiAtIDEKICAgIGVuZAogICAg
dFtqKzFdID0gdmFsCiAgZW5kCmVuZAoKbG9jYWwgZnVuY3Rpb24gYXBwcm9hY2ggKGZyb20sIHRv
KQogIHJldHVybiBmcm9tICsgKHRvIC0gZnJvbSkgKiAwLjI1CmVuZAoKbG9jYWwgZnVuY3Rpb24g
cm91bmQgKHZhbHVlKQogIHJldHVybiBtYXRoLmZsb29yICh2YWx1ZSArIDAuNSkKZW5kCgpsb2Nh
bCBmdW5jdGlvbiBwYXJzZV9tZXNzYWdlX2Zvcl9sb2NhdGlvbiAobXNnKQogIGxvY2FsIHBhdGgs
IGxpbmUsIGVyciA9IG1zZzptYXRjaCAoJ14oW146XSspOiglZCspOiguKikkJykKICByZXR1cm4g
cGF0aCwgdG9udW1iZXIgKGxpbmUpLCBlcnIKZW5kCgotLS0tIHN0YXRlIC0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKbG9jYWwgX0cgPSBfRwpsb2NhbCBlcnJvcl9tZXNz
YWdlCmxvY2FsIGVycm9yX3RocmVhZApsb2NhbCBlcnJvcl90cmFjZWJhY2sKbG9jYWwgaW5pdF9k
b25lID0gZmFsc2UKbG9jYWwgdXNlX3NtYWxsX2ZvbnQgPSBmYWxzZQpsb2NhbCBtb3VzZV93YXNf
Y2xpY2tlZCA9IGZhbHNlCgotLSBzdGFjayB2aWV3CmxvY2FsIHN0YWNrX2ZyYW1lcyA9IHt9Cmxv
Y2FsIGN1cnJlbnRfc3RhY2tfaW5kZXggPSAxCmxvY2FsIGhvdmVyZWRfc3RhY2tfaW5kZXggPSBm
YWxzZQpsb2NhbCBtb3VzZV9vdmVyX3N0YWNrID0gZmFsc2UKbG9jYWwgc3RhY2tfbWF4X3Njcm9s
bCA9IDAKbG9jYWwgc3RhY2tfc2Nyb2xsID0gMApsb2NhbCBzdGFja19zY3JvbGxfc21vb3RoID0g
MAoKLS0gdmFyaWFibGVzIHZpZXcKbG9jYWwgdmFyaWFibGVzID0ge30KbG9jYWwgaG92ZXJlZF92
YXJpYWJsZSA9IGZhbHNlCmxvY2FsIHZhcmlhYmxlc19tYXhfc2Nyb2xsID0gMApsb2NhbCB2YXJp
YWJsZXNfc2Nyb2xsID0gMApsb2NhbCB2YXJpYWJsZXNfc2Nyb2xsX3Ntb290aCA9IDAKbG9jYWwg
bW91c2Vfb3Zlcl92YXJpYWJsZXMgPSBmYWxzZQoKLS0gc291cmNlIHZpZXcKbG9jYWwgc291cmNl
X2xpbmVzID0ge30KCgotLS0tIG1haW4gZXZlbnRzIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLQoKbG9jYWwgZnVuY3Rpb24gcmVidWlsZCAoKQogIC0tIHJlYnVpbGQgc3RhY2sgZnJh
bWUgaW5mbwogIHN0YWNrX2ZyYW1lcyA9IHt9CiAgdmFyaWFibGVzID0ge30KICBzb3VyY2VfbGlu
ZXMgPSB7fQogIHZhcmlhYmxlc19zY3JvbGwgPSAwCiAgdmFyaWFibGVzX3Njcm9sbF9zbW9vdGgg
PSAwCgogIGZvciBpID0gMCwgMjAgZG8KICAgIGxvY2FsIGluZm8gPSBkZWJ1Zy5nZXRpbmZvIChl
cnJvcl90aHJlYWQsIGkpCiAgICBpZiBub3QgaW5mbyB0aGVuCiAgICAgIGJyZWFrCiAgICBlbmQK
CiAgICBpZiBpbmZvLnNob3J0X3NyYyB0aGVuCiAgICAgIHRhYmxlLmluc2VydCAoc3RhY2tfZnJh
bWVzLCB7CiAgICAgICAgZmlsZW5hbWUgPSBmaWxlbmFtZV9vZiAoaW5mby5zaG9ydF9zcmMpLAog
ICAgICAgIHBhdGggPSBpbmZvLnNob3J0X3NyYywKICAgICAgICBsaW5lID0gaW5mby5jdXJyZW50
bGluZSwKICAgICAgICBkZXB0aCA9IGksCiAgICAgICAgZm5fbmFtZSA9IChpbmZvLm5hbWUgb3Ig
KGZpbGVuYW1lX29mIChpbmZvLnNob3J0X3NyYykgLi4gJzonIC4uIHRvc3RyaW5nIChpbmZvLmxp
bmVkZWZpbmVkKSkpLAogICAgICAgIHNvdXJjZSA9IGluZm8uc291cmNlLAogICAgICB9KQogICAg
ZW5kCiAgZW5kCgogIGxvY2FsIGZyYW1lID0gc3RhY2tfZnJhbWVzIFtjdXJyZW50X3N0YWNrX2lu
ZGV4XQoKICBpZiBub3QgZnJhbWUgdGhlbgogICAgcmV0dXJuCiAgZW5kCgogIC0tIHJlYnVpbGQg
dmFyaWFibGVzCiAgZG8KICAgIGlmIGRlYnVnLmdldGxvY2FsIHRoZW4KICAgICAgbG9jYWwgbG9j
YWxfaW5kZXggPSAxCiAgICAgIHJlcGVhdAogICAgICAgIGxvY2FsIG5hbWUsIHZhbHVlID0gZGVi
dWcuZ2V0bG9jYWwgKGVycm9yX3RocmVhZCwgZnJhbWUuZGVwdGgsIGxvY2FsX2luZGV4KQogICAg
ICAgIGlmIG5hbWUgdGhlbgogICAgICAgICAgaWYgbmFtZSB_PSAnKHRlbXBvcmFyeSknIHRoZW4K
ICAgICAgICAgICAgdGFibGUuaW5zZXJ0ICh2YXJpYWJsZXMsIHsKICAgICAgICAgICAgICBrZXkg
PSBuYW1lLAogICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUsCiAgICAgICAgICAgIH0pCiAgICAg
ICAgICBlbmQKICAgICAgICAgIGxvY2FsX2luZGV4ID0gbG9jYWxfaW5kZXggKyAxCiAgICAgICAg
ZW5kCiAgICAgIHVudGlsIG5vdCBuYW1lCiAgICBlbHNlCiAgICAgIHRhYmxlLmluc2VydCAodmFy
aWFibGVzLCB7CiAgICAgICAgZXJyb3IgPSAnbm8gZGVidWcuZ2V0bG9jYWwsIGNhblwndCBzaG93
IGxvY2FscycKICAgICAgfSkKICAgIGVuZAoKICAgIGlmIGRlYnVnLmdldHVwdmFsdWUgdGhlbgog
ICAgICBsb2NhbCBpbmZvID0gZGVidWcuZ2V0aW5mbyAoZXJyb3JfdGhyZWFkLCBmcmFtZS5kZXB0
aCkKICAgICAgaWYgaW5mbyBhbmQgaW5mby5mdW5jIHRoZW4KICAgICAgICBsb2NhbCB1cHZhbHVl
X2luZGV4ID0gMQogICAgICAgIHJlcGVhdAogICAgICAgICAgbG9jYWwgbmFtZSwgdmFsdWUgPSBk
ZWJ1Zy5nZXR1cHZhbHVlIChpbmZvLmZ1bmMsIHVwdmFsdWVfaW5kZXgpCiAgICAgICAgICBpZiBu
YW1lIHRoZW4KICAgICAgICAgICAgdGFibGUuaW5zZXJ0ICh2YXJpYWJsZXMsIHsKICAgICAgICAg
ICAgICBrZXkgPSBuYW1lLAogICAgICAgICAgICAgIHZhbHVlID0gdmFsdWUsCiAgICAgICAgICAg
IH0pCiAgICAgICAgICAgIHVwdmFsdWVfaW5kZXggPSB1cHZhbHVlX2luZGV4ICsgMQogICAgICAg
ICAgZW5kCiAgICAgICAgdW50aWwgbm90IG5hbWUKICAgICAgZW5kCiAgICBlbHNlCiAgICAgIHRh
YmxlLmluc2VydCAodmFyaWFibGVzLCB7CiAgICAgICAgZXJyb3IgPSAnbm8gZGVidWcuZ2V0dXB2
YWx1ZSwgY2FuXCd0IHNob3cgdXB2YWx1ZXMnCiAgICAgIH0pCiAgICBlbmQKICBlbmQKCiAgLS0g
cmVidWlsZCBzb3VyY2UgbGluZXMKICBsb2NhbCBzb3VyY2UgPSBmcmFtZS5zb3VyY2UKICBpZiBz
b3VyY2UgdGhlbgogICAgaWYgc3RyaW5nLnN1YiAoc291cmNlLCAxLCAxKSA9PSAnQCcgdGhlbgog
ICAgICBsb2NhbCBmaWxlbmFtZSA9IHN0cmluZy5zdWIgKHNvdXJjZSwgMiwgI3NvdXJjZSkKICAg
ICAgc291cmNlID0gZmV0Y2ggKGZpbGVuYW1lKQogICAgZW5kCiAgICBpZiBzb3VyY2UgYW5kIHR5
cGUgKHNvdXJjZSkgPT0gJ3N0cmluZycgdGhlbgogICAgICBzb3VyY2VfbGluZXMgPSBnZXRfbGlu
ZXMgKHNvdXJjZSkKICAgIGVuZAogIGVuZAplbmQKCmxvY2FsIGZ1bmN0aW9uIGVycm9yX3VwZGF0
ZSAoKQogIGxvY2FsIGxhc3RfaW5kZXggPSBjdXJyZW50X3N0YWNrX2luZGV4CiAgaWYgYnRucCAo
NSkgb3Iga2V5cCAnc3BhY2UnIHRoZW4KICAgIHVzZV9zbWFsbF9mb250ID0gbm90IHVzZV9zbWFs
bF9mb250CiAgZW5kCiAgaWYgYnRucCAoMikgdGhlbgogICAgY3VycmVudF9zdGFja19pbmRleCA9
IG1hdGgubWF4ICgxLCBjdXJyZW50X3N0YWNrX2luZGV4IC0gMSkKICAgIHN0YWNrX3Njcm9sbCA9
IG1hdGgubWluIChjdXJyZW50X3N0YWNrX2luZGV4LTEsIHN0YWNrX3Njcm9sbCkKICBlbmQKICBp
ZiBidG5wICgzKSB0aGVuCiAgICBjdXJyZW50X3N0YWNrX2luZGV4ID0gbWF0aC5taW4gKCNzdGFj
a19mcmFtZXMsIGN1cnJlbnRfc3RhY2tfaW5kZXggKyAxKQogICAgc3RhY2tfc2Nyb2xsID0gbWF0
aC5tYXggKChjdXJyZW50X3N0YWNrX2luZGV4KSAtICgjc3RhY2tfZnJhbWVzIC0gc3RhY2tfbWF4
X3Njcm9sbCksIHN0YWNrX3Njcm9sbCkKICBlbmQKCiAgbG9jYWwgXywgXywgY2xpY2ssIF8sIHdo
ZWVsID0gbW91c2UgKCkKICBpZiBtb3VzZV9vdmVyX3N0YWNrIHRoZW4KICAgIHN0YWNrX3Njcm9s
bCA9IG1hdGgubWF4ICgwLCBtYXRoLm1pbiAoc3RhY2tfc2Nyb2xsIC0gd2hlZWwgKiAyLCBzdGFj
a19tYXhfc2Nyb2xsKSkKICBlbmQKICBzdGFja19zY3JvbGxfc21vb3RoID0gYXBwcm9hY2ggKHN0
YWNrX3Njcm9sbF9zbW9vdGgsIHN0YWNrX3Njcm9sbCkKICBpZiBtb3VzZV9vdmVyX3ZhcmlhYmxl
cyB0aGVuCiAgICB2YXJpYWJsZXNfc2Nyb2xsID0gbWF0aC5tYXggKDAsIG1hdGgubWluICh2YXJp
YWJsZXNfc2Nyb2xsIC0gd2hlZWwgKiAyLCB2YXJpYWJsZXNfbWF4X3Njcm9sbCkpCiAgZW5kCiAg
dmFyaWFibGVzX3Njcm9sbF9zbW9vdGggPSBhcHByb2FjaCAodmFyaWFibGVzX3Njcm9sbF9zbW9v
dGgsIHZhcmlhYmxlc19zY3JvbGwpCgogIGNsaWNrID0gY2xpY2sgfj0gMAogIGlmIGNsaWNrIGFu
ZCBub3QgbW91c2Vfd2FzX2NsaWNrZWQgdGhlbgogICAgaWYgaG92ZXJlZF9zdGFja19pbmRleCB0
aGVuCiAgICAgIGN1cnJlbnRfc3RhY2tfaW5kZXggPSBob3ZlcmVkX3N0YWNrX2luZGV4CiAgICBl
bmQKICAgIGlmIGhvdmVyZWRfdmFyaWFibGUgYW5kIHR5cGUgKGhvdmVyZWRfdmFyaWFibGUudmFs
dWUpID09ICd0YWJsZScgdGhlbgogICAgICBpZiBob3ZlcmVkX3ZhcmlhYmxlLmNvbnRlbnRzIHRo
ZW4KICAgICAgICBob3ZlcmVkX3ZhcmlhYmxlLmNvbnRlbnRzID0gbmlsCiAgICAgIGVsc2UKICAg
ICAgICBsb2NhbCBjb250ZW50cyA9IHt9CiAgICAgICAgaG92ZXJlZF92YXJpYWJsZS5jb250ZW50
cyA9IGNvbnRlbnRzCiAgICAgICAgZm9yIGssdiBpbiBwYWlycyAoaG92ZXJlZF92YXJpYWJsZS52
YWx1ZSkgZG8KICAgICAgICAgIHRhYmxlLmluc2VydCAoY29udGVudHMsIHsKICAgICAgICAgICAg
a2V5ID0gaywKICAgICAgICAgICAgdmFsdWUgPSB2LAogICAgICAgICAgfSkKICAgICAgICBlbmQK
ICAgICAgICBzb3J0IChjb250ZW50cywgY29tcGFyZV9rZXlzKQogICAgICBlbmQKICAgIGVuZAog
IGVuZAogIG1vdXNlX3dhc19jbGlja2VkID0gY2xpY2sKCiAgaWYgY3VycmVudF9zdGFja19pbmRl
eCB_PSBsYXN0X2luZGV4IHRoZW4KICAgIHJlYnVpbGQoKQogIGVuZAplbmQKCmxvY2FsIGZ1bmN0
aW9uIGVycm9yX2RyYXcgKCkKICBsb2NhbCBXID0gZ2V0X2Rpc3BsYXkoKTp3aWR0aCgpCiAgbG9j
YWwgSCA9IGdldF9kaXNwbGF5KCk6aGVpZ2h0KCkKCiAgbG9jYWwgcHJlZml4ID0gdXNlX3NtYWxs
X2ZvbnQgYW5kICdcMDE0JyBvciAnJwogIGxvY2FsIGZvbnRfaGVpZ2h0ID0gKHVzZV9zbWFsbF9m
b250IGFuZCA2IG9yIDExKQogIGxvY2FsIG14LCBteSA9IG1vdXNlKCkKICBsb2NhbCBvdmVyX3Nl
Y3Rpb24gPSBmYWxzZQogIGxvY2FsIHgwLCB5MCwgeCwgeQoKICBsb2NhbCBmdW5jdGlvbiBnb190
byAobmV3X3gsIG5ld195KQogICAgeDAsIHkwID0gbmV3X3gsIG5ld195CiAgICB4LCB5ID0geDAs
IHkwCiAgZW5kCgogIGxvY2FsIGZ1bmN0aW9uIHNlY3Rpb24gKHN4LCBzeSwgc3csIHNoKQogICAg
b3Zlcl9zZWN0aW9uID0KICAgICAgbXggPj0gc3ggYW5kIG14IDwgc3ggKyBzdyBhbmQKICAgICAg
bXkgPj0gc3kgYW5kIG15IDwgc3kgKyBzaAogICAgY2xpcCAoc3gsIHN5LCBzdywgc2gpCiAgICBn
b190byhzeCsyLCBzeSsyKQogIGVuZAoKICBsb2NhbCBmdW5jdGlvbiBwcmludF9ob3Jpem9udGFs
ICh0ZXh0LCBjb2xvcikKICAgIGxvY2FsIG5ld194LCBfbmV3X3kgPSBwcmludCAocHJlZml4IC4u
IHRleHQsIHgsIHksIGNvbG9yKQogICAgeCA9IG5ld194CiAgZW5kCgogIGxvY2FsIGZ1bmN0aW9u
IHByaW50X2xpbmUgKHRleHQsIGNvbG9yKQogICAgbG9jYWwgX25ld194LCBuZXdfeSA9IHByaW50
IChwcmVmaXggLi4gdGV4dCwgeCwgeSwgY29sb3IpCiAgICB4ID0geDAKICAgIHkgPSBuZXdfeQog
IGVuZAoKICAtLSBkcmF3IHNldHVwCiAgY2xzICgwKQogIC0tIGxpZ2h0ZXIgZGFyayBncmF5IGZv
ciByZWFkYWJpbGl0eQogIHBhbCAoNSwgMHhmZjcwNzA3MCwgMikKICBjb2xvciAoNSkKCiAgLS0g
ZXJyb3IgbWVzc2FnZQogIHNlY3Rpb24gKDAsIDAsIFcsIEgvMikKICBtb3VzZV9vdmVyX3N0YWNr
ID0gb3Zlcl9zZWN0aW9uCgogIGxvY2FsIGxvY19wYXRoLCBsb2NfbGluZSwgZXJyID0gcGFyc2Vf
bWVzc2FnZV9mb3JfbG9jYXRpb24gKGVycm9yX21lc3NhZ2UpCiAgaWYgbG9jX3BhdGggdGhlbgog
ICAgcHJpbnRfbGluZSAoJ2Vycm9yIGF0ICcgLi4gbG9jX3BhdGggLi4gJzonIC4uIGxvY19saW5l
IC4uICc6JywgNikKICAgIHByaW50X2xpbmUgKCcgICcgLi4gZXJyLCA4KQogIGVsc2UKICAgIHBy
aW50X2xpbmUgKCdlcnJvcjonLCA2KQogICAgcHJpbnRfbGluZSAoJyAgJyAuLiBlcnJvcl9tZXNz
YWdlLCA4KQogIGVuZAoKICAtLSBzdGFjayBmcmFtZXMKICBwcmludF9saW5lICgnc3RhY2s6Jywg
NikKICBzZWN0aW9uICgwLCB5LCBXLCBILzIteSkKICBsb2NhbCBzdGFja190b3BfeSA9IHkKICB5
ID0geSAtIHJvdW5kIChzdGFja19zY3JvbGxfc21vb3RoICogZm9udF9oZWlnaHQpCiAgbG9jYWwg
bGFzdF9ob3ZlcmVkX3N0YWNrX2luZGV4ID0gaG92ZXJlZF9zdGFja19pbmRleAogIGhvdmVyZWRf
c3RhY2tfaW5kZXggPSBmYWxzZQogIGZvciBpLCBmcmFtZSBpbiBpcGFpcnMgKHN0YWNrX2ZyYW1l
cykgZG8KICAgIGNvbG9yIChsYXN0X2hvdmVyZWRfc3RhY2tfaW5kZXggPT0gaSBhbmQgNyBvcgog
ICAgICAgICAgIGN1cnJlbnRfc3RhY2tfaW5kZXggPT0gaSBhbmQgNiBvciA1KQoKICAgbG9jYWwg
eV9iZWZvcmUgPSB5CiAgICBwcmludF9saW5lIChzdHJpbmcuZm9ybWF0ICgnICAlczolZCBpbiBm
dW5jdGlvbiAlcycsCiAgICAgIGZyYW1lLmZpbGVuYW1lLCBmcmFtZS5saW5lLCBmcmFtZS5mbl9u
YW1lICkpCiAgICBpZiBvdmVyX3NlY3Rpb24gdGhlbgogICAgICBpZiBteSA_PSB5X2JlZm9yZSBh
bmQgbXkgPCB5IHRoZW4KICAgICAgICBob3ZlcmVkX3N0YWNrX2luZGV4ID0gaQogICAgICBlbmQK
ICAgIGVuZAogIGVuZAogIHN0YWNrX21heF9zY3JvbGwgPSAjc3RhY2tfZnJhbWVzIC0gKEgvMiAt
IHN0YWNrX3RvcF95KSAvIGZvbnRfaGVpZ2h0CgogIGxvY2FsIGZyYW1lID0gc3RhY2tfZnJhbWVz
IFtjdXJyZW50X3N0YWNrX2luZGV4XQogIGlmIG5vdCBmcmFtZSB0aGVuCiAgICByZXR1cm4KICBl
bmQKCiAgLS0gdmFyaWFibGVzCiAgc2VjdGlvbiAoMCwgSC8yLCBXLzIsIEgvMikKICBtb3VzZV9v
dmVyX3ZhcmlhYmxlcyA9IG92ZXJfc2VjdGlvbgogIHByaW50X2xpbmUgKCd2YXJpYWJsZXM6Jywg
NikKICBzZWN0aW9uICgwLCB5LCBXLzIsIEgteSkKICBsb2NhbCB2YXJpYWJsZXNfdG9wX3kgPSB5
CiAgeSA9IHkgLSByb3VuZCAodmFyaWFibGVzX3Njcm9sbF9zbW9vdGggKiBmb250X2hlaWdodCkK
ICBsb2NhbCBsYXN0X2hvdmVyZWRfdmFyaWFibGUgPSBob3ZlcmVkX3ZhcmlhYmxlCiAgaG92ZXJl
ZF92YXJpYWJsZSA9IGZhbHNlCiAgbG9jYWwgdmFyaWFibGVfY291bnQgPSAwCiAgbG9jYWwgZnVu
Y3Rpb24gZHJhd192YXJpYWJsZSAodmFyaWFibGUsIGluZGVudCkKICAgIHZhcmlhYmxlX2NvdW50
ID0gdmFyaWFibGVfY291bnQgKyAxCiAgICBsb2NhbCBob3ZlcmVkID0gdmFyaWFibGUgPT0gbGFz
dF9ob3ZlcmVkX3ZhcmlhYmxlCiAgICBsb2NhbCB5X2JlZm9yZSA9IHkKICAgIGlmIHZhcmlhYmxl
LmVycm9yIHRoZW4KICAgICAgcHJpbnRfbGluZSAoJyAgJyAuLiB2YXJpYWJsZS5lcnJvciwgOCkK
ICAgIGVsc2UKICAgICAgcHJpbnRfaG9yaXpvbnRhbCAoaW5kZW50IC4uIHZhcmlhYmxlLmtleSwg
aG92ZXJlZCBhbmQgNyBvciA2KQogICAgICBwcmludF9ob3Jpem9udGFsICgnOiAnLCB2YXJpYWJs
ZSA9PSBsYXN0X2hvdmVyZWRfdmFyaWFibGUgYW5kIDcgb3IgNSkKICAgICAgcHJpbnRfbGluZSAo
c2FmZV90b3N0cmluZyh2YXJpYWJsZS52YWx1ZSkpCiAgICBlbmQKCiAgICBpZiBvdmVyX3NlY3Rp
b24gYW5kIHR5cGUgKHZhcmlhYmxlLnZhbHVlKSA9PSAndGFibGUnIHRoZW4KICAgICAgaWYgbXgg
Pj0gMCBhbmQgbXggPCBXLzIgYW5kIG15ID49IHlfYmVmb3JlIGFuZCBteSA8IHkgdGhlbgogICAg
ICAgIGhvdmVyZWRfdmFyaWFibGUgPSB2YXJpYWJsZQogICAgICBlbmQKICAgIGVuZAoKICAgIGlm
IHZhcmlhYmxlLmNvbnRlbnRzIHRoZW4KICAgICAgZm9yIF8sIHYgaW4gaXBhaXJzICh2YXJpYWJs
ZS5jb250ZW50cykgZG8KICAgICAgICBkcmF3X3ZhcmlhYmxlICh2LCBpbmRlbnQgLi4gJyAgJykK
ICAgICAgZW5kCiAgICBlbmQKICBlbmQKICBmb3IgXywgdmFyaWFibGUgaW4gaXBhaXJzICh2YXJp
YWJsZXMpIGRvCiAgICBkcmF3X3ZhcmlhYmxlICh2YXJpYWJsZSwgJyAgJykKICBlbmQKICB2YXJp
YWJsZXNfbWF4X3Njcm9sbCA9IHZhcmlhYmxlX2NvdW50IC0gKEggLSB2YXJpYWJsZXNfdG9wX3kp
IC8gZm9udF9oZWlnaHQKCiAgLS0gc291cmNlCiAgc2VjdGlvbiAoVy8yLCBILzIsIFcvMiwgSC8y
KQogIHByaW50X2xpbmUgKCdzb3VyY2Ugb2YgJyAuLiBmcmFtZS5wYXRoIC4uICc6JywgNikKICBs
b2NhbCBjb250ZXh0ID0gdXNlX3NtYWxsX2ZvbnQgYW5kIDEwIG9yIDUKICBsb2NhbCBpX21pbiA9
IG1hdGgubWF4ICgxLCBmcmFtZS5saW5lIC0gY29udGV4dCkKICBsb2NhbCBpX21heCA9IG1hdGgu
bWluICgjc291cmNlX2xpbmVzLCBmcmFtZS5saW5lICsgY29udGV4dCkKICBmb3IgaSA9IGlfbWlu
LCBpX21heCBkbwogICAgY29sb3IgKGkgPT0gZnJhbWUubGluZSBhbmQgNiBvciA1KQogICAgcHJp
bnRfaG9yaXpvbnRhbCAoc3RyaW5nLmZvcm1hdCAoJyU0ZCAnLCBpKSkKICAgIHByaW50X2xpbmUg
KHNvdXJjZV9saW5lcyBbaV0pCiAgZW5kCgogIGNsaXAgKCkKZW5kCgotLS0tIHRha2luZyBvdmVy
IGR1cmluZyBlcnJvcnMgLS0tLS0tLS0tLS0tLS0tLS0tLQoKbG9jYWwgZnVuY3Rpb24gcmVzZXQg
KCkKICAtLSBiYXNlZCBvbiByZXNldCgpIGZyb20gL3N5c3RlbS9saWIvaGVhZC5sdWEKICAtLSBz
ZWUgdGhhdCBmbiBmb3IgaW5mbwogIHdpbmRvdyB7CiAgICBjdXJzb3IgPSAxLAogICAgcmVzaXph
YmxlID0gdHJ1ZSwKICB9CiAgbm90ZSAoKQogIC0tIHBpY290cm9uIHNlZ2ZhdWx0cyBpZiB3ZSBj
YWxsIGNsaXAoKSBkdXJpbmcgaW5pdAogIGlmIGluaXRfZG9uZSB0aGVuCiAgICBjbGlwICgpCiAg
ZW5kCiAgY2FtZXJhICgpCiAgcGFsICgpCiAgcGFsdCAoKQogIG1lbXNldCAoMHg1NTFmLCAwLCA5
KQogIHBva2UgKDB4NTUwOCwgMHgzZikKICBwb2tlICgweDU1MDksIDB4M2YpCiAgcG9rZSAoMHg1
NTBhLCAweDNmKQogIHBva2UgKDB4NTUwYiwgMHgwMCkKICBjb2xvciAoNikKICBmaWxscCAoKQog
IHBva2UgKDB4NWY1NiwgMHg0MCkKICBwb2tlICgweDVmNTcsIDB4NTYpCiAgcG9rZSAoMHg0MDAw
LCBnZXQgKGZldGNoIi9zeXN0ZW0vZm9udHMvbGlsLmZvbnQiKSkKICBwb2tlICgweDU2MDAsIGdl
dCAoZmV0Y2giL3N5c3RlbS9mb250cy9wOC5mb250IikpCiAgcG9rZSAoMHg1NjA2LCBwZWVrICgw
eDU2MDApICogNCkKICBwb2tlICgweDU2MDUsIDB4MikKICBwb2tlICgweDVmMjgsIDY0KQogIHBv
a2UgKDB4NWYyOSwgNjQpCmVuZAoKbG9jYWwgZnVuY3Rpb24gb25fZXJyb3IgKHRocmVhZCwgbWVz
c2FnZSkKICAtLSBkbyB0aGlzIGZpcnN0IGluIGNhc2Ugd2UgaGl0IGFub3RoZXIgZXJyb3IKICBl
cnJvcl90cmFjZWJhY2sgPSBkZWJ1Zy50cmFjZWJhY2sgKHRocmVhZCwgbWVzc2FnZSkKICBwcmlu
dGggKGVycm9yX3RyYWNlYmFjaykKCiAgZXJyb3JfdGhyZWFkID0gdGhyZWFkCiAgZXJyb3JfbWVz
c2FnZSA9IHRvc3RyaW5nIChtZXNzYWdlKQogIHJlc2V0ICgpCiAgcmVidWlsZCAoKQogIC0tIGp1
bXAgdG8gdGhlIHByb3BlciBzdGFjayBmcmFtZSBpZiB3ZSBjYW4KICBsb2NhbCBsb2NfcGF0aCwg
bG9jX2xpbmUgPSBwYXJzZV9tZXNzYWdlX2Zvcl9sb2NhdGlvbiAoZXJyb3JfbWVzc2FnZSkKICBm
b3IgaSwgZnJhbWUgaW4gaXBhaXJzIChzdGFja19mcmFtZXMpIGRvCiAgICBpZiBmcmFtZS5wYXRo
ID09IGxvY19wYXRoIGFuZCBmcmFtZS5saW5lID09IGxvY19saW5lIHRoZW4KICAgICAgY3VycmVu
dF9zdGFja19pbmRleCA9IGkKICAgICAgcmVidWlsZCAoKQogICAgICBicmVhawogICAgZW5kCiAg
ZW5kCmVuZAoKLS0tLSBpbnN0YWxsIG1haW4gZXZlbnRzIHRoYXQgY2F0Y2ggZXJyb3JzIC0tLS0t
LS0KCmxvY2FsIHVzZXJfaW5pdCA9IHJhd2dldCAoX0csICdfaW5pdCcpCmxvY2FsIHVzZXJfdXBk
YXRlID0gcmF3Z2V0IChfRywgJ191cGRhdGUnKQpsb2NhbCB1c2VyX2RyYXcgPSByYXdnZXQgKF9H
LCAnX2RyYXcnKQoKYXNzZXJ0ICh1c2VyX2RyYXcgYW5kIHVzZXJfdXBkYXRlLAogICdwbGVhc2Ug
aW5jbHVkZSBlcnJvcl9leHBsb3JlciBhZnRlciBkZWZpbmluZyBib3RoIF91cGRhdGUgYW5kIF9k
cmF3JykKCmlmIG5vdCByYXdnZXQgKF9HLCAnZGVidWcnKSBvciBub3QgZGVidWcudHJhY2ViYWNr
IG9yIG5vdCBkZWJ1Zy5nZXRpbmZvIHRoZW4KICBwcmludGggJ2Vycm9yIGV4cGxvcmVyOiBkZWJ1
ZyBtb2R1bGUgbm90IGF2YWlsYWJsZSwgZXJyb3IgZXhwbG9yZXIgd2lsbCBiZSBkaXNhYmxlZCcK
ICByZXR1cm4KZW5kCgpsb2NhbCBmdW5jdGlvbiBjYWxsX2Vycm9yX2V2ZW50IChmbiwgLi4uKQog
IC0tIGlmIHRoZXJlJ3MgYW4gZXJyb3IgaW4gb3VyIHVwZGF0ZSBvciBkcmF3LCB0aHJvdyB0aGUK
ICAtLSBvcmlnaW5hbCBlcnJvciBhcyB3ZWxsIGFzIHRoZSBuZXcgZXJyb3IKICBsb2NhbCBzdWNj
ZXNzLCBlcnIgPSBwY2FsbCAoZm4sIC4uLikKICBpZiBub3Qgc3VjY2VzcyB0aGVuCiAgICBlcnJv
ciAoZXJyb3JfdHJhY2ViYWNrIC4uICdcblxuZXJyb3IgZHVyaW5nIGVycm9yIGhhbmRsaW5nOiAn
IC4uIHRvc3RyaW5nIChlcnIpKQogIGVuZAplbmQKCmxvY2FsIGZ1bmN0aW9uIGNhbGxfcHJvdGVj
dGVkIChmbikKICAtLSBuZWVkIHRvIHVzZSBjb3Jlc3VtZSBldGMuIGFuZCBub3QgY29yb3V0aW5l
LnJlc3VtZSBldGMuCiAgLS0gZm9yIHBpY290cm9uIGNvbXBhdGliaWxpdHkKICBsb2NhbCB0aHJl
YWQgPSBjb2NyZWF0ZSAoZm4pCiAgbG9jYWwgc3VjY2VzcywgbWVzc2FnZSA9IGNvcmVzdW1lKHRo
cmVhZCkKICB3aGlsZSBjb3N0YXR1cyAodGhyZWFkKSB_PSAnZGVhZCcgZG8KICAgIHlpZWxkICgp
CiAgICBzdWNjZXNzLCBtZXNzYWdlID0gY29yZXN1bWUgKHRocmVhZCkKICBlbmQKICBpZiBub3Qg
c3VjY2VzcyB0aGVuCiAgICBjYWxsX2Vycm9yX2V2ZW50IChvbl9lcnJvciwgdGhyZWFkLCBtZXNz
YWdlKQogIGVuZAplbmQKCmlmIHVzZXJfaW5pdCB0aGVuCiAgZnVuY3Rpb24gX2luaXQgKCkKICAg
IGNhbGxfcHJvdGVjdGVkICh1c2VyX2luaXQpCiAgICBpbml0X2RvbmUgPSB0cnVlCiAgZW5kCmVs
c2UKICBpbml0X2RvbmUgPSB0cnVlCmVuZAoKZnVuY3Rpb24gX3VwZGF0ZSAoKQogIGlmIGVycm9y
X3RocmVhZCB0aGVuCiAgICBjYWxsX2Vycm9yX2V2ZW50IChlcnJvcl91cGRhdGUpCiAgZWxzZQog
ICAgY2FsbF9wcm90ZWN0ZWQgKHVzZXJfdXBkYXRlKQogIGVuZAplbmQKCmZ1bmN0aW9uIF9kcmF3
ICgpCiAgaWYgZXJyb3JfdGhyZWFkIHRoZW4KICAgIGNhbGxfZXJyb3JfZXZlbnQgKGVycm9yX2Ry
YXcpCiAgZWxzZQogICAgY2FsbF9wcm90ZWN0ZWQgKHVzZXJfZHJhdykKICBlbmQKZW5k
:: free_part.lua
--[[pod_format="raw",created="2025-05-19 18:14:49",modified="2025-05-20 17:53:00",revision=433]]
function new_free_part(position,part)
	return{
		_position=position,
		_speed=new_point(0,0),
		part=part,
		init=function(self)
			self.part._position=self._position
			self.part:init()
			self._speed=	self._speed:randomize(new_point(-0.1,1))
		end,
		update=function(self)  			
			self._position+=self._speed --apply velocity
			self.part._position=self._position
			if(is_point_on_screen(self._position)==false) then
				self:kill()
			end	
		
		end,
		draw=function(self)	 	 	
	    	self.part:draw()
		end,
		kill=function(self)
			del(game.free_parts,self) --fix
		end
	}
end

:: game.lua
--[[pod_format="raw",created="2025-05-19 15:03:03",modified="2025-06-07 00:31:58",revision=2247]]
function new_game()
	return{
		_actions = {},
		_ship,
		free_parts={},
		asteroids={},
		pirates={},
		bullets={},
		particle_systems={},
		_director=nil,
		_light_road,
		bank=0,
		init=function(self)
			self._ship=new_ship(new_point(480/2,270/2+30))
			self._light_road= new_lightroad()
						
			self._director:init()	
			
			self.sprites1=fetch("./gfx/0.gfx")	
			self._ship:init()	
			music(0,0,0x1|0x2|0x4|0x8)
		end,
		update=function(self)
			camera_helper:update_camera()
			self._light_road:update()
			self._ship:update()
			
			foreach(self.particle_systems, function(particle_system)
    			particle_system:update()
 	 		end)	
		
			foreach(self.free_parts, function(part)
	    		part:update()
	 	 	end)
	 	 	foreach(self.asteroids, function(asteroid)
	    		asteroid:update()
	 	 	end)
	 	 	foreach(self.pirates, function(pirate)
	    		pirate:update()
	 	 	end)
	 	 	foreach(self.bullets, function(bullet)
	    		bullet:update()
	 	 	end)
			self._director:update()
		 	foreach(self._actions, function(action)
			   if costatus(action) then
			      coresume(action)
			   else
			      del(self.actions,action)
				end
			end)
	 		
		end,
		draw=function(self)
			cls()
			self._light_road:draw()
			foreach(self.particle_systems, function(particle_system)
   	 		particle_system:draw()
	 	 	end)
			foreach(self.free_parts, function(part)
	    		part:draw()
	 	 	end)
	 	 	foreach(self.asteroids, function(asteroid)
	    		asteroid:draw()
	 	 	end)
	 	 	foreach(self.pirates, function(pirate)
	    		pirate:draw()
	 	 	end)
	 	 	foreach(self.bullets, function(bullet)
	    		bullet:draw()
	 	 	end)
			self._ship:draw()
			self._director:draw()
			print_right("$"..format_money(self._ship.worth+self.bank).."/".. format_money(self._director.goal) ,12,10)
		
		end,
		addAction=function(self,action)
			add(self._actions,cocreate(action)) 
		end,
		death=function(self)
			self:addAction(function()
				for i=1,60*2 do
					yield()
				end
				gameover()
			end)
		end,
		finish_level=function(self)
			if(self._ship.worth+self.bank>=self._director.goal) then
				self.bank+=self._ship.worth-self._director.goal
				next_screen()
			else
				gameover()
			end
			
		end		
				
	}
end
:: help.lua
--[[pod_format="raw",created="2025-05-24 18:42:03",modified="2025-06-07 00:31:58",revision=593]]
function new_help()
	return{
	sprites,
	init=function(self)
		camera_helper:set_camera(new_point(0,0),true)
		self.sprites=	fetch("./gfx/0.gfx")	
	end,
	update=function(self)
		camera_helper:update_camera()
		if(btnp()>0) then
		  next_screen()
		end

	end,
	draw=function(self)
		cls()
		print_centered("Use \131 \139 \145 \148 to control"
		,10,7)
		spr(self.sprites[1].bmp,310,5)

		spr(self.sprites[2].bmp,10,25)
		print("Move Faster",30,30)
		
		spr(self.sprites[3].bmp,10,45)
		print("Shoot stuff down",30,50)	
	
		spr(self.sprites[4].bmp,10,65)
		print("Immune to small damage",30,70)
		
		spr(self.sprites[5].bmp,10,85)
		print("Shield your ship",30,90)
		
		spr(self.sprites[12].bmp,10,105)
		print("Easy connections",30,110)

		spr(self.sprites[65].bmp,240,25)
		print("Only hurts open connectots",260,30)
		
		spr(self.sprites[64].bmp,240,45)
		print("Can be shot down",260,50)
		
		spr(self.sprites[9].bmp,240,65)
		print("Common cargo !fragile!",260,70)
		
		spr(self.sprites[10].bmp,240,85)
		print("Rare cargo !heavy!",260,90)
		
		spr(self.sprites[11].bmp,240,105)
		print("Volatile cargo !danger!",260,110)
		
		print_centered("Use connectors to pick up parts",240)
		spr(self.sprites[32].bmp,13*16-8,250)
		spr(self.sprites[33].bmp,15*16-8,250)
		spr(self.sprites[34].bmp,17*16-8,250)
				
	end}
	
end
:: helpers.lua
b64$LS1bW3BvZF9mb3JtYXQ9InJhdyIsY3JlYXRlZD0iMjAyNS0wNS0xOSAxNToxMzo1MyIsbW9k
aWZpZWQ9IjIwMjUtMDYtMDcgMDA6MzE6NTgiLHJldmlzaW9uPTEzODRdXQpmdW5jdGlvbiBzbShh
KQoJcmV0dXJuIHNldG1ldGF0YWJsZShhLGEpCmVuZApmdW5jdGlvbiByYW5kb20obikKCWlmKG4_
MCkgdGhlbiAKCQlyZXR1cm4gcm5kKCkqbgoJZWxzZQoJCXJldHVybiAtbitybmQoKSpuKjIgCgll
bmQKZW5kCmZ1bmN0aW9uIHBpY2tfcmFuZG9tKGFycikKCWlmIGFycj09bmlsbCB0aGVuIHJldHVy
biBuaWwgZW5kCglpZiAjYXJyID09IDAgdGhlbiByZXR1cm4gbmlsIGVuZAoJcmV0dXJuIGFycltm
bHIocm5kKCNhcnIpKSArIDFdCmVuZApmdW5jdGlvbiBibG9ja19jb2xsaXNpb24ocG9pbnRBLCBz
aXplQSwgcG9pbnRCLCBzaXplQikKCWxvY2FsIGF4MSwgYXkxID0gcG9pbnRBLngsIHBvaW50QS55
Cglsb2NhbCBheDIsIGF5MiA9IGF4MSArIHNpemVBLngsIGF5MSArIHNpemVBLnkKCglsb2NhbCBi
eDEsIGJ5MSA9IHBvaW50Qi54LCBwb2ludEIueQoJbG9jYWwgYngyLCBieTIgPSBieDEgKyBzaXpl
Qi54LCBieTEgKyBzaXplQi55CgoJaWYgYXgxIDwgYngyIGFuZCBheDIgPiBieDEgYW5kIGF5MSA8
IGJ5MiBhbmQgYXkyID4gYnkxIHRoZW4KCQlyZXR1cm4gcG9pbnRBLXBvaW50QgoJZW5kCgoJcmV0
dXJuIG5pbAplbmQKZnVuY3Rpb24gY2FyZGluYWxfZGlyZWN0aW9uKHYsIHRocmVzaG9sZCkKCXRo
cmVzaG9sZCA9IHRocmVzaG9sZCBvciAxICAtLSBtaW5pbXVtIGRpZmZlcmVuY2UgYmV0d2VlbiBh
eGVzCgoJbG9jYWwgYWJzX3ggPSBhYnModi54KQoJbG9jYWwgYWJzX3kgPSBhYnModi55KQoJaWYg
YWJzX3ggPiBhYnNfeSArIHRocmVzaG9sZCB0aGVuCgkJcmV0dXJuIG5ld19wb2ludChzaWduKHYu
eCksIDApCgllbHNlaWYgYWJzX3kgPiBhYnNfeCArIHRocmVzaG9sZCB0aGVuCgkJcmV0dXJuIG5l
d19wb2ludCgwLCBzaWduKHYueSkpCgllbHNlCgkJcmV0dXJuIG5pbCAgLS0gdG9vIGRpYWdvbmFs
LCBkb24ndCBhdHRhY2gKCWVuZAplbmQKZnVuY3Rpb24gc2lnbihuKQoJaWYgbiA_IDAgdGhlbiBy
ZXR1cm4gMQoJZWxzZWlmIG4gPCAwIHRoZW4gcmV0dXJuIC0xCgllbHNlIHJldHVybiAwCgllbmQK
ZW5kCmZ1bmN0aW9uIGdldF9zdHJpbmdfd2lkdGgocykKCWxvY2FsIHdpZHRoPXByaW50KHMsLTEw
MDAsMCkKCXByaW50KCIiLDAsMCkKCXJldHVybiB3aWR0aCsxMDAwCmVuZApmdW5jdGlvbiBwcmlu
dF9jZW50ZXJlZCh0ZXh0LCB5LCBjb2wpCgljb2wgPSBjb2wgb3IgY29sb3JzLndoaXRlCglsb2Nh
bCB0ZXh0X3dpZHRoID1nZXRfc3RyaW5nX3dpZHRoKHRleHQpCglsb2NhbCB4ID0gKHNjcmVlbldp
ZHRoIC0gdGV4dF93aWR0aCkgXCAyCglwcmludCh0ZXh0LHgrY2FtZXJhX2hlbHBlcjpnZXRfY2Ft
ZXJhKCkueCwgeStjYW1lcmFfaGVscGVyOmdldF9jYW1lcmEoKS55LCBjb2wpCmVuZApmdW5jdGlv
biBwcmludF9yaWdodCh0ZXh0LCB5LCBjb2wpCgljb2wgPSBjb2wgb3IgIGNvbG9ycy53aGl0ZQoJ
bG9jYWwgdGV4dF93aWR0aCA9Z2V0X3N0cmluZ193aWR0aCh0ZXh0KQoJbG9jYWwgeCA9IHNjcmVl
bldpZHRoIC0gdGV4dF93aWR0aAoJcHJpbnQodGV4dCwgeCtjYW1lcmFfaGVscGVyOmdldF9jYW1l
cmEoKS54LCB5LCBjb2wpCmVuZApmdW5jdGlvbiBpc19wb2ludF9vbl9zY3JlZW4ocG9pbnQpCgkK
CWxvY2FsIGNhbWVyYV9wb3M9Y2FtZXJhX2hlbHBlcjpnZXRfY2FtZXJhKCkKCQoJcmV0dXJuICgK
CQlwb2ludC54ID49IGNhbWVyYV9wb3MueCAtIHRpbGVTaXplIGFuZCBwb2ludC54IDwgY2FtZXJh
X3Bvcy54ICsgc2NyZWVuV2lkdGggYW5kCgkJcG9pbnQueSA_PSBjYW1lcmFfcG9zLnkgLSB0aWxl
U2l6ZSBhbmQgcG9pbnQueSA8IGNhbWVyYV9wb3MueSArIHNjcmVlbkhlaWdodAoJKQplbmQKY29s
b3JzID0gewoJYmxhY2sgICAgICAgID0gMCwKCWRhcmtfYmx1ZSAgICA9IDEsCglkYXJrX3B1cnBs
ZSAgPSAyLAoJZGFya19ncmVlbiAgID0gMywKCWJyb3duICAgICAgICA9IDQsCglkYXJrX2dyYXkg
ICAgPSA1LAoJbGlnaHRfZ3JheSAgID0gNiwKCXdoaXRlICAgICAgICA9IDcsCglyZWQgICAgICAg
ICAgPSA4LAoJb3JhbmdlICAgICAgID0gOSwKCXllbGxvdyAgICAgICA9IDEwLAoJZ3JlZW4gICAg
ICAgID0gMTEsCglibHVlICAgICAgICAgPSAxMiwKCWluZGlnbyAgICAgICA9IDEzLAoJcGluayAg
ICAgICAgID0gMTQsCglwZWFjaCAgICAgICAgPSAxNSwKCgktLSBFeHRlbmRlZCBjb2xvcnMgKDE2
4oCTNjMpIG1heSB2YXJ5IGJ5IHBhbGV0dGUgc2V0dXAsIGJ1dCBoZXJlJ3MgYSB1c2VmdWwgZGVm
YXVsdCBzZXQ6Cglyb3NlICAgICAgICAgPSAxNiwKCXNhbG1vbiAgICAgICA9IDE3LAoJYmVpZ2Ug
ICAgICAgID0gMTgsCglsaWdodF95ZWxsb3cgPSAxOSwKCWxpZ2h0X2dyZWVuICA9IDIwLAoJc2Vh
Zm9hbSAgICAgID0gMjEsCglza3lfYmx1ZSAgICAgPSAyMiwKCXBlcml3aW5rbGUgICA9IDIzLAoJ
bGF2ZW5kZXIgICAgID0gMjQsCglsaWdodF9waW5rICAgPSAyNSwKCWRhcmtfYnJvd24gPTI4Cgkt
LSAuLi55b3UgY2FuIGNvbnRpbnVlIGFkZGluZyBhcyBuZWVkZWQKfQpuZXdfdGltZXI9ZnVuY3Rp
b24oc3Bhd25fcmF0ZSxzdGFydCxhY3Rpb24pCglyZXR1cm57CglzcGF3bl9yYXRlPXNwYXduX3Jh
dGUsCgl0aW1lcj1zdGFydCwKCWFjdGlvbj1hY3Rpb24sCgl1cGRhdGU9ZnVuY3Rpb24oc2VsZixv
dGhlcikKCQlpZigJc2VsZi5hY3Rpb249PW5pbCkgdGhlbgoJCQlyZXR1cm4KCQllbmQKCgkJaWYo
c2VsZi5zcGF3bl9yYXRlPT0wKSB0aGVuCgkJCXJldHVybgoJCWVsc2VpZihzZWxmLnNwYXduX3Jh
dGU_MSkJdGhlbgkKCQkJaWYoc2VsZi50aW1lcj5zZWxmLnNwYXduX3JhdGUpIHRoZW4KCQkJCXNl
bGYuYWN0aW9uKG90aGVyKQoJCQkJc2VsZi50aW1lcj0wCgkJCWVsc2UKCQkJCXNlbGYudGltZXIr
PTEKCQkJZW5kCgkJZWxzZQoJCQlmb3IgaT0xLDEvc2VsZi5zcGF3bl9yYXRlLDEgZG8KCQkJCXNl
bGYuYWN0aW9uKG90aGVyKQoJCQllbmQKCQllbmQKCWVuZAoJfQplbmQKCmZ1bmN0aW9uIHJhbmRv
bV9vZmZzY3JlZW5fcG9pbnQoKQoJbG9jYWwgc2lkZSA9IGZscihybmQoNCkpICAtLSBwaWNrIGEg
cmFuZG9tIHNpZGU6IDA9dG9wLCAxPWJvdHRvbSwgMj1sZWZ0LCAzPXJpZ2h0CglpZiBzaWRlID09
IDAgdGhlbgoJCS0tIFRvcDogeSA9IC10aWxlU2l6ZQoJCXJldHVybiBuZXdfcG9pbnQoZmxyKHJu
ZChzY3JlZW5XaWR0aCAvIHRpbGVTaXplKSkgKiB0aWxlU2l6ZSwgLXRpbGVTaXplKQoJZWxzZWlm
IHNpZGUgPT0gMSB0aGVuCgkJLS0gQm90dG9tOiB5ID0gc2NyZWVuSGVpZ2h0CgkJcmV0dXJuIG5l
d19wb2ludChmbHIocm5kKHNjcmVlbldpZHRoIC8gdGlsZVNpemUpKSAqIHRpbGVTaXplLCBzY3Jl
ZW5IZWlnaHQpCgllbHNlaWYgc2lkZSA9PSAyIHRoZW4KCQktLSBMZWZ0OiB4ID0gLXRpbGVTaXpl
CgkJcmV0dXJuIG5ld19wb2ludCgtdGlsZVNpemUsIGZscihybmQoc2NyZWVuSGVpZ2h0IC8gdGls
ZVNpemUpKSAqIHRpbGVTaXplKQoJZWxzZQoJCS0tIFJpZ2h0OiB4ID0gc2NyZWVuV2lkdGgKCQly
ZXR1cm4gbmV3X3BvaW50KHNjcmVlbldpZHRoLCBmbHIocm5kKHNjcmVlbkhlaWdodCAvIHRpbGVT
aXplKSkgKiB0aWxlU2l6ZSkKCWVuZAplbmQKZnVuY3Rpb24gcmFuZG9tX29uc2NyZWVuX3BvaW50
KCkKCWxvY2FsIHggPSBmbHIocm5kKHNjcmVlbldpZHRoKSkgCglsb2NhbCB5ID0gZmxyKHJuZChz
Y3JlZW5IZWlnaHQpKQoJcmV0dXJuIG5ld19wb2ludCh4LCB5KQplbmQKCmZ1bmN0aW9uIGZvcm1h
dF9tb25leShuKQoJaWYobj09MCkgdGhlbgoJCXJldHVybiAiMCIKCWVsc2UKCQlyZXR1cm4gbi4u
IiwwMDAiCgllbmQKZW5k
:: include.lua
--[[pod_format="raw",created="2025-05-19 15:00:08",modified="2025-06-07 00:31:58",revision=1428]]
include "lib.lua"
include "point.lua"
include "helpers.lua"
include "sfx.lua"
include "camera.lua"
include "particle_system.lua"
include "parts.lua"
include "input.lua"
include "ship.lua"
include "free_part.lua"
include "asteroid.lua"
include "pirate.lua"
include "lightroad.lua"
include "screen.lua"
include "levels.lua"
include "start.lua"
include "game.lua"
include "director.lua"
include "help.lua"
include "game_over.lua"
:: input.lua
--[[pod_format="raw",created="2025-05-19 16:29:01",modified="2025-06-06 02:00:17",revision=56]]
input_lookup = {
	-- Define logical mappings for clarity
	lpad = {
		left = 0,
		right = 1,
		up = 2,
		down = 3
	},
	rpad = {
		left = 8,
		right = 9,
		up = 10,
		down = 11
	},
	buttons = {
		o = 4,
		x = 5,
		menu=6,
		a = 12,
		b = 13
	}
}
function new_input(player)
	return {
	player=player or 0,
	_button_down_frame = {},
button=function(self, b, hold)
	local now = t()
	if type(b) ~= "table" then
		b = {b}
	end
	local key = join_with_dashes(b)

	if all_buttons_pressed(b, self.player) then
		local start = self._button_down_frame[key]
		if not start then
			self._button_down_frame[key] = now
			return 1  -- just pressed
		end

		local held = now - start 

		if hold then
			if held >= hold then
				if held >= hold + 0.1 then  -- small extra time past charge (you can adjust)
					return 4  -- overheld
				else
					return 3  -- finished charging
				end
			else
				return 2  -- still holding
			end
		else
			return held  -- legacy: how long held (seconds)
		end
	else
		self._button_down_frame[key] = nil
		return nil
	end
end,
		button_press=function(self,b)
			return btnp(b,self.player)
		end
	}
end
function join_with_dashes(arr)
	local result = ""
	for i = 1, #arr do
		result ..= arr[i]
		if i < #arr then
			result ..= "-"
		end
	end
	return result
end
function all_buttons_pressed(buttons, player)
	player = player or 0  -- default to player 0 if not specified
	for i = 1, #buttons do
		if not btn(buttons[i], player) then
			return false
		end
	end
	return true
end
:: levels.lua
--[[pod_format="raw",created="2025-06-04 13:56:27",modified="2025-06-07 00:31:58",revision=240]]
get_levels=function()
	return{		
				new_level(level1_start(),level1_end(),{
				new_parts_scene(60*5,30),
				new_asteroid_scene(60*10,60),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_parts_scene(60*5,30),
				new_asteroid_scene(60*20,15),
				new_asteroid_scene(60*20,10),
				new_cargo_scene(60*5,30),
				new_pirate_scene(60*5,120),
				new_scene(60*5,600)
			},
			10),
			new_level(level2_start(),level2_end(),{
				new_parts_scene(60*5,30),
				new_asteroid_scene(60*10,60),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_parts_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,15),
				new_asteroid_scene(60*20,10),
				new_pirate_scene(60*5,120),
				new_scene(60*5,600)
			},
			15),		
			new_level(level3_start(),level3_end(),{
			new_parts_scene(60*5,30),
				new_asteroid_scene(60*10,60),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_parts_scene(60*5,30),
				new_pirate_scene(60*5,120),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,15),
				new_pirate_scene(60*5,120),
				new_parts_scene(60*5,30),
				new_cargo_scene(60*5,30),
				new_asteroid_scene(60*20,30),
				new_scene(60*5,600)
			},
			20)
	}
end


new_level=function(start_screen,end_screen,scenes,goal)
	return{
		start_screen=start_screen,
		end_screen=end_screen,
		scenes=scenes,
		goal=goal
	}
end


:: lib.lua
--[[pod_format="raw",created="2025-05-19 15:05:26",modified="2025-06-06 02:00:17",revision=11]]
--lib

-- pq-debugging, by pancelor

-- quotes all args and prints to host console
-- usage:
--   pq("handles nils", many_vars, {tables=1, work=11, too=111})
function pq(...)
  printh(qq(...))
  return ...
end

-- quotes all arguments into a string
-- usage:
--   ?qq("p.x=",x,"p.y=",y)
function qq(...)
  local args=pack(...)
  local s=""
  for i=1,args.n do
    s..=quote(args[i]).." "
  end
  return s
end

-- quote a single thing
-- like tostr() but for tables
-- don't call this directly; call pq or qq instead
function quote(t, depth)
  depth=depth or 4 --avoid inf loop
  if type(t)~="table" or depth<=0 then return tostr(t) end

  local s="{"
  for k,v in pairs(t) do
    s..=tostr(k).."="..quote(v,depth-1)..","
  end
  return s.."}"
end

-- like sprintf (from c)
-- usage:
--   ?qf("%/% is %%",3,8,3/8*100,"%")
function qf(fmt,...)
  local parts,args=split(fmt,"%"),pack(...)
  local str=deli(parts,1)
  for ix,pt in ipairs(parts) do
    str..=quote(args[ix])..pt
  end
  if args.n~=#parts then
    -- uh oh! mismatched arg count
    str..="(extraqf:"..(args.n-#parts)..")"
  end
  return str
end
function pqf(...) printh(qf(...)) end
:: lightroad.lua
--[[pod_format="raw",created="2025-05-20 20:49:16",modified="2025-05-29 19:06:59",revision=684]]
new_lightroad=function()
	return{
		beam_timer=new_timer(0,0,function(obj)
			local beam=new_beam(obj)
			beam.position= new_point(obj.left+random(obj.right-obj.left),-16)
			beam.color=pick_random(obj.beam_colors)
			beam.speed=new_point(0,random(10)+5)
			beam.size=random(200)
			add(obj.decorations,beam)	
		end	
		),
		star_timer=new_timer(2,0,function(obj)
			local star=new_star(obj)
			local size=random(2)
			star.position= new_point(obj.left+random(obj.right-obj.left),-16)
			star.color=obj.star_colors[3-flr(size)]
			star.speed=new_point(0,size+2)
			star.size=0
			add(obj.decorations,star)	
		end	
		),
		--spawn_rate=0,
		--timer=0,
		left=0,
		right=480,
		decorations={},
		--colors={2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30},
		beam_colors={20,4,21,2,23,1,18,19},
		star_colors={7,6,5},
		update=function(self)
			self.beam_timer:update(self)
			self.star_timer:update(self)

			foreach(self.decorations, function(deco)
	    		deco:update()
	 	 	end)
		end,
		draw=function(self)
			foreach(self.decorations, function(deco)
	    		deco:draw()
	 	 	end)
		end,

		
}
end

new_decoration=function(parent)
	return{
		_parent=parent,
		position=new_point(0,0),
		speed=new_point(0,0),
		size=1,		
		color=2,
		update=function(self)
			self.position+=self.speed
		end,
		draw=function(self)
		end,
		kill = function(self)
			del(self._parent.decorations,self)
		end
}
end

new_beam=function(parent)
	local ret = new_decoration(parent)
	ret.baseupdate=ret.update
	ret.update=function(self)
		ret:baseupdate()
		if(is_point_on_screen(self.position+new_point(0,-self.size/2))==false	and is_point_on_screen(self.position+new_point(0,self.size/2))==false	) then 
			self:kill()
		end
	end
	ret.draw=function(self)
		line(self.position.x,self.position.y-self.size/2,self.position.x,self.position.y+self.size/2,self.color)
	end
	return ret
end
new_star=function(parent)
	local ret = new_decoration(parent)
	ret.baseupdate=ret.update
	ret.update=function(self)
		ret:baseupdate()
		if(is_point_on_screen(self.position)==false) then 
			self:kill()
		end
	end
	ret.draw=function(self)
		circfill(self.position.x,self.position.y,self.size,self.color)
	end
	return ret
end

:: main.lua
--[[pod_format="raw",created="2025-05-19 14:05:35",modified="2025-06-07 00:31:58",revision=1545]]
include "include.lua"
tileSize=16
halfTileSize=tileSize/2
screenWidth=480 --30 tiles
screenHeight=270 --16+ tiles
screenHeightTileAdjusted=256 
mode=1
input=new_input(0)
game=nil
levels=nil
current_level=0
modes= { new_start(), new_help(),0,0,0,new_gameover(),new_win()}

mode_keys={
	start=1,
	help=2,
	level_start=3,
	game=4,
	level_end=5,
	game_over=6,
	win=7,
}

function	restart()
	pq("----------------restart-----------------")
	current_level=1
	levels=get_levels()
	mode=mode_keys.start
	modes[mode]:init()
end

function next_screen()
	mode+=1
	pq("----------------mode "..mode.."-----------------")
	local level =levels[current_level]
	if(mode==mode_keys.level_start) then
		pq("setting up a level")
		modes[mode_keys.level_start]=level.start_screen
		local ngame=new_game()
		modes[mode_keys.game]=ngame
		ngame._director=new_director()
		ngame._director.scenes=level.scenes
		ngame._director.goal=level.goal
		if(game!=nil) then 
			ngame.bank=game.bank
		end
		game=ngame
		modes[mode_keys.level_end]=level.end_screen
	end
	modes[mode]:init()
end

function next_level()
	if(current_level+1>#levels) then
		win()
	else	
		current_level+=1
		pq("----------------level "..current_level.."-----------------")
		mode=mode_keys.level_start-1
		next_screen()
	end
end

function	gameover()
	mode=mode_keys.game_over
	modes[mode]:init()
end
function	win(score)
	modes[mode_keys.win]=new_win(score)
	mode=mode_keys.win
	modes[mode]:init()
end
function _init()	
	pq("----------------start-----------------")
	restart()
end

function _update()
	modes[mode]:update()
end
function _draw()
	modes[mode]:draw()
end


include "error_explorer.lua"
:: particle_system.lua
--[[pod_format="raw",created="2025-05-25 03:10:34",modified="2025-05-26 01:13:00",revision=43]]
function new_particle_system()
	return{
		sprites =game.sprites1,
		particles={},
		age=0,
		lifetime=60,
		spawn_rate=0.25; 
		particle_animation={},
		particle_flipx_r=false,
		particle_flipy_r=false,
		particle_lifetime=60,
		particle_halflife=1,
		position=new_point(0,0),
		particle_radial=false,
		particle_position_r=new_point(0,0),
		particle_speed=new_point(0,0),
		particle_speed_r=new_point(0,0),
		particle_acceleration=new_point(0,0),
		particle_acceleration_r=new_point(0,0),
		particle_update=nil, --leave nil for default behavior
		init=function(self)
			
		end,
		update=function(self)
			foreach(self.particles, function(particle)
    			particle:update()
 	 		end)
 	 		if( self.age>self.lifetime) then
 	 			if(#self.particles==0) then
 	 		 		self:die(game.particle_systems)
 	 		 	end
 	 		 	return
 	 		end
			if(self.spawn_rate>1) then
				for i=1,self.spawn_rate,1 do
					self:spawn()
				end
			else
				local inverse=1/self.spawn_rate
				if(self.age%inverse==0) then
					self:spawn()
				end
			end	
			self.age+=1
		end,
		draw=function(self)
			foreach(self.particles, function(particle)
    			particle:draw()
 	 		end)
		end,
		die=function(self,particle_system_container)
			del(particle_system_container,self)
		end,
		spawn=function(self)
			local particle=new_particle()
			particle.animation=self.particle_animation
			particle.lifetime=self.particle_lifetime
			particle.halflife=self.particle_halflife
			particle.position=self.position:randomize(self.particle_position_r)
			local speed=self.particle_speed:randomize(self.particle_speed_r)
			if(self.particle_radial) then
				speed=speed:square_to_circle()
			end
			particle.speed=	speed
			local acceleration=self.particle_acceleration:randomize(self.particle_acceleration_r)
			if(self.particle_radial) then
				acceleration=acceleration:square_to_circle()
			end	
			particle.acceleration=acceleration
		
			particle.particle_container=self.particles
			if(self.particle_flipx_r) then
				particle.flipx=rnd()>0.5
			end
			if(self.particle_flipy_r) then
				particle.flipy=rnd()>0.5
			end				
			particle.update=self.particle_update or particle.update
			add(self.particles,particle)
		end
	}
end
function new_particle()
	return{
		sprites =game.sprites1,
		particle_container,
		animation={},
		age=0,
		lifetime=60,
		halflife=1,
		position=new_point(0,0),
		speed=new_point(0,0),
		acceleration=new_point(0,0),
		flipx=false,
		flipy=false,
		init=function(self)
			
		end,
		update=function(self)
			self.position+=self.speed
			self.speed+=self.acceleration
			self.age+=1
		 		if(self.lifetime>=0 and self.age>self.lifetime) then
		 			self:die(self.particle_container)
		 		end
		 		if(rnd()>self.halflife) then
			 		self:die(self.particle_container)
		 		end
		end,
		draw=function(self)			
			spr(self.sprites[self.animation[self.age%#self.animation+1 ]].bmp,self.position.x,self.position.y,self.flipx,self.flipy)
		end,
		die=function(self,sprites)
			del(sprites,self)
		end
	}
end
	

:: parts.lua
--[[pod_format="raw",created="2025-05-19 15:12:11",modified="2025-06-07 00:31:58",revision=1819]]
function new_part(position)
	return{
		_position=position,
		_sprite=0,
		_sprites,
		name="dummy",
		attach_sides = {
			["1,0"] = true,   -- right
			["-1,0"] = true, -- left
			["0,-1"] = true,  -- up
			["0,1"] = true   -- down
		},
		mass=1,
		thrust=0,
		worth=1,
		fragile=false,
		_energy=0,
		_energy_max=0,
		_energy_regen=0,

		location=nil,
		init=function(self)
			self._sprites=game.sprites1
		end,
		can_use=function(self)
			return self._energy_max>0 and self._energy>=self._energy_max
		end,
		can_regen=function(self)
			return true
		end,
		update=function(self)		
			if(self:can_regen()) then
				self._energy=min(	self._energy+self._energy_regen,self._energy_max)
			end
		end,
		draw=function(self)
			if(self:can_use()==false)then
				pal(11,19)
			end
			spr(self._sprites[self._sprite].bmp,self._position.x,self._position.y)
			pal()
			local acc=game._ship.acceleration:length()
			if(self.location!=nil and self.thrust>0 and acc>0 ) then			
				local particle_system= new_particle_system()
	 			particle_system.spawn_rate=self.thrust*4
				particle_system.lifetime=.25
				particle_system.position=self._position+new_point(0,8)
				--particle_system.particle_position_r=new_point(-8,-16)
				particle_system.particle_speed=(game._ship.acceleration*-3*self.thrust)
				particle_system.particle_speed_r=new_point(.1,.1)
				particle_system.particle_halflife=0.95
				particle_system.particle_animation={58,59}
				particle_system.particle_flipx_r=true
				particle_system.particle_flipy_r=true
				add(game.particle_systems,particle_system)
			end
			
		end,
		set_position=function(self,position)
			self._position=position+self.location*16
		end,
		kill=function(self)
			camera_helper:shake_camera(5, 30 )
			for i=1,#game._ship.parts do
				local part=game._ship.parts[i]
				if(part.defend!=nil) then
					if(part:defend(self)) then
						return false
					end
				end
			end		
			del(game._ship.parts,self) --fix
			
 			local particle_system= new_particle_system()
 			particle_system.spawn_rate=1
			particle_system.lifetime=10
			particle_system.position=self._position:round(tileSize)
			particle_system.particle_position_r=new_point(-8,-8)
			particle_system.particle_speed_r=new_point(-.5,-.5)
			particle_system.particle_halflife=0.99
			particle_system.particle_animation={57}
			particle_system.particle_flipx_r=true
			particle_system.particle_flipy_r=true
			add(game.particle_systems,particle_system)
		  	
			return true
		end
	}
end
function new_part_command(position)
	local ret = new_part(position)
	ret._sprite=1
	ret.thrust=.25
	ret.name="command"
	ret.worth=0
	ret.basekill=ret.kill
	ret.kill=function(self)
		if(self:basekill()) then
			game:death()
		end
	end
	return ret	
end
function new_part_engine(position)
	local ret = new_part(position)
	ret._sprite=2
	ret.thrust=1	
	ret.name="engine"
	ret.attach_sides = {
		["1,0"] = false,   -- right
		["-1,0"] = false, -- left
		["0,-1"] = true,  -- up
		["0,1"] = false   -- down
	}
	return ret	
end
function new_part_bulkhead(position)
	local ret = new_part(position)
	ret._sprite=4
	ret.mass=2
	ret.name="bulkhead"
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = false   -- down
		}
	return ret	
end
function new_part_scaffold(position)
	local ret = new_part(position)
	ret._sprite=12
	ret.name="scaffold"
	return ret	
end
function new_part_cargo1(position)
	local ret = new_part(position)
	ret._sprite=9
	ret.mass=2
	ret.worth=2
	ret.name="treasure"
	ret.fragile=true
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = false   -- down
		}
	return ret	
end
function new_part_cargo2(position)
	local ret = new_part(position)
	ret._sprite=10
	ret.mass=3
	ret.worth=3
	ret.name="treasure"
	ret.fragile=true
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = false   -- down
		}
	return ret	
end
function new_part_cargo3(position)
	local ret = new_part(position)
	ret._sprite=11
	ret.mass=1
	ret.worth=5
	ret.name="treasure"
	ret.fragile=true
	ret.basekill=ret.kill
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = false   -- down
		}
	ret.kill=function(self)
		if(self:basekill()) then
			if(#game._ship.parts) then --sometimes tries to destroy it twice?
				game._ship.parts[1]:kill()
			end
		end
	end
	return ret	
end
function new_part_gun(position)
	local ret = new_part(position)
	ret._sprite=3
	ret.name="gun"
	ret._energy_max=30
	ret._energy_regen=0.5
	ret._target=nil	
	ret._gun_arc=8
	ret.attach_sides = {
			["1,0"] = false,   -- right
			["-1,0"] = false, -- left
			["0,-1"] = false,  -- up
			["0,1"] = true   -- down
		}
	ret.baseupdate=ret.update
	ret.update=function(self)
		self:baseupdate()
		if(self:can_use()) then
			for i=1,#game.asteroids do
				local asteroid= game.asteroids[i]
				if(block_collision(asteroid._position,new_point(tileSize,tileSize) 
				,new_point(self._position.x+halfTileSize-self._gun_arc,0)
				,new_point(self._gun_arc,self._position.y)) )then
					if(asteroid.name=="large") then					
						self._target=asteroid
						play_sfx(4, channels.ship)
					end
				end
			end
			
			for i=1,#game.pirates do
				local pirate= game.pirates[i]
				if(block_collision(pirate._position,new_point(tileSize,tileSize) 
				,new_point(self._position.x+halfTileSize-self._gun_arc,0)
				,new_point(self._gun_arc,self._position.y)) )then
									
					self._target=pirate
					play_sfx(4, channels.ship)
					
				end
			end	
	
		end
		if(self._target!=nil) then
			self._energy-=1
			if(self._target:damage(1)<1) then
				self._target=nil
				stop_sfx(4, channels.ship)
			end
		end
		if(self._energy<=0) then
			self._target=nil
			stop_sfx(4, channels.ship)
		end		
	end	
	--ret.basedraw=ret.draw
	ret.draw2=function(self)
		--self:basedraw()
		if(self._target!=nil) then
			line(self._position.x+halfTileSize,self._position.y+halfTileSize,
				self._target._position.x+halfTileSize,self._target._position.y+halfTileSize,11)
		end
	end
	ret.basekill=ret.kill
	ret.kill=function(self)
		if(self:basekill()) then
			stop_sfx(4, channels.ship)
		end
		
	end	

	ret.can_regen=function(self)
		return self._target==nil
	end
	return ret	
end

function new_part_shield(position)
	local ret = new_part(position)
	ret._sprite=5
	ret.name="shield"
	ret._energy_max=120
	ret._energy_regen=0.5
	ret._shield_time=0
	ret._target=nil 
	ret.fragile=true
	ret.attach_sides = {
		["1,0"] = false,   -- right
		["-1,0"] = false, -- left
		["0,-1"] = false,  -- up
		["0,1"] = false   -- down
	}
	ret.defend=function(self,part)
		if(self:can_use()) then
			self._energy=0
			ret._shield_time=30
			ret._target=part--._position+new_point(halfTileSize,halfTileSize)
			return true
		end
		return false
	end
	ret.baseupdate=ret.update
	ret.update=function(self)
		self:baseupdate()
		self._shield_time=max(0,self._shield_time-1)
	end
	--ret.basedraw=ret.draw
	ret.draw2=function(self)
		--ret:basedraw()
		if(self._shield_time>0) then
			line(self._position.x+halfTileSize,self._position.y+halfTileSize,
				self._target._position.x+halfTileSize,self._target._position.y+halfTileSize,12)
			circfill(self._target._position.x+halfTileSize,self._target._position.y+halfTileSize,8,12)
		end
	end
	return ret
end


:: pirate.lua
--[[pod_format="raw",created="2025-05-30 23:52:06",modified="2025-06-03 13:32:01",revision=258]]
new_pirate=function()
return {
	_position=nil,
	_speed=new_point(0,0),
	_sprites,
	_sprite=72,
	_thrust=1,
	_visit_points={},
	_visit_step=1,
	_shoot_timer=nil,
	health=30,
	init=function(self)
		self._sprites=game.sprites1
		self._position=random_offscreen_point()
		add(self._visit_points, random_onscreen_point())	
		add(self._visit_points, random_onscreen_point())
		add(self._visit_points, random_onscreen_point())
		add(self._visit_points, random_offscreen_point())
		
		self._shoot_timer= new_timer(130,0,self.do_shoot) 
	end,
	update=function(self)
		pq(self._visit_step)
		local point= self._visit_points[self._visit_step]
		self._speed=self._position:unitVector(point)
		self._position+=self._speed
		self._shoot_timer:update(self)
		if(abs((self._position-point):length())<self._thrust) then
			self._visit_step+=1
			if(self._visit_step>#self._visit_points) then
				self:kill(3)
			end
		end
		
	end,
	draw=function(self)		
		local particle_system= new_particle_system()
			particle_system.spawn_rate=0.5
		particle_system.lifetime=.25
		particle_system.position=self._position+new_point(0,0)
		particle_system.particle_speed=(self._speed*-1)
		particle_system.particle_speed_r=new_point(.1,.1)
		particle_system.particle_halflife=0.95
		particle_system.particle_animation={58,59}
		particle_system.particle_flipx_r=true
		particle_system.particle_flipy_r=true
		add(game.particle_systems,particle_system)

		spr(self._sprites[self._sprite].bmp,self._position.x,self._position.y)
	end,
	kill=function(self,mode)--0 hit, 1 deflected, 2 destroyed, 3 passed
		if(mode!=3) then			
			local particle_system= new_particle_system()
 			particle_system.spawn_rate=1
			particle_system.lifetime=10
			particle_system.position=self._position:round(tileSize)
			particle_system.particle_position_r=new_point(-8,-8)
			particle_system.particle_speed_r=new_point(-.5,-.5)
			particle_system.particle_halflife=0.99
			particle_system.particle_animation={57}
			particle_system.particle_flipx_r=true
			particle_system.particle_flipy_r=true
			add(game.particle_systems,particle_system)
		end
		del(game.pirates,self)
	end,
	do_shoot=function(self)
		local bullet=new_bullet(self._position,self._position:unitVector(game._ship._position))
		bullet:init()
		add(game.bullets,bullet)
	end,
		damage=function(self,d)
			self.health-=d
			if(self.health<1) then
				self:kill(2)
			end
			return self.health
		end,
}
end

new_bullet=function(position,direction)
return{
	_position=position,
	_speed=direction,
	_sprites,
	_sprite=80,
	_thrust=2,
	init=function(self)
		self._sprites=game.sprites1
		self._speed*=self._thrust
	end,	
	update=function(self)
		self._position+=self._speed
		if(is_point_on_screen(self._position)==false) then
			self:kill(3)
		end
	end,
	draw=function(self)
		spr(self._sprites[self._sprite].bmp,self._position.x,self._position.y)
	end,
	kill=function(self,mode)--0 hit, 1 deflected, 2 destroyed, 3 passed
		if(mode!=3) then			
		
		end
		del(game.bullets,self)
	end
}
end
:: point.lua
--[[pod_format="raw",created="2025-05-19 15:09:53",modified="2025-06-03 13:32:43",revision=747]]
function new_point(x,y)
	return sm({
		x=x,
		y=y,
		unitVector=function(self,b)
			return self.normalize(b-self)
		end,
		randomize=function(self,p)
			return new_point(self.x+random(p.x),	self.y+random(p.y))
		end,
		absPoint=function(p)
			return new_point(abs(p.x),abs(p.y))
		end,
		round=function(p,n)
			return new_point(flr(p.x/n+.5)*n,flr(p.y/n+.5)*n)
		end,
		clone=function(p)
			return new_point(p.x,p.y)
		end,
		length=function(p)
			return sqrt(p.x^2+p.y^2)
		end,
		square_to_circle=function (p)
	    local a = math.max( math.abs(p.x), math.abs(p.y)) -- max(|x|, |y|)
	    local mag = math.sqrt(p.x * p.x + p.y * p.y)
	
	    if mag == 0 then
	        return 0, 0 -- Origin stays at origin
	    end
	
	    local scale = a / mag
	    return new_point(p.x * scale, p.y * scale)
		end,
		__add=function(a,b)
			return new_point(a.x+b.x,a.y+b.y)
		end,
		__mul=function(a,b)
			return new_point(a.x*b,a.y*b)
		end,
		__sub=function(a,b)
			return new_point(a.x-b.x,a.y-b.y)
		end,
		equals=function(self,b)
			if(b == nil) then
				return false
			end
			return self.x==b.x and self.y==b.y
		end,
		__tostring=function()
			return "point"
		end,
		lerp=function(self, a, t)
		-- a and b are points, t is a number between 0 and 1
			local math=self + (a - self) * t
			--pq(self.x,a.x,t,math.x)
			return math
		end,
		box=function(self,left, top, right, bottom)
			self.x=mid(left,self.x,right)
			self.y=mid(top,self.y,bottom)
		end,
		normalize=function(p)
			local len = sqrt(p.x^2 + p.y^2)
			if len == 0 then return new_point(0, 0) end
			return new_point(p.x / len, p.y / len)
		end
	})
end

:: screen.lua
--[[pod_format="raw",created="2025-06-03 13:46:12",modified="2025-06-07 00:31:58",revision=400]]
function new_screen()
	return{
	sprites,
	image,
	text={},
	start_time=nil,
	wait_time=0.1,
	init=function(self)
		camera_helper:set_camera(new_point(0,0),true)
		
		stop_sfx()
		music(-1)
		self.sprites=	fetch("./gfx/0.gfx")	
		self.start_time=time()
	
	end,
	update=function(self)
		camera_helper:update_camera()
		if(self.start_time+self.wait_time<time()) then
			if(btnp()>0) then
			  self.next_screen_action()
			end
		end

	end,
	next_screen_action=function()
		 next_screen()
	end,
	draw=function(self)
		cls()
		spr(self.sprites[self.image].bmp,(480-200)/2,0)
		for i=1,#self.text do
			local t=self.text[i]
			print_centered(t,200+i*10,9)
		end
	end}
	
end

function new_gameover()
	local ret=new_screen()
	ret.wait_time=3
	ret.image=202
	ret.text={
		"You didn't make it.",
		"Or maybe you just didn't get enough money.",
		"Either way there is no going back.",
		"At least where you ejected near a space gas station.",
		"Cleaning space toilets won't save your dogs, but it will keep you fed.",
		"Better luck next life!"
	}

	ret.next_screen_action=function()
		 restart()
	end
	return ret	
end

function new_win()
	local ret=new_screen()
	ret.wait_time=1
	ret.image=203
	ret.text={
		"That's it for now!",
		"But Lucky willing, there is more Junk Haulers",
		"coming soon to space near you"

	}

	ret.next_screen_action=function()
		 restart()
	end
	return ret	
end


function level1_end(score)
	local ret=new_screen()
	ret.wait_time=1
	ret.image=201
	ret.text={
		"You made it home just in time.",
		"Lucky was lucky, and is all better now.",
		"Let's hope nothing else goes wrong."
	}
	ret.next_screen_action=function()
		 next_level()
	end
	return ret
	
end

function level1_start()
	ret=new_screen()
	ret.image=200
	ret.text={
		"You have been a junk hauler your entire life.",
		"When you retired, you opened a dog orphanage on a small asteroid",
		"Things were great for a while, but donations have run low",
		"Lucky needs surgery, That will cost 10,000 space bucks",
		"It's time to haul junk again"
	}
	return ret

end

function level2_end(score)
	local ret=new_screen()
	ret.wait_time=1
	ret.image=209
	ret.text={
		"Luna is doing great!",
		"All other dogs have been vaccinated",
		"You do have a sinking feeling you;re forgetting something.",
		"Something important..."
,
	
	}
	ret.next_screen_action=function()
		 next_level()
	end
	return ret
	
end

function level2_start()
	ret=new_screen()
	ret.image=208
	ret.text={
		"Luna has space chickenpox.",
		"Or is it spacechicken pox?",
		"You don't know, you're not a space vet",
		"You do know it will cost 15,000 space bucks.",
		"Better hurry before more dogs catch it!"
	}
	return ret

end

function level3_end(score)
	local ret=new_screen()
	ret.wait_time=1
	ret.image=217
	ret.text={
		"You did it. You paid for everything.",
		"The asteroid is now really yours.",
		"You do know this though.",
		"Junk hauling is in your blood, and you will never give it up."
	}
	ret.next_screen_action=function()
		 next_level()
	end
	return ret
	
end

function level3_start()
	ret=new_screen()
	ret.image=216
	ret.text={
		"So it turns out if you aren't home, bills don't just get paid.",
		"It's going to cost 20,000 credits to sort this one out.",
		"You know what to do."
	}
	return ret

end

:: sfx.lua
--[[pod_format="raw",created="2025-05-20 16:55:03",modified="2025-06-07 00:31:58",revision=335]]
channels={
	ship=5,
	enemy=6,
	engine=7
}

sfx_channels = {}
function play_sfx(sfx_id, channel,loop,restart)
	data = sfx_channels[channel]
	if data and (restart or false) and data.sfx_id == sfx_id then
		return
	end
	
		sfx(sfx_id, channel, loop)
		sfx_channels[channel] = {
			sfx_id = sfx_id,
			loop = loop,
			start_time = t()  -- use time() if preferred
		}

end

-- Stop SFX only if the given sfx is currently playing on the channel
function stop_sfx(sfx_id, channel)
	if channel then
		-- Stopping on a specific channel
		local data = sfx_channels[channel]
		if data and (sfx_id == nil or data.sfx_id == sfx_id) then
			sfx(-1, channel)
			sfx_channels[channel] = nil
		end
	elseif sfx_id == nil then
		-- No channel and no sfx_id: stop everything
		for ch, data in pairs(sfx_channels) do
			sfx(-1, ch)
			sfx_channels[ch] = nil
		end
		sfx(-1,channels.engine)

	end
end
:: ship.lua
--[[pod_format="raw",created="2025-05-19 15:07:48",modified="2025-06-06 02:00:17",revision=1912]]
function new_ship(position)
	return{
		parts={},
		_position=position,
		_speed=new_point(0,0),
		_mass=0,
		_thrust=0,
		_boost=1, --fudge number
		worth=0,
		acceleration=new_point(0,0),
		init=function(self)
			local command=new_part_command(self._position)
			command.location=new_point(0,0)
			command:init()
			add(self.parts,command) 
			self:update_ship()
		end,
		update=function(self)
			self.acceleration=new_point(0,0)
			local boost = self._thrust/self._mass*self._boost
			if input:button(input_lookup.lpad.left) then --left
			   self.acceleration.x-=boost
		   elseif input:button(input_lookup.lpad.right) then --right
			   self.acceleration.x+=boost
		   end
		  	
		  	if input:button(input_lookup.lpad.up) then --left
			   self.acceleration.y-=boost
		   elseif input:button(input_lookup.lpad.down) then --right
			   self.acceleration.y+=boost
		   end   
		  	 self._speed+=self.acceleration 
		  	if(self.acceleration:length()>0) then
		  		--play_sfx(5,channels.ship)
		  		note(48,5,self._thrust*5,'t', 10,channels.engine,false,false)
		  	else
		  		sfx(-1,channels.engine)
		  	end	
		  
			self._position+=self._speed --apply velocity
			self._position:box(0,0,screenWidth-tileSize,screenHeight-tileSize)
			self._speed*=0.90
			foreach(self.parts, function(part)
				part:set_position(self._position)
	    		part:update()
	 	 	end)	
	 	 	self:do_part_pickups()
			self:do_asteroids()
			self:do_pirates()
			self:do_bullets()
		end,
		draw=function(self)
	 	 	foreach(self.parts, function(part)
	    		part:draw()
	 	 	end)
	 	 	foreach(self.parts, function(part)
	 	 		if(part.draw2!=nil)then
	 	 			part:draw2()
	 	 		end
	 	 	end)
		end,
		do_part_pickups=function(self)
			local dimension= new_point(16,16)
	 	 	for i = 1, #game.free_parts do				
				local free_part = game.free_parts[i]			
				for j = 1, #self.parts do
					local ship_part = self.parts[j]		
					local result = block_collision(free_part._position, dimension, ship_part._position, dimension)
					if result != nil then
						local attached=self:attach_part(ship_part,free_part,result)
						if(attached==false) then
							free_part._speed+=result*0.005
						end
						return  -- exit both loops early
					end
				end
			end
		end,	
		do_pirates=function(self)
			local dimension= new_point(16,16)
			for i = 1, #game.pirates do				
				local pirate = game.pirates[i]			
				for j = 1, #self.parts do
					local ship_part = self.parts[j]
					local result = block_collision(pirate._position, dimension, ship_part._position, dimension)--fix
					if result != nil then
						pirate:kill(0)
						ship_part:kill()
						self:update_ship()
						return
					end
				end
			end
		end,
		do_bullets=function(self)
			local dimension= new_point(12,12)
			for i = 1, #game.bullets do				
				local bullet = game.bullets[i]			
				for j = 1, #self.parts do
					local ship_part = self.parts[j]
					local result = block_collision(bullet._position, dimension, ship_part._position, dimension)--fix
					if result != nil then
						bullet:kill(0)
						ship_part:kill()
						self:update_ship()
						return
					end
				end
			end
		end,
		do_asteroids=function(self)
			local dimension= new_point(16,16)
			for i = 1, #game.asteroids do				
				local asteroid = game.asteroids[i]			
				for j = 1, #self.parts do
					local ship_part = self.parts[j]
					local result = block_collision(asteroid._position, dimension, ship_part._position, dimension)--fix
					if result != nil then
						
						if(asteroid.threat<2 and  ship_part.fragile==false) then --todo: consolidate check connector better
							local cardinal=cardinal_direction(result,0)
							local key = cardinal.x .. "," .. cardinal.y						
							local can_hurt = ship_part.attach_sides[key]
							if(can_hurt==false) then
								asteroid:kill(1)
								return
							end
						end
						asteroid:kill(0)
						ship_part:kill()
						self:update_ship()
						return
					end
				end
			end
		end,
		update_ship=function(self)
			local unattached=find_unattached_parts(self.parts)	
			for i = 1, #unattached do
				local part=unattached[i]
				part:kill()
			end
	
			self._mass=0
			self._thrust=0
			self.worth=0
			foreach(self.parts, function(part)
				self._mass+=part.mass
				self._thrust+=part.thrust
				self.worth+=part.worth
	 	 	end)
		end,
		attach_part=function(self,ship_part,free_part,collision_result)
			local direction=cardinal_direction(collision_result,8)
			if(direction!= nil and parts_can_attach(ship_part, free_part.part, direction))then				
				local new_location=ship_part.location+ direction
				for i = 1, #self.parts do --check if this spot is already taken
					local ship_part = self.parts[i]	
					if(new_location:equals(ship_part.location)) then 
						return false
					end				
				end
				free_part.part.location=new_location
				add(self.parts,free_part.part)
				del(game.free_parts,free_part)
				self:update_ship()
				play_sfx(2,channels.ship)
				return true
			else
				return false				
			end
			
		end
		
	}
end
function loc_key(p)
		return p.x .. "," .. p.y
end
function find_unattached_parts(parts)
	local visited = {}
	local part_map = {}

	-- Build lookup by location
	for _, part in pairs(parts) do
		part_map[loc_key(part.location)] = part
	end

local directions = {
	{ dx = 1, dy = 0 },
	{ dx = -1, dy = 0 },
	{ dx = 0, dy = 1 },
	{ dx = 0, dy = -1 }
}

function flood_fill(part)
	local key = loc_key(part.location)
	if visited[key] then return end
	visited[key] = true

	for _, dir in ipairs(directions) do
		local dx, dy = dir.dx, dir.dy
		local neighbor_pos = new_point(part.location.x + dx, part.location.y + dy)
		local neighbor_key = loc_key(neighbor_pos)
		local neighbor = part_map[neighbor_key]

		if neighbor then
			-- If either side allows attachment
			local dir_key = dx .. "," .. dy
			local reverse_key = (-dx) .. "," .. (-dy)

			local this_allows = part.attach_sides[dir_key]
			local neighbor_allows = neighbor.attach_sides[reverse_key]

			if this_allows or neighbor_allows then
				flood_fill(neighbor)
			end
		end
	end
end

	-- Start from origin part at (0,0)
	local start = part_map["0,0"]
	if start then
		flood_fill(start)
	end

	-- Now collect any parts not visited
	local unattached = {}
	for _, part in pairs(parts) do
		if not visited[loc_key(part.location)] then
			add(unattached, part)
		end
	end

	return unattached
end
function parts_can_attach(partA, partB, direction)
	local key = direction.x .. "," .. direction.y
	local reverse_key = (-direction.x) .. "," .. (-direction.y)

	local a_can_attach = partA.attach_sides[key]
	local b_can_attach = partB.attach_sides[reverse_key]

	return a_can_attach or b_can_attach
end
:: start.lua
--[[pod_format="raw",created="2025-05-20 16:44:31",modified="2025-06-06 02:00:17",revision=799]]
function new_start()
	return{
	sprites,
	init=function(self)
		camera_helper:set_camera(new_point(0,0),true)
		self.sprites=	fetch("./gfx/0.gfx")	
	end,
	update=function(self)
		camera_helper:update_camera()
		if(btnp()>0) then
		 next_screen()
		end

	end,
	draw=function(self)
		cls()
		spr(self.sprites[192].bmp,(480-200)/2,20)
		print_centered("Time to haul",200,8)
		print_centered("Press any button",220,({7,7,6,13,5,0,5,13,6,7,7})[flr(t()*10)%11+1]) 	

	end}
	
end

:: .info.pod
b64$LS1bW3BvZCxjcmVhdGVkPSIyMDI1LTA1LTE5IDE0OjE0OjE1Iixtb2RpZmllZD0iMjAyNS0w
Ni0wNyAwMDozMTo1OCIscnVudGltZT0xOCx3b3Jrc3BhY2VzPXt7bG9jYXRpb249ImhlbHAubHVh
IzUxIix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJtYWluLmx1YSMxIix3b3Jrc3BhY2Vf
aW5kZXg9MX0se2xvY2F0aW9uPSJwYXJ0cy5sdWEjMSIsd29ya3NwYWNlX2luZGV4PTF9LHtsb2Nh
dGlvbj0iYXN0ZXJvaWQubHVhIzEiLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRpb249ImluY2x1
ZGUubHVhIzEiLHdvcmtzcGFjZV9pbmRleD0xfSx7bG9jYXRpb249ImdhbWUubHVhIzEiLHdvcmtz
cGFjZV9pbmRleD0xfSx7bG9jYXRpb249ImxldmVscy5sdWEjNDEiLHdvcmtzcGFjZV9pbmRleD0x
fSx7bG9jYXRpb249InNjcmVlbi5sdWEjMSIsd29ya3NwYWNlX2luZGV4PTF9LHtsb2NhdGlvbj0i
c2Z4Lmx1YSMxIix3b3Jrc3BhY2VfaW5kZXg9MX0se2xvY2F0aW9uPSJoZWxwZXJzLmx1YSM1MyIs
d29ya3NwYWNlX2luZGV4PTF9LHtsb2NhdGlvbj0iZGlyZWN0b3IubHVhIzEiLHdvcmtzcGFjZV9p
bmRleD0xfSx7bG9jYXRpb249ImdmeC8wLmdmeCIsd29ya3NwYWNlX2luZGV4PTJ9LHtsb2NhdGlv
bj0ibWFwLzAubWFwIix3b3Jrc3BhY2VfaW5kZXg9M30se2xvY2F0aW9uPSJzZngvMC5zZngiLHdv
cmtzcGFjZV9pbmRleD00fX1dXQ==
:: [eoc]
